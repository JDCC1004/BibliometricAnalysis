inproceedings{10.1145/3641555.3704753,
author = {Adhikari, Badri and Hou, Jie},
title = {Teaching Coding in the Age of AI: A Hands-on Tutorial on Process Feedback},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3704753},
doi = {10.1145/3641555.3704753},
abstract = {This tutorial is for CS1 teachers and introduces a novel online compiler that emphasizes the coding process. In a CS1 class, a key to effective learning lies in identifying students' productive and less-productive coding habits. One way to gain such insights is to review the steps students take while coding. Therefore, students need coding tools that collect and display data about their working process. This tutorial introduces CS1 teachers to Process Feedback, a free online compiler that makes the coding process transparent. It enables students to explore their working process so they can self-reflect and learn. By focusing on the process, students are motivated to excel not only in their final code but also in how they approach coding. Analyzing process data also helps students develop critical thinking and metacognitive skills. The compiler also translates compiler-generated error messages to plain English explanations, enabling students to use AI in a safeguarded manner. During the tutorial, participants will learn how they can integrate the Process Feedback compiler into their courses and how their students can use it. The online compiler is available at www.processfeedback.org, and students do not need to create an account to use it. Participants are expected to bring their laptops to the tutorial.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1766–1765},
keywords = {ai-assisted coding, cs1 compiler, feedback on the process},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

inproceedings{10.1145/3626253.3631656,
author = {Grover, Shuchi and Fields, Deborah and Kafai, Yasmin and White, Shana and Strickland, Carla},
title = {Enduring Lessons from 'Computer Science for All' for AI Education in Schools},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3631656},
doi = {10.1145/3626253.3631656},
abstract = {Even as efforts to promote K-12 CS education forge ahead, there is a growing consensus that students must also be taught artificial intelligence (AI) and machine learning (ML) in order to be prepared for the fast-changing world powered by AI/ML. How can ensure that we leverage learnings from two decades of CS education research and practice, and build on successes while mitigating missteps? This panel invites researchers with deep expertise in 'CSForAll' efforts for a timely discussion and sharing of valuable lessons from CS education efforts about pedagogies, attention to equity, and teacher preparation that will also benefit K-12 AI education.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1533–1534},
numpages = {2},
keywords = {artificial intelligence, computational thinking, equity, k-12 ai education, k-12 cs education, machine learning, project-based learning, teacher preparation},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

inproceedings{10.1145/3677619.3677635,
author = {Kahila, Juho and Vartiainen, Henriikka and Arkko, Eetu and Lin, Anssi and Pope, Nicolas and Tedre, Matti},
title = {Enhancing Understanding of Data Traces and Profiling Among K--9 Students Through an Interactive Classroom Game},
year = {2024},
isbn = {9798400710056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3677619.3677635},
doi = {10.1145/3677619.3677635},
abstract = {With the increasing popularity of social media among ever younger children, there is a growing need to educate young learners about the key concepts and mechanisms related to data collection, profiling, and content recommendation on online platforms. This paper presents a gamified K–9 classroom activity where learners analyze data traces to construct and iteratively refine detailed profiles of a mystery online person, thereby learning to recognize the digital traces typical of online interactions. Using data from 163 fifth- and eighth-grade students collected over 11 game sessions, the results demonstrate that the majority of learners were able to analyze and integrate various data traces to assemble coherent profiles, showing an emerging competence in recognizing data collection and profiling in online interactions, including their ubiquity, multimodality, and their consequences. The results also reveal that the learners’ ability to critically reflect on profiling is still developing. This paper contributes to the fields of AI education and social media literacy by demonstrating the feasibility of early education on social media mechanisms.},
booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {4},
numpages = {9},
keywords = {AI education, AI literacy, Artificial intelligence, Datafication, Gamification, K-12, K-9, Profiling, School, Social media literacy, Tracking},
location = {Munich, Germany},
series = {WiPSCE '24}
}

inproceedings{10.1145/3699538.3699557,
author = {Marwan, Samiha and Choquette, Nicki and Catet\'{e}, Veronica and B. Morrison, Briana},
title = {Exploring Novices' Problem-Solving Strategies in Computing and Math Domains},
year = {2024},
isbn = {9798400710384},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3699538.3699557},
doi = {10.1145/3699538.3699557},
abstract = {The hardship students face when beginning to problem solve can lessen motivation and confidence in their programming ability. An initial mitigation step is to explore students’ mindsets when first approaching a programming task, and distinguish between correct/incorrect models of problem-solving. This will help researchers and instructors realize what methods and tools can scaffold students’ problem-solving skill development in programming classrooms. Our goal is to uncover this information by investigating successful problem-solving approaches across the computing and math domains, and exploring whether it is possible to transfer a successful approach from math to the computing domain. We also explore whether students can apply a successful problem-solving strategy, such as problem decomposition, after being reminded or taught that such a strategy exists. We conducted an exploratory qualitative study with high-school students solving math and programming problems. Our data analysis reveals a number of problem-solving strategies in both programming and math, highlights their differences, and demonstrates the transfer problem-solving benefits across domains. We also found that simply instructing students how to apply a problem-solving strategy does not ensure its application. Overall, this research highlights the need to design tools that teach students how to apply successful problem-solving strategies.},
booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
articleno = {48},
numpages = {8},
keywords = {problem decomposition, block-based programming, math problem-solving},
location = {
},
series = {Koli Calling '24}
}

inproceedings{10.1145/3587103.3594181,
author = {Monahan, Robert and Vandenberg, Jessica and Gupta, Anisha and Smith, Andy and Elsayed, Rasha and Fox, Kimkinyona and Hubbard Cheuoua, Aleata and Ringstaff, Cathy and Minogue, James and Oliver, Kevin and Mott, Bradford},
title = {Multimodal CS Education Using a Scaffolded CSCL Environment},
year = {2023},
isbn = {9798400701399},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587103.3594181},
doi = {10.1145/3587103.3594181},
abstract = {There is a growing need for 21st-century workers to be digitally literate and to possess computational thinking and collaborative problem-solving skills. Computer-supported collaborative learning (CSCL) focused on computational thinking can guide students toward the co-development of these skills. In this work, we present our approach to integrating virtual and physical learning modalities into InfuseCS, a CSCL environment. InfuseCS uses problem-based learning scenarios to situate upper elementary school students (ages 8 to 11) in a CSCL setting to foster their computational thinking and science knowledge construction as they collaborate to create digital narratives.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {645},
numpages = {1},
keywords = {CSCL, collaboration, digital narrative, elementary, makerspace},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

inproceedings{10.1145/3653666.3656104,
author = {Yan, Wei and Hovermill, Jeffrey Allen and Prescott, Paige and Amresh, Ashish},
title = {Teaching Computing in Indigenous Schools: An Early Experience Report},
year = {2024},
isbn = {9798400706264},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3653666.3656104},
doi = {10.1145/3653666.3656104},
abstract = {To broaden indigenous students' participation in Computer Science (CS) education, we conducted a research practitioner partnership (RPP) project, where teachers were taught the CS principles lessons offered by Code.org and asked to integrate mobile application development within their current courses. Additionally, modules and guidance were provided on culturally responsive pedagogy (CRP), and an in-classroom implementation of a five-day lesson plan was co-created via a participatory approach. In this experience report, we describe the RPP organization and early findings from our collected teachers' pre/post survey, lesson plans, projects, and students' pre/post survey. The positive outcomes from our RPP project provided valuable teacher learning experiences and actionable, culturally responsive computing lesson plans for the indigenous community.},
booktitle = {Proceedings of the 2024 on RESPECT Annual Conference},
pages = {201–205},
numpages = {5},
keywords = {CS education, culturally responsive computing, high school, indigenous},
location = {Atlanta, GA, USA},
series = {RESPECT 2024}
}

inproceedings{10.1145/3585088.3593872,
author = {Jin, Qiao and Wang, Danli and Yun, Haoran and Yarosh, Svetlana},
title = {Shape of Music: AR-based Tangible Programming Tool for Music Visualization},
year = {2023},
isbn = {9798400701313},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3585088.3593872},
doi = {10.1145/3585088.3593872},
abstract = {Integrating music into Computer Science (CS) education can stimulate children’s creativity, change the stereotypical perspective of CS, and encourage women, ethnic or cultural minorities involved in the Computer Science area. In this paper, we use Augmented Reality (AR) technology to design a tangible programming system - AR-MPro for children, acting as a bridge between programming and music. It allows children to create customized AR effects to visualize music with low-cost materials by constructing tangible program sequences. AR-MPro is expected to broaden participation in computing, and be more intuitive, intriguing and instructional to enrich children’s creating and programming experiences.},
booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
pages = {647–651},
numpages = {5},
keywords = {AR, Augmented Reality, children, computational thinking., creation, music, tangible programming},
location = {Chicago, IL, USA},
series = {IDC '23}
}

inproceedings{10.1145/3670013.3670026,
author = {Yang, Hairu and Dong, Jiamin and Li, Qiuhong and Shao, Yanru and Liu, Yuqi and Xu, Fei},
title = {Current status and enhancement strategies for developing computational thinking of high school students in blended learning --Take the high school information technology curriculum as an example},
year = {2024},
isbn = {9798400717062},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3670013.3670026},
doi = {10.1145/3670013.3670026},
abstract = {In the information age, computational thinking has become a basic quality necessary for learners. How to effectively improve the teaching effect and cultivate students' computational thinking ability has become the focus of most scholars. With the extensive development of "Internet+", the traditional face-to-face offline teaching mode has been unable to meet the diversified and personalized learning needs of students, and blended learning has become a brand-new teaching mode, and studies have shown that blended learning can effectively improve the computational thinking ability of learners. Therefore, this study analyzes and discusses the current situation of high school students' computational thinking ability in blended learning, which helps us to deeply understand the current situation of high school students' blended learning, think about how to promote high school students' blended learning, and improve high school students' computational thinking ability, so as to promote the quality of education and teaching. In this study, the literature research method, interview analysis method and questionnaire survey method were used to investigate the current situation of blended teaching activities on the cultivation of computational thinking with 138 freshmen, sophomores and juniors in a high school in western China. The results found that the overall situation of computational thinking level in blended learning of students in a high school in western China was moderate. This was characterized by better levels of cooperative and critical thinking skills, and poorer levels of creativity, algorithmic thinking and problem solving skills. By describing the current situation, it can be seen that there are some problems in the level of computational thinking ability of high school students in blended learning, based on this, this study, based on the specific research data, combined with the results of the interviews, puts forward some suggestions for improving the cultivation of high school students' computational thinking ability in blended learning in a high school in western China in three aspects.},
booktitle = {Proceedings of the 2024 15th International Conference on E-Education, E-Business, E-Management and E-Learning},
pages = {70–77},
numpages = {8},
location = {Fukuoka-shi, Japan},
series = {IC4E '24}
}

inproceedings{10.1145/3556787.3556865,
author = {Fahrni, Nicolas and Repenning, Alexander},
title = {Quantifying the Corona Effect: How much the pandemic-induced switch from face-to-face to online teaching increased students' self-efficacy – a practical report.},
year = {2022},
isbn = {9781450398534},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3556787.3556865},
doi = {10.1145/3556787.3556865},
abstract = {This practical report explores the impact of forced learning design changes due to the Corona pandemic. At the School of Education Northwestern Switzerland over 2000 K-6 pre-service elementary school teachers got educated in computer science and computer science education over the last five years employing a learning design evolved through a Design Based Implementation Research (DBIR) approach. Assessing efficacy of the course through effect sizes the 2019 courses have served as pre-Corona baseline. Changing hastily in 2020 to online learning dramatically shifted the learning design in ways not initially anticipated in the DBIR process. Collaborative face-to-face (f2f) learning activities got replaced with individual online learning. Employing effect sizes has allowed us to quantify a Corona effect by comparing self-efficacy measures before Corona and during Corona. While there where only small effect sizes (0.5 &gt; Cohen's d ≥ 0.2) all these small effects were positive suggesting that the individual/online seminar worked slightly better than the collaborative/f2f seminar. The report highlights the most important changes to the learning design and compares 2019 with 2020 using effect sizes. For the most part the report can only speculate about the most relevant factors in the design change resulting in the unexpected overall improvement of course efficacy. It could be the shift from collaborative to individual practices, the mandatory peer feedbacks, or the online learning situation.},
booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
articleno = {11},
numpages = {6},
keywords = {online learning, computer science education, computational thinking, collaborative learning},
location = {Morschach, Switzerland},
series = {WiPSCE '22}
}

inproceedings{10.1145/3626252.3630889,
author = {Saliba, Liam and Shioji, Elisa and Oliveira, Eduardo and Cohney, Shaanan and Qi, Jianzhong},
title = {Learning with Style: Improving Student Code-Style Through Better Automated Feedback},
year = {2024},
isbn = {9798400704239},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626252.3630889},
doi = {10.1145/3626252.3630889},
abstract = {ccheck, a lenient automatic grader and C style-checker, to guide students to improve their coding practices. Many computing classes rely heavily on autograders--software that automates grading and alleviates staff workload in classes with large enrollments. At best, autograders offer timely and consistent feedback to students. However, existing autograders primarily judge on functional correctness---they are generally strict and inflexible in marking beginner programming assignments. They tend not to provide feedback on programming style and structure, which instead requires delayed, tedious manual assessment. ccheck, the tool we introduce, aims to address this gap and provide more meaningful, real-time feedback with a pedagogical focus.We deploy ccheck in a class of 440 first-year computer science students. Teaching assistants employ the system for marking assistance, while students use the same system for self-evaluation prior to finalizing their submissions. Feedback was solicited through a survey of 76 students and a focus group of the teaching team. 82% of the students surveyed said that the system helped them learn good coding practices, while 75% emphasized that the feedback received from the system is meaningful and helpful. The teaching team focus group related to how they valued the automation of menial marking tasks, which enabled them to direct their time toward other meaningful feedback. Overall, we find that teaching, learning and student experiences are improved through the deployment of ccheck.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
pages = {1175–1181},
numpages = {7},
keywords = {automatic feedback system, code-style checker, programming style},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

inproceedings{10.1145/3678726.3678729,
author = {Choi, Wan Chong and Chang, Chi In},
title = {The Students' Perspective on Computational Thinking through Flipped Classroom in K-12 Programming Course},
year = {2024},
isbn = {9798400717611},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3678726.3678729},
doi = {10.1145/3678726.3678729},
abstract = {Programming integration into K-12 curricula has become increasingly important in the rapidly evolving educational landscape. Recognizing the need to develop computational thinking among young learners, this study investigated the impact of the flipped classroom approach on computational thinking in K-12 programming courses in Macao, focusing on primary school students' experiences with block-based programmable hardware. Employing a mixed methods research design, it combined quantitative and qualitative analyses to examine how flipped classroom activities—centered around student engagement with material through e-books, videos, and interactive classroom tasks—affected students' understanding and application of computational concepts, practices, and perspectives. Quantitative data were collected using the Programming Computational Thinking Scale (PCTS), and qualitative insights were gathered through semi-structured interviews. The results indicated significant improvements in students' computational concepts and practices, attributed to the advantages of self-study and a stratified approach to task complexity. However, advancements in computational perspectives were less pronounced, highlighting the need for more opportunities for students to refine their presentation skills. The study concluded that the flipped classroom approach, especially with tools like mBlock and Codey-Rocky, effectively nurtured computational thinking in primary school programming courses. It underscored the importance of innovative teaching methods in enhancing students' ability to apply programming concepts in problem-solving and suggested areas for further improvement in educational practices.},
booktitle = {Proceedings of the 2024 8th International Conference on Education and Multimedia Technology},
pages = {106–113},
numpages = {8},
keywords = {Codey-Rocky, Computational Thinking, Flipped Classroom, K-12 Block-based Programming Course, Primary School Programming Education},
location = {Tokyo, Japan},
series = {ICEMT '24}
}

inproceedings{10.1145/3702163.3702417,
author = {Luo, Qi and Zhang, Shuhan},
title = {Developing a Digital Game to Assess Lower Primary Students' Computational Thinking Practices based on Evidence-Centered Game Design},
year = {2025},
isbn = {9798400717819},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3702163.3702417},
doi = {10.1145/3702163.3702417},
abstract = {Computational Thinking (CT) has become increasingly essential in the current era of rapid digital advancement. Despite the availability of various tools to assess CT, there is a notable scarcity of tools designed for evaluating CT practices in lower elementary students. To address this gap, this study develops a digital game titled "Magical Adventure" based on the Evidence-Centered Game Design (ECGD) framework, which aimed at assessing the CT practices of young children. The game comprises five scenarios, targeting five CT practices respectively, including pattern recognition, abstraction, problem decomposition, algorithmic thinking, and debugging. Scoring criteria were designed to evaluate students' CT abilities based on the anticipated gameplay process data. This study describes the design and development process of the game. Future steps will include validation of its effectiveness through expert reviews and cognitive interviews, followed by empirical research to optimize and refine the game, enhancing its accuracy in reflecting students' CT practices.},
booktitle = {Proceedings of the 2024 16th International Conference on Education Technology and Computers},
pages = {219–225},
numpages = {7},
keywords = {Computational thinking practices, Evidence-Centered Game Design, Game-based assessment, Primary education},
location = {
},
series = {ICETC '24}
}

inproceedings{10.1145/3605468.3605498,
author = {Greifenstein, Luisa and Brune, Markus and Fuchs, Tobias and Heuer, Ute and Fraser, Gordon},
title = {Impact of Hint Content on Performance and Learning: A Study with Primary School Children in a Scratch Course},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3605498},
doi = {10.1145/3605468.3605498},
abstract = {The implementation of computational thinking concepts in primary school curricula usually includes programming activities. As primary school teachers often lack subject knowledge, they may struggle to help students during these programming activities. Additional support can be provided by automated program analysis, for example in terms of hints on conceptual knowledge related to bad coding patterns observed, or procedural hints on how to solve the task at hand. However, care has to be taken since these hints need to balance (1) helping students to perform a specific task successfully, while nevertheless (2) ensuring a learning effect beyond the specific task. To understand the effects of different types of hints we therefore conducted a study with 36 children aged 7–12 in 10 programming courses. After being introduced to basic programming structures in three units, the children were tasked to debug six Scratch programs using different types of hints, where we observed that procedural hints have the strongest impact on performance. In order to examine an impact on the transfer of learned knowledge, we observed the children’s difficulties during the successive fifth unit, in which they created their own projects. The results of the fifth unit show that having received a procedural hint on a specific pattern during the fourth unit leads to slightly fewer bad related code patterns but also to slightly fewer good code patterns. Considering these results together with the subjective perceptions of the children, we can derive insights into how to best support performance and learning using (automated) feedback.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {7},
numpages = {10},
keywords = {analysis tools, block-based programming feedback, bug patterns, computational thinking, elementary school},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

inproceedings{10.1145/3545947.3573244,
author = {Ben-Ari, Avia and Levinson, Tess Gavrielle and Umaschi Bers, Marina and Rosenberg-Kima, Rinat B.},
title = {Coding as a Self-Expression Tool},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3573244},
doi = {10.1145/3545947.3573244},
abstract = {This lighting talk discusses the potential for using coding as a new means of self-expression. Coding has been identified as a key 21st-century skill, and as such, it is expected to be vastly acquired already in the early ages of formal education. Coding is a language that adheres to a system of symbols and rules, which, when combined, convey meaning. This postulation has led a few scholars to sustain that coding is a language functioning like any other language. Thus, coding might enable its coders to produce expressive artifacts, similarly to any other natural language, potentially offering a new form of creative writing in the 21st century. A celebrated use of creative writing is in the field of emotional therapy. Writing has been proven an efficient tool in both clinical and non-clinical populations. Nevertheless, despite its effectiveness, some populations are deprived of the great benefits creative writing may enable. Among these are children who do not know how to read and write, as well as adults who struggle with expressive writing. Therefore, we suggest a way for expanding the boundaries of coding to the field of self-expressive writing. We believe that apart from promoting its acquisition as an essential tool in the 21st century, knowing coding at an early age may also endorse general well-being, offering a new, somewhat more reachable, means of self-expression.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1266},
numpages = {1},
keywords = {self-expression, computational thinking, coding as self-expression},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

inproceedings{10.1145/3587102.3588775,
author = {Lehtim\"{a}ki, Taina and Monahan, Rosemary and Mooney, Aidan and Casey, Kevin and Naughton, Thomas J.},
title = {A Computational Thinking Obstacle Course Based on Bebras Tasks for K-12 Schools},
year = {2023},
isbn = {9798400701382},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587102.3588775},
doi = {10.1145/3587102.3588775},
abstract = {This paper describes an unplugged computational thinking (CT) resource for primary and secondary schools developed from Bebras tasks. In Ireland, CT is not part of the primary school curriculum or mandatory in secondary schools. However, the National Council for Curriculum and Assessment is in the process of revising the primary school curriculum to include aspects of CT. Our aim for creating this CT Obstacle Course is to introduce teachers (and pupils) without formal computer science training to the subject of CT. This is done in a manner that informs and motivates, and gives them the confidence to deliver CT materials in the classroom. We also want to find out from teachers how useful and important this type of resource is for developing problem-solving skills, and if our unplugged activity can support learning at various skill levels. Our CT Obstacle Course includes 14 Bebras tasks for primary schools and an additional 6 Bebras tasks for secondary schools. The activity is suitable for indoors and outdoors and is completed in groups, promoting teamwork and communication. We have delivered it to 146 primary school classes during 38 school visits between May 2021 and June 2022. It has been undertaken by 3,445 pupils and 195 teachers and other school staff. This paper describes our CT resource in detail, and reports teacher feedback from primary schools.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 1},
pages = {478–484},
numpages = {7},
keywords = {Bebras tasks, K-12, computational thinking, unplugged},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

inproceedings{10.1145/3564721.3565963,
author = {Standl, Bernhard},
title = {Pre-Service Computer Science Teachers’ Computational Thinking Attitudes and Performance on Python Tasks},
year = {2022},
isbn = {9781450396165},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3564721.3565963},
doi = {10.1145/3564721.3565963},
abstract = {For more than a decade, there has been debate about how to describe the concept of computational thinking (CT), focusing on the skills of decomposition, abstraction, pattern recognition, and algorithmic thinking. As CT can also be seen as a problem-solving process, not only the skills and strategies are an important part of CT, but also the attitudes of the problem solvers. These have already been described as persistence, dealing with complexity, ambiguity, and confidence. An important competence for future computer science teachers is to confidently guide students’ problem-solving process. This work presents preliminary results on the relationship between pre-service computer science teachers’ CT attitudes and their performance on Python tasks. Therefore, N=19 pre-service computer science teachers solved three tasks in Python and rated their attitudes towards solving the tasks. However, the preliminary results only allow to draw tentative and interpretative conclusions.},
booktitle = {Proceedings of the 22nd Koli Calling International Conference on Computing Education Research},
articleno = {37},
numpages = {2},
keywords = {students’ attitudes, computational thinking, coding},
location = {Koli, Finland},
series = {Koli Calling '22}
}

inproceedings{10.1145/3641554.3701782,
author = {Ghosh, Ahana and Malva, Liina and Gotovos, Alkis and Hooshyar, Danial and Singla, Adish},
title = {Exploring the Impact of Quizzes Interleaved with Write-Code Tasks in Elementary-Level Visual Programming},
year = {2025},
isbn = {9798400705311},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641554.3701782},
doi = {10.1145/3641554.3701782},
abstract = {We explore the role of quizzes in elementary visual programming domains popularly used for K-8 computing education. Prior work has studied various quiz types, such as fill-in-the-gap write-code questions. However, the overall impact of these quizzes is unclear: studies often show utility in the learning phase when enhanced with quizzes, though limited transfer of utility in the post-learning phase. In this paper, we aim to better understand the impact of different quiz types and whether quizzes focusing on diverse skills (e.g., code debugging and task design) would have higher utility. We design a study with Hour of Code: Maze Challenge by code.org as the base curriculum, interleaved with different quiz types. Specifically, we examine two learning groups: (i) HoC-ACE with diverse quizzes including solution tracing, code debugging, code equivalence, and task design; (ii) HoC-Fill with simple quizzes on solution finding. We conducted a large-scale study with 405 students in grades 6--7. Our results highlight that the curriculum enhanced with richer quizzes led to higher utility during the post-learning phase.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
pages = {381–387},
numpages = {7},
keywords = {block-based visual programming, k-8 students, quizzes},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

inproceedings{10.1145/3649409.3691081,
author = {Bahr, Tobias},
title = {Integrating Making and Computational Thinking in Early Childhood Education: Preliminary Outcomes from a Teacher Trainer Workshop on Designing an Intervention},
year = {2024},
isbn = {9798400706042},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649409.3691081},
doi = {10.1145/3649409.3691081},
abstract = {In the context of educational equity and social participation in the modern technological world, future skills, including problem-solving, are increasingly important for children. Consequently, various projects have developed learning opportunities in Making and Computational Thinking to foster these skills in early childhood education (ECE). However, several literature reviews highlight a research gap concerning students' process-related competencies and the actual implementation of these learning opportunities by educators in kindergarten. In this context, an intervention that will be taught by kindergarten teachers was designed. This article reports on the design of an intervention incorporating Making and Computational Thinking for students aged 5 and 6, developed during a workshop with 12 experts in ECE, Making, and Computing Education.},
booktitle = {Proceedings of the 2024 on ACM Virtual Global Computing Education Conference V. 2},
pages = {297–298},
numpages = {2},
keywords = {K-12, computational thinking, computer science education, early childhood education, kindergarten, making},
location = {Virtual Event, NC, USA},
series = {SIGCSE Virtual 2024}
}

inproceedings{10.1145/3478432.3499041,
author = {McSkimming, Brian M. and Decker, Adrienne},
title = {Exploring Threshold Concepts for Intermediate Students},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499041},
doi = {10.1145/3478432.3499041},
abstract = {Each year, we graduate a fair number of students with college degrees in computing-related disciplines. Each year, we lose a fair number of students out of the discipline. We spend a good deal of time focusing on what is causing students to leave or fail. We do not spend a lot of time focusing on the learning journey and supporting students throughout their transformative experiences. Threshold concepts are those concepts or learning experiences which define the overall disciplinary learning journey, enabling the learner to see from a new perspective, participate in discourse previously unavailable to them, and engage with the world from a transformed frame of understanding. They are often those concepts difficult for students to understand within a discipline such as "personhood' in Philosophy, 'gravity' in Physics, or 'limit' in Mathematics. As a result of this transformation and the resultant traversal of a liminal state, elements of an identity developed. In this poster, we present our current work identifying potential threshold concepts experienced by intermediate computer science students and consider the impact of these concepts on their development of an identity within computer science.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1073},
numpages = {1},
keywords = {threshold concepts, learning theory, intermediate students, computational thinking, clinical interview},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

inproceedings{10.1145/3582580.3582630,
author = {Liu, Hui and Li, Zhen and Duan, Jia Ting and Zeng, Yu},
title = {The Impact of Pair Programming Based on Project-Based Learning on Computational Thinking of Junior High School Students},
year = {2023},
isbn = {9781450398015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3582580.3582630},
doi = {10.1145/3582580.3582630},
abstract = {Computational thinking as a key in K-12 education has gotten more and more attention. Researchers and teachers are focusing more on tools and teaching methods that could edify computational thinking. Nowadays, developing students’ computational thinking through graphical programming has become a norm. In addition, project-based learning has been proven effective in cultivating students’ computational thinking. The purpose of this study is to find out the effectiveness of the paired programming teaching method, which is based on project-based learning in junior high school students’ computational thinking, and to provide new opportunities and conditions for the development of computational thinking in junior high school students. This research could expand the view of starting project-based graphical programming courses, and provide a reference for the designing, developing, and teaching of junior high school computational thinking courses.},
booktitle = {Proceedings of the 2022 5th International Conference on Education Technology Management},
pages = {287–291},
numpages = {5},
keywords = {project-based learning, pair programming, junior high school student, computational thinking self-efficacy, computational thinking},
location = {Lincoln, United Kingdom},
series = {ICETM '22}
}

inproceedings{10.1145/3501712.3535291,
author = {Guler, Sibel Deren and Sotelo, Sheryl and Iwabuchi, Masa},
title = {Tekniverse: Towards a connected future for sensors, education, and action: Fostering Environmental Literacy with IoT and Physical Computing},
year = {2022},
isbn = {9781450391979},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501712.3535291},
doi = {10.1145/3501712.3535291},
abstract = {The Internet of Things (IoT) is an innovation that is rapidly transforming industries from agriculture to medicine, enabling advances such as real-time data monitoring and remote control. However, IoT's infiltration into education has been much slower, and educational tools that embody these features are few and far between. Together with the Chugach School District in Alaska, we investigated methods to teach middle-school aged students how to use IoT to drive change in their communities and collaborate in a digital world, tied to real time environmental data. The objective of this work is to provide rural, K-12 Alaskan students and teachers with opportunities that will help build an understanding of what is happening in their local environments, increase overall scientific and climate literacy, and contribute to community resilience and connectedness. Rural Alaskan students live in some of the most vulnerable regions of the planet, regions that are highly susceptible to the impacts of climate change. In this work-in-progress paper, we first discuss the design and adaptation of Tekniverse, a hardware and software ecosystem that provides a gateway for students to code and connect hardware projects and data. We then discuss the finding of our initial study of Tekniverse as a learning tool for computational thinking, data analysis, and social responsibility in rural and remote areas with students in Alaska. Lastly, we propose future directions for this research and computational collaborative tools.},
booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
pages = {583–589},
numpages = {7},
keywords = {Physical Computing, IoT Environmental Literacy, Computational Thinking},
location = {Braga, Portugal},
series = {IDC '22}
}

inproceedings{10.1145/3486011.3486519,
author = {Conde, Miguel \'{A}ngel and Hern\'{a}ndez-Garc\'{\i}a, \'{A}ngel and Chaparro-Pel\'{a}ez, Julian},
title = {Learning Analytics: Moving on?},
year = {2021},
isbn = {9781450390668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3486011.3486519},
doi = {10.1145/3486011.3486519},
abstract = {This is the introductory article of the track on Learning Analytics within the 2021 International Conference Technological Ecosystems for Enhancing Multiculturality (TEEM’21). In this article, we lay out the motivation of the main theme of this edition's track, the main topics of interest and the review process followed for submission of contributions. We also present an outline of the accepted contributions and conclude with our own reflections on current issues in research on learning analytics, based on both our opinions and experience as track chairs in previous editions.},
booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
pages = {583–586},
numpages = {4},
keywords = {robots, programming, computer science in K-12, computational thinking skills and curriculum, coding in schools, STEM, STEAM, Computational thinking},
location = {Barcelona, Spain},
series = {TEEM'21}
}

inbook{10.1145/3507951.3519290,
author = {Grover, Shuchi and Dominguez, Ximena and Leones, Tiffany and Kamdar, Danae and Vahey, Phil and Gracely, Sara},
title = {Strengthening early STEM learning by integrating CT into science and math activities at home},
year = {2022},
isbn = {9781450396158},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3507951.3519290},
abstract = {While understanding in the field of how CT can be used in early childhood is limited, current CT definitions include skills and practices that align with early mathematics and science learning goals outlined in national frameworks (e.g., Head Start Early Learning Outcomes Framework) and state standards. In order to understand which elements of CT align with the abilities and interests of young children and how they can be integrated with early science and math experiences in a mutually supportive manner, we partnered with preschool teachers and families to co-design and pilot test hands-on (unplugged) and digital activities for classrooms and homes.Our collaborative research identified the following CT skills as productive starting points for our co-design work: (1) problem decomposition; (2) algorithmic thinking; (3) abstraction; and (4) testing and debugging. This paper describes our approach to operationalizing CT for early learning and our empirical research around activities designed to understand how CT can be linked with math and science to create powerful learning experiences for preschool learners. Our work involves actively fostering a home-school connection for promoting CT and prioritized designing for activities that fit the ecology of preschool classrooms and homes (with special attention to family activities). With a view to designing equity-oriented experiences, we partnered with preschools serving historically underserved communities, and centered families' funds of knowledge. This paper focuses specifically on the home component of the program and shares data and analyses about children's and parent's experiences at home---which activities were more successful and resonated with children and families, and which specific synergies emerged between CT skills, math and science concepts and practices. Our findings highlight the promise of introducing early CT to support early learning, and especially involving families in the process. Results from our research also identified challenges that should be addressed in future iterations of this design research We believe our family connection activities are not only a unique part of the research but also an exemplar of what should be an essential piece of STEM education for young learners.},
booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
pages = {72–84},
numpages = {13}
}

inproceedings{10.1145/3328778.3372590,
author = {Franklin, Diana and Palmer, Jennifer and Landsberg, Randall and Marckwordt, Jasmine and Muller, Alexandria and Singhal, Kartik and Salac, Jean and Harlow, Danielle},
title = {Initial Learning Trajectories for K-12 Quantum Computing},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372590},
doi = {10.1145/3328778.3372590},
abstract = {As quantum computation (QC) comes closer to reality, questions arise as to what elements to teach, how to teach it, and to what depth. QC instruction typically depends heavily on advanced math and/or physics. Our interdisciplinary science / computer science / education team co-created quantum computing (QC) learning trajectories (LT), zines, and activities, for young learners. We present the LT's (Superposition, Quantum State, Entanglement, Measurement, and Reversibility) and the iterative process that created them.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1331},
numpages = {1},
keywords = {computational thinking, k-12 education, quantum computing},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

inproceedings{10.1145/3675812.3675864,
author = {Chen, MingQi and Xu, JiHong and Wang, YiChuan},
title = {Current Situation and Trend of Computational Thinking Research of Primary School Students in Recent Ten Years in China: An Analysis Based on Visualization Software},
year = {2024},
isbn = {9798400716805},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3675812.3675864},
doi = {10.1145/3675812.3675864},
abstract = {With the continuous development of information technology, computational thinking has become a necessary quality for students to adapt to the era of artificial intelligence in the 21st century. After the release of the Information Technology Curriculum Standards for Compulsory Education (2022 edition), computational thinking has rapidly attracted wide attention. This paper adopts the bibliometrics method to study the core journals and dissertations on the training of primary school students' computational thinking collected by CNKI (China National Knowledge Network) from 2012 to 2023, and analyzes the current situation and trend of the training of primary school students' computational thinking from the aspects of the number of literatures, sources, research hotspots and frontiers, combined with Citespace software. It provides useful reference for related researchers.},
booktitle = {Proceedings of the 2024 9th International Conference on Distance Education and Learning},
pages = {301–307},
numpages = {7},
keywords = {Bibliometric method, Citespace software, Primary school student, computational thinking},
location = {Guangzhou, China},
series = {ICDEL '24}
}

inproceedings{10.1145/3456565.3460025,
author = {\v{S}iaulys, Tomas},
title = {Developing Interactive Visualizations Focusing on Computational Thinking in K-12 Computer Science Education},
year = {2021},
isbn = {9781450383974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456565.3460025},
doi = {10.1145/3456565.3460025},
abstract = {Visualization is a common feature of computer science education tools in K-12 and beyond. However, there are still many unknowns about what makes visual tools effective. The focus of this research is to explore the properties of effective interactive visualizations in non-programming tasks for teaching computational thinking in K-12. Main contribution is expected to be an evaluated model of a system for developing these interactive visualizations.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {680–681},
numpages = {2},
keywords = {interactive visualizations, engagement taxonomy, computational thinking},
location = {Virtual Event, Germany},
series = {ITiCSE '21}
}

inproceedings{10.1145/3304221.3325585,
author = {Lowe, Tony and Brophy, Sean and Cardella, Monica},
title = {Findings from a Multi-year Study of CT in K-2 Students in Formal and Informal Settings},
year = {2019},
isbn = {9781450368957},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3304221.3325585},
doi = {10.1145/3304221.3325585},
abstract = {For the past four years, our research group has conducted a series of NSF funded studies on Computational Thinking (CT) involving elementary school students, parents, and teachers. We developed curriculum, trained teachers, observed classrooms, created museum exhibits, followed students and families, explored theory, and utilized the diverse skills of a large multi-disciplinary research group to understand the intersection of STEM, literacy, and CT. As we close out this grant, we are looking to disseminate our findings, share lessons learned about research methods and data collection, and build collaborations for future research.},
booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {312},
numpages = {1},
keywords = {professional development, p-12, formal and informal instruction, computational thinking},
location = {Aberdeen, Scotland Uk},
series = {ITiCSE '19}
}

inproceedings{10.1145/3572549.3572558,
author = {Wang, Meijuan and Wang, Yibin and Li, Hui},
title = {Exploration of a Blended Teaching Mode for the Cultivation of High-Order Computing Ability},
year = {2023},
isbn = {9781450397766},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3572549.3572558},
doi = {10.1145/3572549.3572558},
abstract = {The rapid development of information technology has a great influence on the future society. Future talents should have high-order thinking skills, such as adaptability, competence, and innovation, suitable for specific positions. Military universities undertake the important task of cultivating military talent. This work highlights the cultivation of students’ computing thinking ability in the course “The Fundamentals of Computer.” By carefully planning teaching time and content and using modern information technology and rich network teaching resources, the reform of online–offline blended teaching is practiced. The new teaching mode features high-order thinking skills training for students and realizes the transformation of the curriculum from knowledge output to high-order thinking ability orientation.},
booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
pages = {51–57},
numpages = {7},
keywords = {high-order thinking skills, computational thinking, blended teaching, The fundamentals of computer},
location = {Barcelona, Spain},
series = {ICETC '22}
}

inproceedings{10.1145/3402942.3409622,
author = {Barbero, Giulio and G\'{o}mez-Maureira, Marcello A. and Hermans, Felienne F.J.},
title = {Computational Thinking through Design Patterns in Video Games},
year = {2020},
isbn = {9781450388078},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3402942.3409622},
doi = {10.1145/3402942.3409622},
abstract = {Prior research has explored potential applications of video games in programming education to elicit computational thinking skills. However, existing approaches are often either too general, not taking into account the diversity of genres and mechanisms between video games, or too narrow, selecting tools that were specifically designed for educational purposes. In this paper we propose a more fundamental approach, defining beneficial connections between individual design patterns present in video games and computational thinking skills. We argue that video games have the capacity to elicit these skills and even to potentially train them. This could be an effective method to solidify a conceptual base which would make programming education more effective.},
booktitle = {Proceedings of the 15th International Conference on the Foundations of Digital Games},
articleno = {111},
numpages = {4},
keywords = {video games, design patterns, computational thinking},
location = {Bugibba, Malta},
series = {FDG '20}
}

inproceedings{10.1145/3362789.3362910,
author = {Gon\c{c}alves, Jos\'{e} and Lima, Jos\'{e} and Brito, Thadeu and Brancali\~{a}o, Laiany and Camargo, Caio and Oliveira, Vitor and Conde, Miguel \'{A}.},
title = {Educational Robotics Summer Camp at IPB: A Challenge based learning case study},
year = {2019},
isbn = {9781450371919},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3362789.3362910},
doi = {10.1145/3362789.3362910},
abstract = {Robotics in education has special relevance in current digital society where students should know how to deal with technology. In this paper, it is presented an educational experiment in the mobile robotics domain. The referred experiment was part of a summer camp, which took place at the Polytechnic Institute of Bragan\c{c}a Portugal, being its technological aspects related with mobile robotics. Other than the technological aspects, the students participated in many different cultural and social activities, having the opportunity to know the city of Bragan\c{c}a and also to know different persons, mainly students, professors, researchers and laboratory technicians. The applied approach in the summer camp was a challenge based learning methodology, being involved in the experiment 3 professors, 4 monitors, working with a group of 16 secondary school students. The described experiment was planned as an activity of the RoboSTEAM - Integrating STEAM and Computational Thinking development by using robotics and physical devices ERASMUS+ Project.},
booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {36–43},
numpages = {8},
keywords = {Challenge Based Learning, Erasmus, Robotics, Summer camp},
location = {Le\'{o}n, Spain},
series = {TEEM'19}
}

inproceedings{10.1145/3408877.3439524,
author = {Van Dusen, Eric},
title = {Jupyter for Teaching Data Science},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439524},
doi = {10.1145/3408877.3439524},
abstract = {A recent evolution of cloud-based tools creates an easy and powerful way for students to access the industry standard data science tools from within a browser window. Jupyter notebooks were originally developed for sharing of scientific results and reproducible open science. However, when delivered through a cloud-based server, they have huge benefits for teaching, including removing the need to install any software locally or require any specific machine to be used by students. UC Berkeley has extensive experience teaching via Jupyter, including the popular introductory Data 8 course, small Data Science Modules in non- Data Science classes, and advanced work in the Data 100 and Data 102 ( Machine Learning) classes. There is a library of OER curricular materials to share between institutions. In addition, Multiple languages and interfaces can be served, from Jupyter in multiple languages, Rstudio, and even a Linux desktop, as well as auto-grading approaches. We are interested to share experiences across institutions utilizing this approach.The use of teaching Jupyterhubs to date, both for introductory to Data Science courses, as well as more advanced topics is growing rapidly. We would like to have a conversation about how to use Jupyterhubs and teaching Jupyter notebooks from a variety of instructors and institutions. We are also interested in how to provide these types of resources to additional educational settings who may be more resource constrained.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1359},
numpages = {1},
keywords = {computational thinking, data science, interactive computing},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

inproceedings{10.1145/3605390.3605401,
author = {Bellino, Alessio and Herskovic, Valeria},
title = {Protobject as a tool for teaching computational thinking to designers: student perceptions on usability},
year = {2023},
isbn = {9798400708060},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605390.3605401},
doi = {10.1145/3605390.3605401},
abstract = {Due to the proliferation of technology in daily life and the growing number of ways in which humans and machines interact, the process of designing interactive elements has become critical. Nevertheless, design students are seldom able to design and implement interactive elements because of their limited programming skills. Although there have been some approaches to teach computational thinking using physical computing and focusing on solving real-world problems (e.g., electronic devices such as Arduino, using sensors and actuators), they often entail monetary expenses and require knowledgeable instructors, and are not catered to students without prior programming or electronics knowledge. Hence, we propose the use of Protobject, a low-cost tool that focuses on real-world applications that could be used to teach programming to design students. This study aims to evaluate students’ perceptions regarding the usability of Protobject as a tool for learning computational thinking, as well as the clarity of the learning activities designed to teach computational thinking concepts by using Protobject.},
booktitle = {Proceedings of the 15th Biannual Conference of the Italian SIGCHI Chapter},
articleno = {23},
numpages = {8},
keywords = {user study, usability, learning platform},
location = {Torino, Italy},
series = {CHItaly '23}
}

inproceedings{10.1145/3356393.3365368,
author = {Dean, Denis J.},
title = {Some Observations Regarding Geocomputational Teaching through Interdisciplinary Teams},
year = {2019},
isbn = {9781450369527},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3356393.3365368},
doi = {10.1145/3356393.3365368},
abstract = {Geocomputation is an inherently interdisciplinary topic, combining both geospatial information science (GISc) and computer science (CS). It could be taught by individuals with strong backgrounds in both areas, but it is argued that such individuals are rare and academia is poorly positioned to produce a future generation of such dual-skilled individuals. Interdisciplinary team teaching is presented as an alternative. Hurdles to developing such team-taught classes are identified, and possible ways to overcome them are presented. Finally, a way of restructuring academia to be more supportive of such interdisciplinary team projects is presented.},
booktitle = {Proceedings of the 1st ACM SIGSPATIAL International Workshop on Geo-Computational Thinking in Education},
articleno = {1},
numpages = {5},
keywords = {Interdisciplinarity, Geospatial information science (GISc), Education},
location = {Chicago, IL, USA},
series = {GeoEd'19}
}

inproceedings{10.1145/3287324.3293712,
author = {Lin, Kevin and DeLiema, David},
title = {Subgoals, Problem Solving Phases, and Sources of Knowledge},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3293712},
doi = {10.1145/3287324.3293712},
abstract = {Educational researchers have increasingly drawn attention to how students develop computational thinking (CT) skills, including in science, math, and literacy contexts. A key component of CT is the process of abstraction, a particularly challenging concept for novice programmers, but one vital to problem solving. We propose a framework based on situated cognition that can be used to document how instructors and students communicate about abstractions during the problem solving process. We develop this framework in a multimodal interaction analysis of a 32-minute long excerpt of a middle school student working in the PixelBots JavaScript programming environment at a two-week summer programming workshop taught by undergraduate CS majors. Through a microgenetic analysis of the process of teaching and learning about abstraction in this excerpt, we document the extemporaneous prioritization of subgoals and the back-and-forth coordination of problem solving phases. In our case study, we identify that (a) problem solving phases are nested with several instances of context-switching within a single phase; (b) the introduction of new ideas and information creates bridges or opportunities to move between different problem solving phases; (c) planning to solve a problem is a non-linear process; and (d) pedagogical moves such as modeling and prompting highlight situated resources and advance problem solving. Future research should address how to help students structure subgoals and reflect on connections between problem solving phases, and how to help instructors reflect on their routes to supporting students in the problem solving process.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1292},
numpages = {1},
keywords = {abstraction, computational thinking, debugging, education, problem solving, situated cognition},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

inproceedings{10.1145/3488042.3488053,
author = {Tedre, Matti and Denning, Peter and Toivonen, Tapani},
title = {CT 2.0},
year = {2021},
isbn = {9781450384889},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3488042.3488053},
doi = {10.1145/3488042.3488053},
abstract = {CT has been the central rallying point for K-12 computing education at least since the early 2010s. Many teachers, school administrators, and policymakers have joined the movement. A consensus has emerged over the conceptual landscape of CT. Meanwhile, machine learning (ML) has triggered some major changes in many sectors of computing. Children’s lives today are full of ML-driven services—take TikTok’s spot-on recommendations, social media’s automatic tagging of their friends in photos, and targeted personalized advertisement, just to mention a few. Children cannot learn to think about and design ML technology from learning classical programming. ML is poised to upend the CT consensus. Look at some of the changes ML has already triggered in computing. It has enabled greatly improved speech and image recognition, powerful recommendations on streaming services, autonomous navigation of cars, super-human performance in board and computer games, and even alternative-reality “deepfake” videos. Most advances in topics above are due to hardware evolution to non-traditional, special purpose architectures, new algorithms such as convolutional neural networks (CNN) or generative adversarial networks (GAN), and new objectives and measures of success. We will show that several key CT concepts, including debugging, problem-solving workflow, correctness, and notional machines, are insufficient for ML and need to be extended. Moreover, ML introduces new concepts including neural networks, curating and training data, and reinforcement learning that are not part of CT at all. All these changes challenge the traditional views related to teaching CT in K–12. ML is not the only emerging technology appearing in the computing landscape. Quantum computing and biological computing are not far behind. We need to start rethinking how CT must evolve to anticipate and meet these challenges.},
booktitle = {Proceedings of the 21st Koli Calling International Conference on Computing Education Research},
articleno = {3},
numpages = {8},
keywords = {School, Machine learning, K-12, Computational thinking, Artificial intelligence},
location = {Joensuu, Finland},
series = {Koli Calling '21}
}

inproceedings{10.1145/3514262.3514311,
author = {Wang, Juan and Bai, Xinye and Xiang, Qianchen and An, Langsha and Cai, Minghan and He, Chunlin},
title = {Research on the Improvement of Teachers' Computational Thinking Teaching Ability Based on STEM86 Platform},
year = {2022},
isbn = {9781450387187},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3514262.3514311},
doi = {10.1145/3514262.3514311},
abstract = {At present, there is a certain lag in the teaching ability of computational thinking in our country. This article is based on STEM86 platform, ISTE published by the author "Educator standards: Under the guidance of computational Thinking ability, a standard system for evaluating teachers' computational thinking teaching ability was constructed, and a test scale for evaluating teachers' computational thinking teaching ability was designed. The reliability and validity test and difficulty differentiation test proved that the designed test scale had good scientificity and reliability. On this basis, using this scale, through the empirical way, from three dimensions of computer discipline knowledge and skills, teaching design ability, evaluation and reflection ability to evaluate teachers before and after using STEM86 platform computational thinking teaching ability changes. The results show that STEM86 platform not only solves teachers' programming teaching resource needs, but also effectively improves teachers' computational thinking teaching ability, and provides more references and ideas for teachers' computational thinking teaching ability improvement research.},
booktitle = {Proceedings of the 2022 13th International Conference on E-Education, E-Business, E-Management, and E-Learning},
pages = {173–177},
numpages = {5},
keywords = {STEM86 platform, Computational thinking teaching ability},
location = {Tokyo, Japan},
series = {IC4E '22}
}

inproceedings{10.1145/3284179.3284180,
author = {Vel\'{a}zquez-Iturbide, J. \'{A}ngel},
title = {Report of the Spanish Computing Scientific Society on Computing Education in Pre-University Stages},
year = {2018},
isbn = {9781450365185},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3284179.3284180},
doi = {10.1145/3284179.3284180},
abstract = {In recent years, many developed countries have addressed computing education in primary or secondary education. Potential benefits for students in these educational stages and for the society are great, existing a wide range of approaches to such a computing education. The Spanish Computing Scientific Society (SCIE), with the support of the Spanish Board of Deans of Computing Schools (CODDII) created in September 2017 a working group formed by experts in either computing or computing education with the goal of elaborating a report with specific recommendations about this issue for the Spanish government. The report was issued in July 2018 and recommends, in conformance to Spanish educational laws, to establish a matter called "Informatics". This matter would preferably be implemented as a mandatory course offered from primary to secondary education. The course contents comprise six areas: programming, computers and operating systems, networks and the Internet, data, digital content, and security. The course would include issues of both digital literacy and computing as a discipline, with digital literacy contents based on the European DIGCOMP framework.},
booktitle = {Proceedings of the Sixth International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {2–7},
numpages = {6},
keywords = {computing literacy, computational thinking, K-12 education, Computing education},
location = {Salamanca, Spain},
series = {TEEM'18}
}

inproceedings{10.1145/3502718.3524817,
author = {Oldham, Elizabeth},
title = {Computing in the Irish School Curriculum: What Can We Learn from a Fifty-Year Adventure?},
year = {2022},
isbn = {9781450392013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502718.3524817},
doi = {10.1145/3502718.3524817},
abstract = {This presentation examines the development of computing courses in the Irish school curriculum over a period of some fifty years. It aims to highlight three aspects: the varying rationales (for example, educational or economic) driving the work at different times; the types of course that were proposed and (in some cases) implemented; and the successes and failures experienced along the way. The third aspect, in particular, may offer lessons for other countries seeking to implement computing courses in schools. To frame the analysis, a brief chronological outline is provided here. In the 1970s, the state Department of Education initially offered some programming courses for teachers; a voluntary body, the Computers in Education Society of Ireland, advocated for the introduction of "Computer Studies" as a school subject [1]. Official provision came in the 1980s, with the introduction first of a Computer Studies option in the Mathematics courses for the senior cycle of post-primary education (US grades 11-12), and then of a free-standing subject in the junior cycle [1,2]. However, the increasing availability of educational software, applications packages, and internet access led to a switch in the focus of official policy in the 1990s - from computing to computer applications and the use of IT in teaching and learning - and the computing courses faded out [2]. Following the (re)-emergence of interest in computing / computational thinking in several countries in this century [2,3,4,5], advocacy for suitable courses again grew and the policy thrust changed. Provision is now made at primary and post-primary level, notably with a free-standing Computer Science course figuring in the senior cycle curriculum [2,5]. The author has been involved in advocacy and support for computing in schools throughout the fifty-year period. Thus, she offers a participant's analysis of the motivations, the successes and failures, and the lessons that can be learnt from the Irish story.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
pages = {1},
numpages = {1},
keywords = {curriculum, computing education policy, computational thinking},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

inproceedings{10.1145/3430665.3456341,
author = {Varoy, Elliot and Lee, Kerry and Luxton-Reilly, Andrew and Giacaman, Nasser},
title = {Comparing Pre-tertiary Curricula to Investigate the Timing of Computing Exposure},
year = {2021},
isbn = {9781450382144},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3430665.3456341},
doi = {10.1145/3430665.3456341},
abstract = {A comprehensive understanding of computing has become a necessary skill for students in an increasingly digital world. Consequently, many countries around the world have updated their national pre-tertiary curriculum to include the topic of computing. However, the structure and presentation of these curricula varies greatly. This makes it difficult to compare the timing that students are exposed to computing and as a result, increases the difficulty for producing effective and well-timed educational resources that are relevant for varying implementations. This research investigates the structure of international computing curricula, identifying and comparing the timing that students are exposed to computing. This will better inform researchers and resource developers about where and when their interventions are most applicable. This will also provide valuable insights for the creation of future computing curricula, by informing curriculum designers about the perspectives of various curricula and the most common approaches they have taken.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
pages = {540–546},
numpages = {7},
keywords = {digital technologies, computing curriculum, computational thinking, K-12 curriculum},
location = {Virtual Event, Germany},
series = {ITiCSE '21}
}

inproceedings{10.1145/3474995.3475046,
author = {Tian, Xinyu and Li, Chaoqian and Zhao, Yaru},
title = {Investigation on Computational Thinking of Normal Students Based on Technology Acceptance Model},
year = {2021},
isbn = {9781450390033},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3474995.3475046},
doi = {10.1145/3474995.3475046},
abstract = {Based on the technology acceptance model, this paper constructs a computational thinking acceptance model for normal students. Taking normal students from H Normal University as a research sample, the structural equation model is used to quantitatively analyze that model. The research results show that subjective norms, the usefulness and ease of use of computational thinking have a positive and significant impact on the attitude and behavioral intentions of normal students to use computational thinking.},
booktitle = {Proceedings of the 2021 6th International Conference on Distance Education and Learning},
pages = {303–308},
numpages = {6},
keywords = {Technology acceptance model, Structural equation model, Normal students, Computational thinking},
location = {Shanghai, China},
series = {ICDEL '21}
}

inproceedings{10.1145/3197091.3197104,
author = {Boom, Kay-Dennis and Bower, Matt and Arguel, Ama\"{e}l and Siemon, Jens and Scholkmann, Antonia},
title = {Relationship between computational thinking and a measure of intelligence as a general problem-solving ability},
year = {2018},
isbn = {9781450357074},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3197091.3197104},
doi = {10.1145/3197091.3197104},
abstract = {Computational thinking – the ability to solve problems using concepts from computer science – has been widely discussed in the computer science education field. However, the relationship of computational thinking to intelligence – seen as the general ability to understand and solve complex problems – is contestable and has not been extensively explored. The present study addressed the question of how computational thinking is related to intelligence. To find an answer to this question, 71 pre-service teacher students completed a survey with 20 Bebras tasks as a measure of computational thinking and a non-verbal intelligence test (TONI-3) to assess their general problem-solving ability. The large and significant correlation of r(70) = .53, p &lt; .001, indicates that both concepts are highly related. Implications of the findings are discussed, including the meaning of the relationship between computational thinking and intelligence during teaching and assessment, and the possibility of more holistic measures of computational thinking that incorporate procedural aspects.},
booktitle = {Proceedings of the 23rd Annual ACM Conference on Innovation and Technology in Computer Science Education},
pages = {206–211},
numpages = {6},
keywords = {Bebras Challenge, Computational thinking, discriminate validity, non-verbal intelligence, problem-solving},
location = {Larnaca, Cyprus},
series = {ITiCSE 2018}
}

inproceedings{10.1145/3230977.3230979,
author = {Rich, Kathryn M. and Binkowski, T. Andrew and Strickland, Carla and Franklin, Diana},
title = {Decomposition: A K-8 Computational Thinking Learning Trajectory},
year = {2018},
isbn = {9781450356282},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3230977.3230979},
doi = {10.1145/3230977.3230979},
abstract = {As new initiatives in computational thinking and computer science (CS/CT) are being developed and deployed, it is important to identify and understand the key concepts that are essential for student learning. In this study, we present the phases of construction of a learning trajectory (LT) for Decomposition in the context of CS/CT in K-8 education. From an extensive literature review, 63 learning goals representative of decomposition understanding and practices were identified and synthesized into 13 consensus goals. The focus of this paper is how relationships between these consensus goals were identified and used to place the goals into a learning trajectory. We discuss the theories and frameworks that guided the trajectory's construction as well as the methodology and justifications used to draw pathways through the trajectory in each phase. Finally, we discuss potential uses for the trajectory and suggest further explorations for decomposition in CS/CT.},
booktitle = {Proceedings of the 2018 ACM Conference on International Computing Education Research},
pages = {124–132},
numpages = {9},
keywords = {computational thinking, decomposition, k-8},
location = {Espoo, Finland},
series = {ICER '18}
}

inproceedings{10.1145/3545945.3569873,
author = {Shehzad, Umar and Recker, Mimi and Clarke-Midura, Jody},
title = {A Literature Review Examining Broadening Participation in Upper Elementary CS Education},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569873},
doi = {10.1145/3545945.3569873},
abstract = {Despite proliferated efforts to integrate computer science in elementary education, there is a dearth of studies that synthesize the current state of CS education research in formal educational contexts, specifically in upper elementary classrooms. Further, while numerous studies have investigated approaches and strategies that broaden participation in computing, the majority of them focus on secondary and post-secondary settings. The present study uses a systematic literature review process to review research conducted with students in formal classroom settings in grades 4, 5, and 6 and published since 2013. We review the research through two questions: What are barriers to broadening participation in CS in upper elementary (grades 4-6)? What instructional approaches and strategies help broaden participation in CS in upper elementary (grades 4-6)? A systematic search of the literature highlighted approaches used for broadening participation, including using various teaching media, designing scaffolds in instruction, and integrating into other subject areas. We conclude by identifying gaps in the research and identifying areas for further research.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {570–576},
numpages = {7},
keywords = {broadening participation in cs, computational thinking, cs literature review, formal cs education, upper elementary cs},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

inproceedings{10.1145/3371647.3371651,
author = {Kalliopi, Kanaki and Michail, Kalogiannakis},
title = {Assessing Computational Thinking Skills at First Stages of Schooling},
year = {2020},
isbn = {9781450372251},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3371647.3371651},
doi = {10.1145/3371647.3371651},
abstract = {Computational thinking has already been acknowledged as an important learning objective for all students in compulsory education. Our research interests focus on the assessment of fundamental computational thinking competencies, such as collection, organisation and analysis of data, algorithmic thinking and abstraction. For the needs of our research, we implemented the digital platform PhysGramming, which constitutes the backbone of a relevant assessment tool we have built. PhysGramming is developmentally appropriate for first and second grade primary school students and provides the opportunity to create their own digital games, transforming them from passive consumers to active creators of digital technology. The assessment tool has been applied to 450 students in the first and second grade of primary schools on Crete, Greece from February to June 2019. The research was conducted attuned to the ethical guidelines of educational research, within the framework of the physical and natural science courses and evolved around three axes: (a) Checking the validity and the reliability of the results that come out when applying the proposed assessment tool. (b) Designating the levels of computational thinking skills of students at first stages of schooling. (c) Checking the correlation between the levels of computational thinking skills and the comprehension of the lesson's content. In other words, we check whether high learning performance is a necessary and sufficient condition for diagnosing high levels of basic computational thinking skills. In this paper, we shortly describe the assessment tool we propose.},
booktitle = {Proceedings of the 2019 3rd International Conference on Education and E-Learning},
pages = {135–139},
numpages = {5},
keywords = {First stages of schooling, Computational thinking, Assessment tool},
location = {Barcelona, Spain},
series = {ICEEL '19}
}

inproceedings{10.1145/3481312.3481319,
author = {van Borkulo, Sylvia and Chytas, Christos and Drijvers, Paul and Barendsen, Erik and Tolboom, Jos},
title = {Computational Thinking in the Mathematics Classroom: Fostering Algorithmic Thinking and Generalization Skills Using Dynamic Mathematics Software},
year = {2021},
isbn = {9781450385718},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3481312.3481319},
doi = {10.1145/3481312.3481319},
abstract = {There are increasing calls for mathematics teachers to foster computational thinking (CT) skills in their lessons and align them with existing curricula and national educational policies. Algorithmic thinking (AT) and generalization are two key elements of CT that are often underrepresented in traditional mathematics lessons. This study investigated how to address AT and generalization aspects in 12th-grade calculus lessons using the dynamic mathematics software GeoGebra. We present a six-lesson intervention designed by an interdisciplinary team of researchers and teachers with a background in computer science and mathematics education that aims to foster pre-university students’ AT and generalization skills in calculus lessons. We evaluated the intervention in a 15 students classroom in the Netherlands through the analysis of students’ workbooks, files, interviews, and the teacher’s logbook. The findings suggest that the intervention was favorably seen by both the teacher and the students, and that their learning and teaching experience was highly satisfactory. The most common challenges for successfully completing the designed material included issues related to getting familiar with GeoGebra, syntax, and effectively using conditional statements. Finally, we report on the learning and teaching experience and discuss strategies to address AT and generalization aspects for teachers who wish to address such CT aspects in mathematics lessons.},
booktitle = {Proceedings of the 16th Workshop in Primary and Secondary Computing Education},
articleno = {19},
numpages = {9},
keywords = {GeoGebra, algorithmic thinking, computational thinking, generalization, mathematics education},
location = {Virtual Event, Germany},
series = {WiPSCE '21}
}

inproceedings{10.1145/3144826.3145450,
author = {Gonz\'{a}lez, Yen Air Caballero and Mu\~{n}oz-Repiso, Ana Garc\'{\i}a-Valc\'{a}rcel},
title = {Development of computational thinking skills and collaborative learning in initial education students through educational activities supported by ICT resources and programmable educational robots},
year = {2017},
isbn = {9781450353861},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3144826.3145450},
doi = {10.1145/3144826.3145450},
abstract = {The purpose of this paper is to present the PhD thesis research plan, which aims to design, integrate and evaluate educational activities mediated by ICT resources and programmable educational robots, in initial education students, obtaining collaborative learning and Training of computational thinking skills. The research will be developed through a mixed methodology, with the intention of being able to carry out a more complete analysis and evaluation of the subject, obtaining data from different sources (teachers, students and coordinators of educational level). Various instruments such as interviews, questionnaires and participant type observation will be used, focusing on teachers and students. In addition, a rubric will be used to evaluate students' performance in the development of learning activities, through the sequential programming of educational robots. The results that will be obtained with this research will allow to carry out a proposal of technological educational action of great quality, based on the benefits and limitations of the integration of ICT resources and programmable Robots, contributing in a significant way to the implementation of new approaches for the Teaching-learning curriculum content from an early age and empowering participants in the development of computational thinking skills and collaborative learning.},
booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
articleno = {103},
numpages = {6},
keywords = {Computational thinking, collaborative learning, programming, robotics, students, teaching},
location = {C\'{a}diz, Spain},
series = {TEEM 2017}
}

inproceedings{10.1145/3341525.3393961,
author = {Odden, Tor Ole and Yadav, Aman and Tellefsen, Cathrine Wahlstr\o{}m and Caeli, Elisa Nadire},
title = {Integrating Computing into K-16 Education: Scaffolding Teacher and Student Learning in STEM Disciplines},
year = {2020},
isbn = {9781450368742},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3341525.3393961},
doi = {10.1145/3341525.3393961},
abstract = {The increasing role of computation in today's society requires us to go beyond computer science courses to integrating computational tools and practices within disciplinary contexts. However, we know little about what integration looks like in primary, secondary, and university classrooms. In this panel, we share perspectives on the importance of developing knowledge of computation in a digitized world and how it could be integrated within disciplinary context. In particular, we will discuss what embedding computation looks like at the elementary, secondary, and university level and how it can support disciplinary learning.},
booktitle = {Proceedings of the 2020 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {517–518},
numpages = {2},
keywords = {higher education, computational thinking, K-12},
location = {Trondheim, Norway},
series = {ITiCSE '20}
}

inproceedings{10.1145/3159450.3159522,
author = {Grover, Shuchi and Basu, Satabdi and Schank, Patricia},
title = {What We Can Learn About Student Learning From Open-Ended Programming Projects in Middle School Computer Science},
year = {2018},
isbn = {9781450351034},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3159450.3159522},
doi = {10.1145/3159450.3159522},
abstract = {Block-based programming environments such as Scratch, App Inventor, and Alice are a key part of introductory K-12 computer science (CS) experiences. Free-choice, open-ended projects are encouraged to promote learner agency and leverage the affordances of these novice-programming environments that also support creative engagement in CS. This mixed methods research examines what we can learn about student learning from such programming artifacts. Using an extensive rubric created to evaluate these projects along several dimensions, we coded a sample of ~80 Scratch and App Inventor projects randomly selected from 20 middle school classrooms in a diverse urban school district in the US. We present key elements of our rubric, and report on noteworthy trends including the types of artifacts created and which key programming constructs are or are not commonly used. We also report on how factors such as students' gender, grade, and teachers' teaching experience influenced students' projects. We discuss differences between programming environments in terms of artifacts created, use of computing constructs, complexity of projects, and use of features of the environment for creativity, interactivity, and engagement. Our findings will help educators of introductory computing be more cognizant of how best to leverage the programming environments they are using, and what aspects they need to focus on as they attempt to address the learning needs of all in "CS For All."},
booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
pages = {999–1004},
numpages = {6},
keywords = {app inventor, computational thinking, introductory programming, k-12 cs education, middle school, open-ended programming projects, rubric, scratch},
location = {Baltimore, Maryland, USA},
series = {SIGCSE '18}
}

inproceedings{10.1145/3434780.3436705,
author = {Rodr\'{\i}guez-Garc\'{\i}a, Juan David and Moreno-Le\'{o}n, Jes\'{u}s and Rom\'{a}n-Gonz\'{a}lez, Marcos and Robles, Gregorio},
title = {Introducing Artificial Intelligence Fundamentals with LearningML: Artificial Intelligence made easy},
year = {2021},
isbn = {9781450388504},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3434780.3436705},
doi = {10.1145/3434780.3436705},
abstract = {This paper is a summary of the webinar hold on October 22nd at the “Computational thinking and robotics in education” track in which the LearningML project was presented. The LearningML project aims to bring the fundamentals of Artificial Intelligence (AI) to children and people interested in acquiring knowledge on this subject in an easy way. AI has heavily irrupted in society and everyone is using, more or less consciously, application based on AI. Therefore, some kind of AI literacy is needed if we are to educate critically thinking citizens able to understand technologies that have a relevant impact on their lives. In this presentation we show how LearningML can help us to reach this goal trough programming applications based on Machine Learning (ML), the most prevalent subfield of AI today.},
booktitle = {Eighth International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {18–20},
numpages = {3},
keywords = {machine learning, computational thinking, assessment, K-12, Artificial intelligence},
location = {Salamanca, Spain},
series = {TEEM'20}
}

inproceedings{10.1145/3341215.3356264,
author = {Fuste, Anna and Schmandt, Chris},
title = {HyperCubes: A Playful Introduction to Computational Thinking in Augmented Reality},
year = {2019},
isbn = {9781450368711},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3341215.3356264},
doi = {10.1145/3341215.3356264},
abstract = {We present HyperCubes, an Augmented Reality (AR) platform to foster computational literacy. Using paper cubes as AR markers and spatial tracking, the user becomes familiar with sequences of instructions as coding blocks. We leverage spatial cognition as a means to improve understanding of procedural and sequential models. We have performed two pilot studies for an iterative and user centered design of the platform. With a final qualitative user study we address engagement levels and the educational potential of the platform. We argue that by using spatial cognition and the flexibility of the AR medium, a playful introduction to basic computational thinking concepts can be presented in late elementary school and middle school children.},
booktitle = {Extended Abstracts of the Annual Symposium on Computer-Human Interaction in Play Companion Extended Abstracts},
pages = {379–387},
numpages = {9},
keywords = {augmented reality, computational thinking, diy, k-12 education, paper crafts, programming, spatial cognition},
location = {Barcelona, Spain},
series = {CHI PLAY '19 Extended Abstracts}
}

inproceedings{10.1145/3012430.3012498,
author = {Gonzalez-Sacristan, Carlos and Garcia-Saura, Carlos and Molins-Ruano, Pablo},
title = {Phogo: A low cost, engaging and modern proposal to learn how to program},
year = {2016},
isbn = {9781450347471},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3012430.3012498},
doi = {10.1145/3012430.3012498},
abstract = {Basic computational thinking, so necessary in today's society, can be learned in an engaging way with the use of educational robots. In order to reach very diverse groups of people, educational robots need to be simple, scalable and low cost.Inspired by the success of the LOGO project, we have developed the Phogo pedagogical platform, built around a low cost robot (less than $80) capable of tracing its path with a marker pen. We also present a high-level Python-based control library that allows for transparent and easy wireless communication with the robots. The approach was tested in an informal workshop with a group of teenagers without any previous self-conscious computational knowledge. As the students were attracted by the robot and the simple approach, they were able to gain some insight about abstract programming concepts such as variables, functions, and flow control structures. The majority of the students were people with physical, cognitive or intellectual disabilities and they were able to follow, enjoy and learn as any other student making this an accessible activity to everyone.Finally, we summarize our efforts documenting and publishing the Phogo system as open-source in order to promote its use in future workshops.},
booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {67–71},
numpages = {5},
keywords = {robotic platform, open-source, low cost, educational robots, computational thinking, Python, LOGO, 3d-printing},
location = {Salamanca, Spain},
series = {TEEM '16}
}

inproceedings{10.1145/3265757.3265790,
author = {Van de Staey, Zimcke and Verlinde, Tobias and Demoen, Bart and Martens, Bern},
title = {Co-de: an online learning platform for computational thinking},
year = {2018},
isbn = {9781450365888},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3265757.3265790},
doi = {10.1145/3265757.3265790},
abstract = {Computational thinking (CT) has gained wide recognition as an important K-12 educational goal, initially in the context of computer science (CS), and more recently also beyond CS. The development of CT teaching materials and approaches is therefore of prime importance. Here, an online learning platform for CT, named Co-De, is presented. It addresses five major aspects of CT explicitly, in the context of a variety of computational problems. Students using Co-De, work through classes, individually or in teams, doing a mixture of unplugged and online exercises and quizzes, as well as some programming. Teachers can fine-tune the default Co-De learning paths to cater for their specific groups of students and/or specific learning goals. Co-De is implemented on top of the open-source learning platform Moodle. It can be used directly at a central server, or a customised version can be installed and used locally.},
booktitle = {Proceedings of the 13th Workshop in Primary and Secondary Computing Education},
articleno = {32},
numpages = {2},
keywords = {computational thinking, computing education, learning tools, secondary education},
location = {Potsdam, Germany},
series = {WiPSCE '18}
}

inproceedings{10.1145/3059009.3059067,
author = {Maiorana, Francesco and Berry, Miles and Nelson, Mark and Lucarelli, Chery and Phillipps, Margot and Mishra, Shitanshu and Benassi, Andrea},
title = {International Perspectives on CS Teacher Formation and Professional Development},
year = {2017},
isbn = {9781450347044},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3059009.3059067},
doi = {10.1145/3059009.3059067},
abstract = {Drawing on Mishra and Koehler's "TPACK" model [1], we recognize that great Computer Science (CS) teaching demands great pedagogy, great technology skills and great subject knowledge. The main challenge facing any jurisdiction in implementing a CS curriculum within schools is the shortage of new teachers being trained in CS and to meet the demand many countries have focused on professional development (PD) for existing teachers across a diverse range of subjects. Some initial PD efforts in CS were often brief, with little follow-on support, and supported through external grant funding. This created challenges and opportunities for teacher PD in CS. As the need for CS at the K-12 level continues to grow, approaches should be sustainable and scalable. This includes preparing teachers at all levels, pre k-12, while they are still learning to be teachers and some funding initiatives have included preservice teacher support as part of this [2]. Inside the European Union (EU) the Scientix project [3] represents a focus European Commission (EC) funded projects and is a repository for PD with resources for pedagogy, technology and subject knowledge. Besides this effort, spreading CS knowledge has been supported by volunteers led movements like CoderDojo. The panelists will discuss the following main topics: 1) Pre-service vs in-service, where do teachers come from? 2) Interdisciplinary ways of infusing CS. 3) Ways of replicating across countries CS teacher training initiatives aimed at sustaining and growing the number and quality of both in-service and pre-service teachers able to teach CS effectively. 4) Effective approaches to help teachers to build confidence in their ability to teach Computer Science (CS)},
booktitle = {Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {236–237},
numpages = {2},
keywords = {teacher professional development, pedagogies, computer science, computational thinking},
location = {Bologna, Italy},
series = {ITiCSE '17}
}

inproceedings{10.1145/3017680.3017717,
author = {Srikant, Shashank and Aggarwal, Varun},
title = {Introducing Data Science to School Kids},
year = {2017},
isbn = {9781450346986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3017680.3017717},
doi = {10.1145/3017680.3017717},
abstract = {Data-driven decision making is fast becoming a necessary skill in jobs across the board. The industry today uses analytics and machine learning to get useful insights from a wealth of digital information in order to make decisions. With data science becoming an important skill needed in varying degrees of complexity by the workforce of the near future, we felt the need to expose school-goers to its power through a hands-on exercise. We organized a half-day long data science tutorial for kids in grades 5 through 9 (10-15 years old). Our aim was to expose them to the full cycle of a typical supervised learning approach - data collection, data entry, data visualization, feature engineering, model building, model testing and data permissions. We discuss herein the design choices made while developing the dataset, the method and the pedagogy for the tutorial. These choices aimed to maximize student engagement while ensuring minimal pre-requisite knowledge. This was a challenging task given that we limited the pre-requisites for the kids to the knowledge of counting, addition, percentages, comparisons and a basic exposure to operating computers. By designing an exercise with the stated principles, we were able to provide to kids an exciting, hands-on introduction to data science, as confirmed by their experiences. To the best of the authors' knowledge, the tutorial was the first of its kind. Considering the positive reception of such a tutorial, we hope that educators across the world are encouraged to introduce data science in their respective curricula for high-schoolers and are able to use the principles laid out in this work to build full-fledged courses.},
booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
pages = {561–566},
numpages = {6},
keywords = {K-12 education, computational thinking, data science, supervised learning, visualization},
location = {Seattle, Washington, USA},
series = {SIGCSE '17}
}

inproceedings{10.1145/3364510.3366155,
author = {Bastian, Morten and M\"{u}hling, Andreas},
title = {Let's Look a Layer Deeper: Design and First Results of a New Test System in the Context of Program Tracing},
year = {2019},
isbn = {9781450377157},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3364510.3366155},
doi = {10.1145/3364510.3366155},
abstract = {We present an online assessment system for tracing code snippets. It is particularly suited for K12 settings and features a grid-world and a figure that moves in the world. Learners are asked to move the figure manually in accordance with what a given block of code would do. The system allows inspection of cognitive processes and misconceptions in more detail than typical pen&amp;paper assessments can provide. The paper presents the system and a preliminary empirical investigation together with future work that we are planning for the tool.},
booktitle = {Proceedings of the 19th Koli Calling International Conference on Computing Education Research},
articleno = {33},
numpages = {2},
keywords = {program tracing, novice programmer, computer science education, assessment, Computational thinking},
location = {Koli, Finland},
series = {Koli Calling '19}
}

inproceedings{10.1145/3383923.3383935,
author = {Vourletsis, Ioannis and Politis, Panagiotis},
title = {Effects of a Computational Thinking Experimental Course on Students' Perceptions of Their Problem-Solving Skills},
year = {2020},
isbn = {9781450375085},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3383923.3383935},
doi = {10.1145/3383923.3383935},
abstract = {Computational thinking (CT) is an essential skill for students in the 21st century, providing a set of problem-solving methods that involve formulating problems and solutions in a form that can be carried out by an information-processing agent across a variety of fields. In addition, research shows that the integration of CT in education has the potential to improve the problem-solving skills of K-12 students. This study aimed to investigate the effect of a CT experimental course on 94 primary school students' perceptions of their problem-solving skills as well as possible correlations between the variables concerning the students' perceptions. Participants worked in pairs in the context of Scratch, a block-based visual programming language, and the data were collected through the Problem-Solving Inventory for Children (PSIC). A one-group pretest-posttest was conducted and the results suggest that a CT course can improve participants' overall perceptions of their problem-solving skills. Finally, increases in the participants' levels of control over emotions and behavior when facing problems were correlated with increases in their will to face their problems rather than avoid them.},
booktitle = {Proceedings of the 2020 9th International Conference on Educational and Information Technology},
pages = {14–20},
numpages = {7},
keywords = {Computational Thinking (CT), block-based visual programming, problem-solving skills, students' perceptions},
location = {Oxford, United Kingdom},
series = {ICEIT 2020}
}

inproceedings{10.1145/3141880.3143780,
author = {von Hausswolff, Kristina},
title = {Practical thinking in programming education},
year = {2017},
isbn = {9781450353014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3141880.3143780},
doi = {10.1145/3141880.3143780},
abstract = {Students are nowadays being introduced to the digital age as part of their formal education. This includes practical programming skills as well as more conceptual thinking tools developed in the discipline of computer science, sometimes denoted Computational Thinking (CT). The connection between CT and doing programming is sometimes thought of as the connection between theory and practice. The pragmatic thinker Dewey embraced practice in learning and argued that learning and knowing always come from experiencing the world. According to this view, there are no epistemological differences between theory and practice. In computer programming the student's active learning in the form of physical motor movement is important. Using the pragmatic way of analyzing learning to program puts a focus on the situated thinking during the practical programming, which relates to theories about CT. This research is focusing on the practical hands-on part of novice programming and in this aims at getting insights about factors important when learning to program that could inform teachers in the Computer Science classroom.},
booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
pages = {203–204},
numpages = {2},
keywords = {pragmatism, practice, novice programming, computer science education, computational thinking},
location = {Koli, Finland},
series = {Koli Calling '17}
}

inproceedings{10.1145/3202185.3210766,
author = {Jordan-Douglass, Anna and Kumar, Vishesh and Woods, Peter J.},
title = {Exploring computational thinking through collaborative problem solving and audio puzzles},
year = {2018},
isbn = {9781450351522},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3202185.3210766},
doi = {10.1145/3202185.3210766},
abstract = {Although educators, researchers, and designers have increasingly advocated for developing computational thinking (CT) in young children, the vast majority of CT learning environments fail to support the development of positive attitudes towards problem solving, confidence in dealing with complexity, and communicating and working with others to achieve a goal. To address this issue, our design team developed a music-based puzzle game called SynthSync. The game challenges players to work collaboratively to "debug" jumbled musical compositions through close listening, tinkering, and communication. SynthSync players manipulate controls to adjust musical variables (pitch, note length, and the length of rests) in arhythmic and dissonant musical puzzles based on popular songs until they "discover" the original piece of music.},
booktitle = {Proceedings of the 17th ACM Conference on Interaction Design and Children},
pages = {513–516},
numpages = {4},
keywords = {children, collaborative problem solving, computational thinking, debugging, game, music, puzzles},
location = {Trondheim, Norway},
series = {IDC '18}
}

inproceedings{10.1145/3105726.3106166,
author = {Rich, Kathryn M. and Strickland, Carla and Binkowski, T. Andrew and Moran, Cheryl and Franklin, Diana},
title = {K-8 Learning Trajectories Derived from Research Literature: Sequence, Repetition, Conditionals},
year = {2017},
isbn = {9781450349680},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3105726.3106166},
doi = {10.1145/3105726.3106166},
abstract = {Computing curricula are being developed for elementary school classrooms, yet research evidence is scant for learning trajectories that drive curricular decisions about what topics should be addressed at each grade level, at what depth, and in what order. This study presents learning trajectories based on an in-depth review of over 100 scholarly articles in computer science education research. We present three levels of results. First, we present the characteristics of the 600+ learning goals and their research context that affected the learning trajectory creation process. Second, we describe our first three learning trajectories (Sequence, Repetition, and Conditionals), and the relationship between the learning goals and the resulting trajectories. Finally, we discuss the ways in which assumptions about the context (mathematics) and language (e.g., Scratch) directly influenced the trajectories.},
booktitle = {Proceedings of the 2017 ACM Conference on International Computing Education Research},
pages = {182–190},
numpages = {9},
keywords = {learning trajectories, computational thinking, K-6},
location = {Tacoma, Washington, USA},
series = {ICER '17}
}

inproceedings{10.1145/2839509.2844585,
author = {Mouza, Chrystalla and Pollock, Lori and Pusecker, Kathleen and Guidry, Kevin and Yeh, Ching-Yi and Atlas, James and Harvey, Terry},
title = {Implementation and Outcomes of a Three-Pronged Approach to Professional Development for CS Principles},
year = {2016},
isbn = {9781450336857},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2839509.2844585},
doi = {10.1145/2839509.2844585},
abstract = {One of the greatest challenges in broadening participation in computer science is teacher preparation, as few middle and high school teachers have a formal background in computing. Further, without a credentialing program, there are limited ways to learn content and pedagogical strategies for effective computer science instruction. As a result, professional development is key to successful reform in the teaching of computer science. In this paper, we describe our three-pronged approach to the design of a professional development model for middle and high school teachers interested in implementing the Computer Science Principles (CSP) curriculum in their classrooms or infusing CSP modules into STEM curricula. We describe our model focusing on content, pedagogical strategies and follow-up classroom support during the academic year. We subsequently report on participating teacher outcomes, in terms of self-rated understandings, attitudes and implementation practices. We share lessons learned and offer recommendations for professional development designers.},
booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
pages = {66–71},
numpages = {6},
keywords = {computational thinking, cs education, cs principles, k12},
location = {Memphis, Tennessee, USA},
series = {SIGCSE '16}
}

inproceedings{10.1145/3345120.3352738,
author = {Dragon, Tom\'{a}\v{s}},
title = {Support of Teacher's Work in the Field of Development of Computational Thinking Through E-Learning Resources},
year = {2019},
isbn = {9781450372107},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3345120.3352738},
doi = {10.1145/3345120.3352738},
abstract = {The paper describes some selected approaches related to the support of teacher's work, which focuses on the development of computational thinking and the use of modern e-learning on-line resources. The article also deals with the design related to the research, which will be implemented in connection with these activities and will thus commit to the current professional discussion on the possibilities of development of computational thinking in connection with the Digital Education Strategy until 2020 and the upcoming reform of ICT curriculum in the Czech Republic. Web and mobile applications appear to be suitable e-learning resources for algorithm and programming studies that can contribute positively to the development of computational thinking. So far, however, no relevant research has described whether teachers or future teachers are familiar with these resources, whether they can use them, and whether they also meet their needs. We want to respond to all these facts in our research.},
booktitle = {Proceedings of the 3rd International Conference on Education and Multimedia Technology},
pages = {131–135},
numpages = {5},
keywords = {E-learning, algorithmization, computational thinking, mobile applications, programming, research, web applications},
location = {Nagoya, Japan},
series = {ICEMT '19}
}

inproceedings{10.1145/3279720.3279735,
author = {Basso, Demis and Fronza, Ilenia and Colombi, Alessandro and Pahl, Claus},
title = {Improving Assessment of Computational Thinking Through a Comprehensive Framework},
year = {2018},
isbn = {9781450365352},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3279720.3279735},
doi = {10.1145/3279720.3279735},
abstract = {In recent years, Computational Thinking (CT) made its way into K-12 as a key set of 21st-century skills. However, the issue of assessing student's learning of CT remains a challenging one: it is indeed not clear how to achieve a comprehensive evaluation that is able to assess not only the technical and domain-specific skills, but also the domain-independent meta-skills of CT. Finding a solution to this issue is crucial, because assessment not only determines whether or not educational goals are being met, but also supports the design of a curriculum. Multiple forms of assessments have been proposed within the main perspective of programming skills, neglecting the possible generalization of CT training on other skills. In this work, we first review the existing approaches to CT assessment. Then, we discuss what non-technical skills (relational skills and cognitive life-skills) should be included in a comprehensive CT assessment framework. Moreover, we provide an indication of possible solutions to capitalize on the existing experiences in order to achieve a feasible integration of different types of assessment.},
booktitle = {Proceedings of the 18th Koli Calling International Conference on Computing Education Research},
articleno = {15},
numpages = {5},
keywords = {End-User Software Engineering, K-12, Software Engineering Training and Education},
location = {Koli, Finland},
series = {Koli Calling '18}
}

inproceedings{10.1145/2787622.2787751,
author = {Van Wart, Sarah Jane},
title = {Computer Science Meets Social Studies: Embedding CS in the Study of Locally Grounded Civic Issues},
year = {2015},
isbn = {9781450336307},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2787622.2787751},
doi = {10.1145/2787622.2787751},
abstract = {Data science is an emerging 21st century literacy that promises to support learning in a wide variety of disciplines, from science, to social science, to the humanities. It also provides an engaging context in which to learn computational thinking skills in existing classroom contexts. For my dissertation research, I will explore whether and how data science can support inquiry-based learning in social studies. I conjecture that data science could provide students with an opportunity to use computational thinking to better understand their social world, while also allowing students to draw from and make sense of their own experiences. I plan to explore this idea by enhancing and evaluating a software tool, Local Ground, and creating a curriculum that helps young people identify and describe salient characteristics of their lived realities, moving from unstructured to structured data representations (e.g., photos to tags to databases). This process may generate a rich, motivating data source to explore subsequent ideas in computational thinking and social science.},
booktitle = {Proceedings of the Eleventh Annual International Conference on International Computing Education Research},
pages = {281–282},
numpages = {2},
keywords = {broadening participation, computational thinking, data science education, interdisciplinary approaches},
location = {Omaha, Nebraska, USA},
series = {ICER '15}
}

inproceedings{10.1145/2729094.2754857,
author = {Meerbaum-Salant, Orni and Haberman, Bruria and Pollack, Sarah},
title = {"Computer Science, Academia and Industry" as pedagogical model to enhance Computational thinking},
year = {2015},
isbn = {9781450334402},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2729094.2754857},
doi = {10.1145/2729094.2754857},
abstract = {The Computer Science, Academia and Industry extra-curricular program has been operated for Israeli high school students majoring in computer science. A case study was conducted aimed to identify computational thinking in students' project development processes.},
booktitle = {Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {341},
numpages = {1},
keywords = {computational thinking},
location = {Vilnius, Lithuania},
series = {ITiCSE '15}
}

inproceedings{10.1145/2532748.2532763,
author = {Antonitsch, Peter K. and Gigacher, Cornelia and Hanisch, Liselotte and Sabitzer, Barbara},
title = {A media-reduced approach towards informatics at primary level},
year = {2013},
isbn = {9781450324557},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2532748.2532763},
doi = {10.1145/2532748.2532763},
abstract = {At the moment, informatics education stretches downward to reach primary education. This article emphasizes computational thinking, focuses upon goals of primary education and unveils how to connect to existing teaching and learning patterns when integrating computational thinking into primary education. Furthermore, a framework is sketched to combine computational thinking with computational doing in a media-reduced way.},
booktitle = {Proceedings of the 8th Workshop in Primary and Secondary Computing Education},
pages = {118–121},
numpages = {4},
keywords = {thinking, planning, computational thinking},
location = {Aarhus, Denmark},
series = {WiPSE '13}
}

inproceedings{10.1145/2670757.2670778,
author = {Sabitzer, Barbara and Antonitsch, Peter K. and Pasterk, Stefan},
title = {Informatics concepts for primary education: preparing children for computational thinking},
year = {2014},
isbn = {9781450332507},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2670757.2670778},
doi = {10.1145/2670757.2670778},
abstract = {In Austria Informatics is not taught in primary schools, but the curriculum includes some issues in several subjects that are related to computational thinking. Teachers are not aware that they already teach and use informatics concepts in their daily lessons. Informatics didactics experts and teacher trainers have to inform them and reveal connections between their primary school contents and different informatics concepts. Furthermore, one general educational aim of the curriculum is the acquisition of elementary cultural techniques including a child-friendly approach to modern information and communication technologies (ICT). The aim of this paper is to show how this is possible in practice and lists informatics concepts already "hidden" in the primary school curriculum. It reports on different initiatives that aim at introducing informatics in primary schools as well as a sample project on computational thinking funded by the regional teacher support program Teaching Informatics creatively. The qualitative results of this and other primary school projects show that it is possible and worth integrating informatics already at this early stage.},
booktitle = {Proceedings of the 9th Workshop in Primary and Secondary Computing Education},
pages = {108–111},
numpages = {4},
keywords = {primary education, informatics, computational thinking},
location = {Berlin, Germany},
series = {WiPSCE '14}
}

inproceedings{10.1145/2462476.2465614,
author = {Qureshi, Shahzore and Estevez, Francisco and Pulimood, Sarah Monisha},
title = {Students organizing against pollution: computational thinking across boundaries},
year = {2013},
isbn = {9781450320788},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2462476.2465614},
doi = {10.1145/2462476.2465614},
abstract = {There is a growing need in computer science education to develop courses that demonstrate the articulations between computer science and an array of computing-dependent fields. This poster describes an effort to develop a model for students and faculty to collaborate across disciplines and with a community organization to develop computational solutions to address complex real-world problems. Students in computer science classes are collaborating with students in journalism classes and Habitat for Humanity, to develop a web-based system that manages pollution related data. This is an initiative aimed at empowering citizens in the Trenton area of New Jersey with the opportunity to learn, share, and contribute pollution data while encouraging them to become participants in environmental advocacy and public policy deliberations on these issues. While students focus on the objectives of the individual courses, they are also deeply engaged in the complexities of privacy, security, accessibility of data, user-centered design, etc. as they ponder civic justice issues.},
booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
pages = {356},
numpages = {1},
keywords = {web-based database system, user-generated content moderation, information access, collaborative learning, civic engagement},
location = {Canterbury, England, UK},
series = {ITiCSE '13}
}

inproceedings{10.1145/3148456.3148484,
author = {Slaviero, Cleyton and Haeusler, Edward Hermann},
title = {Exploring concurrency on computational thinking tools},
year = {2015},
isbn = {9781450353625},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3148456.3148484},
doi = {10.1145/3148456.3148484},
abstract = {Computational thinking (CT) tools express their designers' perspective on how a selected set of Computer Science concepts should be introduced, typically hiding details to avoid unnecessary complexity. This paper focuses on how concurrency is dealt with by five well-known tools in this domain: Scratch, Alice, AgentSheets, NetLogo and Greenfoot. We present the results of a systematic analysis contrasting their model of concurrent behavior with the corresponding programming interface messages that trigger their users' interpretation and learning of concurrency-related concepts. We present and discuss the conceptualizations that potentially emerge from using these five tools and compare them with established concurrency concepts. Our findings indicate opportunities for an explicit exploration of how some concurrency aspects are implemented in games and simulations built with CT tools. We believe that this might facilitate future learning and comprehension of complex concurrency concepts, considering that the knowledge embedded in these tools can also influence students' understanding of concurrency.},
booktitle = {Proceedings of the 14th Brazilian Symposium on Human Factors in Computing Systems},
articleno = {28},
numpages = {10},
keywords = {computer science education, concurrent programming, programming},
location = {Salvador, Brazil},
series = {IHC '15}
}

inproceedings{10.1145/2899415.2899465,
author = {Rodriguez, Brandon and Rader, Cyndi and Camp, Tracy},
title = {Using Student Performance to Assess CS Unplugged Activities in a Classroom Environment},
year = {2016},
isbn = {9781450342315},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2899415.2899465},
doi = {10.1145/2899415.2899465},
abstract = {Computer Science Unplugged activities have been shown to be successful in increasing student interest in computer science when used in outreach and after school events. There is less research available on adapting these extra-curricular activities for use in a classroom setting, where there are more students and the activities must support educational goals, not just changes in attitude. We describe our work in updating several existing CS Unplugged activities as well as introducing some new activities for use in an American middle school classroom. One challenge when using CS Unplugged activities is to determine what, if anything, students are learning. In this paper we detail one approach that links the updated activities to computational thinking skills, then incorporates worksheets where students illustrate their understanding.},
booktitle = {Proceedings of the 2016 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {95–100},
numpages = {6},
keywords = {cs unplugged, computational thinking, classroom assessment},
location = {Arequipa, Peru},
series = {ITiCSE '16}
}

inproceedings{10.1145/2676723.2678304,
author = {Franklin, Diana and Dwyer, Hilary A.},
title = {KELP CS and LaPlaya: A Computational Thinking Curriculum and Development Environment for 4th - 6th Grade (Abstract Only)},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2676723.2678304},
doi = {10.1145/2676723.2678304},
abstract = {This workshop introduces our elementary school programming curriculum, KELP-CS, and the corresponding programming environment LaPlaya. KELP-CS (Kids Engaged in Learning Programming) is an innovative, modular computational thinking curriculum for 4th-6th grade students. Off-computer activities connect computer science concepts to students' every day experiences. On-computer activities in LaPlaya develop students' computational thinking and programming skills. Finally, an engineering design project allows students to apply these new skills through an open-ended, creative project (e.g. digital storytelling in Module 1, and virtual game in Module 2). LaPlaya is a modified Scratch programming environment tailored to the developmental needs of 4th-6th grade students. In this workshop, we begin by introducing the KELP-CS curriculum; LaPlaya, the development environment used in the on-computer activities; and the resources for teachers embedded in both. Workshop participants will do sample on- and off- computer activities from Module 1 (4th grade) and discuss tips and strategies for teaching computational thinking with this age group. For the second part of the workshop, we provide additional background for participants interested in creating their own curriculum with LaPlaya. This includes how to create projects and their analysis.},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
pages = {712},
numpages = {1},
keywords = {novice programming environments, elementary school, computer science education},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

inproceedings{10.1145/2591708.2591729,
author = {de Souza, Clarisse S. and Salgado, Luciana C. and Leit\~{a}o, Carla F. and Serra, Martha M.},
title = {Cultural appropriation of computational thinking acquisition research: seeding fields of diversity},
year = {2014},
isbn = {9781450328333},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2591708.2591729},
doi = {10.1145/2591708.2591729},
abstract = {In this paper, we report the developments of a Computational Thinking Acquisition project carried out in pilot Brazilian schools. The project is a branch of a successful, more than a decade old project in the USA. We present and discuss the factors that led to specific cultural appropriation and diversification of the North American experience. In particular, we explain the kind of technology that has been developed in South America compared to the one developed and used in the USA, and propose that the lessons we have learned in the project's short history in Brazil can already seed the reflection of IT and Education researchers.},
booktitle = {Proceedings of the 2014 Conference on Innovation &amp; Technology in Computer Science Education},
pages = {117–122},
numpages = {6},
keywords = {agentsheets, computational thinking acquisition, programming},
location = {Uppsala, Sweden},
series = {ITiCSE '14}
}

inproceedings{10.1145/2818314.2818328,
author = {Duncan, Caitlin and Bell, Tim},
title = {A Pilot Computer Science and Programming Course for Primary School Students},
year = {2015},
isbn = {9781450337533},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2818314.2818328},
doi = {10.1145/2818314.2818328},
abstract = {Computer Science and programming are being introduced to school curricula in many western countries in an effort to equip students with Computational Thinking skills. However, as these subjects are still relatively new to pre-tertiary education there is much investigation to be done into how best to present these topics and how to prepare teachers. In this study we focus on the presentation of topics relating to computing, Computational Thinking, and Computer Science for primary schools.We analyse English-language curricula that have been published, specifically the English, Australian and CSTA curricula for primary schools. From this we establish the main topics covered, and how they are positioned to be suitable for students from the first year of school to approximately their eighth year.We then report on a pilot study of a curriculum based on Computational Thinking; long term the study will encompass a range of topics and year levels, but the pilot focused on topics suitable for 11 to 12 year old students. Here we detail the design of this part of the curriculum, the manner of its delivery, and the experiences and observations of the generalist teacher who taught the course. Through assessment data, student responses to an attitude survey, and class observations we have evaluated the pilot curriculum. The findings of this study are being used to inform the design of a planned larger scale study.},
booktitle = {Proceedings of the Workshop in Primary and Secondary Computing Education},
pages = {39–48},
numpages = {10},
keywords = {programming, primary school, curriculum, computational thinking, Algorithms},
location = {London, United Kingdom},
series = {WiPSCE '15}
}

inproceedings{10.1145/2960310.2960346,
author = {Good, Jon},
title = {Computational Thinking as a Computer Science Education Framework and the Related Effects on Gender Equity},
year = {2016},
isbn = {9781450344494},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2960310.2960346},
doi = {10.1145/2960310.2960346},
abstract = {I have recently completed my third year of study in the Educational Psychology and Educational Technology doctoral program at Michigan State University. I have successfully completed all of my coursework and comprehensive/qualifying exams. I will be proposing my dissertation study in the Fall semester of 2016 and expect to defend my dissertation in the Fall semester of 2017. My prior research has been focused on issues related to computational thinking, creativity, and computer science education. I am currently developing my literature review and honing my core research questions. I hope to subsequently develop my research methods and measures more fully, with plans to begin fieldwork in Fall of 2016.},
booktitle = {Proceedings of the 2016 ACM Conference on International Computing Education Research},
pages = {277–278},
numpages = {2},
keywords = {computational thinking, gender equity, secondary education},
location = {Melbourne, VIC, Australia},
series = {ICER '16}
}

inproceedings{10.1145/1953163.1953243,
author = {Dierbach, Charles and Hochheiser, Harry and Collins, Samuel and Jerome, Gerald and Ariza, Christopher and Kelleher, Tina and Kleinsasser, William and Dehlinger, Josh and Kaza, Siddharth},
title = {A model for piloting pathways for computational thinking in a general education curriculum},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1953163.1953243},
doi = {10.1145/1953163.1953243},
abstract = {Computational thinking has been identified as a necessary fundamental skill for all students. University curricula, however, are currently not designed to provide such knowledge to a broad student population. In this paper, we report on our experiences in the development of a model for incorporating computational thinking into the undergraduate, general education curriculum at Towson University. We discuss the model in terms of eliciting faculty interest, institutional support, and positive student response. In the first two years of this NSF-funded three-year project, we have developed, piloted and assessed five computational thinking general education courses - an Everyday Computational Thinking course, and four discipline-specific computational thinking general education courses. Initial assessments show promising and significant student, instructor and administration interest in computational thinking as a basis in courses covering multiple disciplines within the general education curriculum.},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
pages = {257–262},
numpages = {6},
keywords = {curriculum design, computational thinking},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

inproceedings{10.1145/2538862.2538940,
author = {Miller, L. D. and Soh, Leen-Kiat and Chiriacescu, Vlad and Ingraham, Elizabeth and Shell, Duane F. and Hazley, Melissa Patterson},
title = {Integrating computational and creative thinking to improve learning and performance in CS1},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2538940},
doi = {10.1145/2538862.2538940},
abstract = {Our research is based on an innovative approach that integrates computational thinking and creative thinking in CS1 to improve student learning performance. Referencing Epstein's Generativity Theory, we designed and deployed a suite of creative thinking exercises with linkages to concepts in computer science and computational thinking, with the premise that students can leverage their creative thinking skills to "unlock" their understanding of computational thinking. In this paper, we focus on our study on differential impacts of the exercises on different student populations. For all students there was a linear "dosage effect" where completion of each additional exercise increased retention of course content. The impacts on course grades, however, were more nuanced. CS majors had a consistent increase for each exercise, while non-majors benefited more from completing at least three exercises. It was also important for freshmen to complete all four exercises. We did find differences between women and men but cannot draw conclusions.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {475–480},
numpages = {6},
keywords = {creative thinking, computational thinking, CS1},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

inproceedings{10.1145/3416797.3416819,
author = {Bryndov\'{a}, Lucie and Mali\v{s}\r{u}, Petri},
title = {Assessing the Current Level of the Computational Thinking Within the Primary and Lower Secondary School Students using Educational Robotics Tasks},
year = {2020},
isbn = {9781450388375},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3416797.3416819},
doi = {10.1145/3416797.3416819},
abstract = {The aim of this research was to develop a set of tasks assessing prerequisite Computational Thinking (CT) skills within Czech primary school students using an educational robotics as a supporting tool. Czech Republic, along with numerous European countries, currently implements a revision of the existing computer science curriculum at the primary and secondary education level, to widen the national information literacy and embed the development of CT into the basic STEM education. The integration of the CT development at a level of a national school education raises a question of assessing actual CT skills of the students and creating a standardized methodology for a such assessment. This paper discusses the results of the research aimed to assess the CT skills within primary school students which was tested on a sample number of 90 students age 8 - 13 during extended education classes and events.},
booktitle = {Proceedings of the 4th International Conference on Education and Multimedia Technology},
pages = {239–243},
numpages = {5},
location = {Kyoto, Japan},
series = {ICEMT '20}
}

inproceedings{10.1145/2047594.2047678,
author = {Settle, Amber},
title = {The computational thinking across the curriculum workshop},
year = {2011},
isbn = {9781450310178},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2047594.2047678},
doi = {10.1145/2047594.2047678},
abstract = {We report on a workshop conducted as a part of an NSF-funded project focused on enhancing computational thinking in the general education curriculum. The workshop brought together project participants as well as other interested individuals to reflect on the first two years of the grant and begin planning for future work. We report on the results of a survey of workshop participants, providing insight into factors that contribute to the success of such events.},
booktitle = {Proceedings of the 2011 Conference on Information Technology Education},
pages = {311–312},
numpages = {2},
keywords = {community outreach, computational thinking},
location = {West Point, New York, USA},
series = {SIGITE '11}
}

inproceedings{10.1145/2493394.2493404,
author = {Basawapatna, Ashok R. and Repenning, Alexander and Koh, Kyu Han and Nickerson, Hilarie},
title = {The zones of proximal flow: guiding students through a space of computational thinking skills and challenges},
year = {2013},
isbn = {9781450322430},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2493394.2493404},
doi = {10.1145/2493394.2493404},
abstract = {This paper presents a novel pedagogical framework, entitled the Zones of Proximal Flow, which integrates Vygotsky's Zone of Proximal Development theory with Csikszentmihalyi's ideas about Flow. Flow focuses on the individual-- an individual is in Flow when challenges are balanced with skills. The Zone of Proximal Development, on the other hand, brings in a social learning aspect focusing on a student's ability to learn concepts with external support. From our research experiences bringing game and simulation design into middle school classrooms, we attempt to provide students with appropriate challenges using a project-first based approach that aims to keep students in Flow. The project-first approach employs inquiry based scaffolding to guide students, with appropriate support by their teachers, through Vygotsky's Zone of Proximal Development, back in to Csikszentmihalyi's state of Flow for an ideal learning experience. We call this space the Zones of Proximal Flow. Data indicate that the Zones of Proximal Flow approach works, keeping classrooms engaged in the act of game design and enabling students to advance to more complex program creations.},
booktitle = {Proceedings of the Ninth Annual International ACM Conference on International Computing Education Research},
pages = {67–74},
numpages = {8},
keywords = {zones of proximal flow, zone of proximal development, simulations, scalable game design, flow, computer science education, computational thinking patterns, computational thinking},
location = {San Diego, San California, USA},
series = {ICER '13}
}

inproceedings{10.1145/3078072.3084306,
author = {Eloy, Adelmo Antonio da Silva and Martins, Amilton Rodrigues Quadros and Pazinato, Ariane Mileidi and Lukjanenko, Maria de Fatima S. Polesi and Lopes, Roseli de Deus},
title = {Programming Literacy: Computational Thinking in Brazilian Public Schools},
year = {2017},
isbn = {9781450349215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3078072.3084306},
doi = {10.1145/3078072.3084306},
abstract = {Bringing Programming to K-12 Education has been a strong tendency in Brazil and in the world. In this work-in-progress, we describe an experience in teacher training with the goal of promoting the practice of programming and the development of computational thinking in students of Brazilian public schools, through an initiative called Programming Literacy. Here we present strategies used in the implementation of the initiative, design of a curricular structure and training program, as well as monitoring and evaluation strategies. The results and findings of the initiative, involving more than 500 students from four cities in 2016, are shared as well as the perspectives on next steps.},
booktitle = {Proceedings of the 2017 Conference on Interaction Design and Children},
pages = {439–444},
numpages = {6},
keywords = {teacher training, programming, k-12 education, computer science education, computational thinking},
location = {Stanford, California, USA},
series = {IDC '17}
}

inproceedings{10.1145/2445196.2445373,
author = {Kafai, Yasmin B. and Burke, Quinn},
title = {The social turn in K-12 programming: moving from computational thinking to computational participation},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445373},
doi = {10.1145/2445196.2445373},
abstract = {In this conceptual paper, we argue that recent developments in K-12 programming education are suggestive of what can be called a "social turn", a shift in the field in which learning to code has shifted from being a predominantly individualistic and tool-oriented approach to now one that is decidedly sociologically and culturally grounded in the creation and sharing of digital media. We discuss in detail three dimensions of this social turn (1) from writing code to creating applications, (2) from composing "from scratch" to remixing the work of others, and (3) from designing tools to facilitating communities. These three shifts illustrate how the development of artifacts, tools, and communities of programming lead us to move from computational thinking to computational participation. We draw from examples of past and current research, both inside and outside of school, and situate these developments in the context of current discussions around computational thinking, which has become a driving force in revitalizing programming in K-12 curricula and altogether broadening participation in computing.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {603–608},
numpages = {6},
keywords = {tools, novice programming, networked commons},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

inproceedings{10.1145/3130859.3131335,
author = {Goyal, Sidhant and Chopra, Simran and Mohanan, Dileep},
title = {CodeFruits: Teaching Computational Thinking Skills Through Hand Gestures},
year = {2017},
isbn = {9781450351119},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3130859.3131335},
doi = {10.1145/3130859.3131335},
abstract = {Researchers in the past have explored several interactive tools and techniques to teach students abstract concepts of programming and computational thinking. They have explored playful and collaborative way to do so which includes text-based, visual or tangible programming toolkits. In CodeFruits, we are exploring hand gestures as an input interaction mechanism. These hand gestures represent different elements of programming languages such as functions and parameters. We have developed a gesture based interactive game which implicitly helps K-12 students to learn abstract concepts of computational thinking and write a computational code in an easier, playful and engaging way.},
booktitle = {Extended Abstracts Publication of the Annual Symposium on Computer-Human Interaction in Play},
pages = {291–298},
numpages = {8},
keywords = {k-12 students, hand gestures, games, computational thinking},
location = {Amsterdam, The Netherlands},
series = {CHI PLAY '17 Extended Abstracts}
}

inproceedings{10.1145/3251961,
author = {Craig, Annemieke},
title = {Session details: Computational thinking},
year = {2010},
isbn = {9781605588209},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3251961},
doi = {10.1145/3251961},
booktitle = {Proceedings of the Fifteenth Annual Conference on Innovation and Technology in Computer Science Education},
location = {Bilkent, Ankara, Turkey},
series = {ITiCSE '10}
}

inproceedings{10.1145/1734263.1734276,
author = {Freudenthal, Eric Andrew and Roy, Mary K. and Ogrey, Alexandria Nicole and Magoc, Tanja and Siegel, Alan},
title = {MPCT: media propelled computational thinking},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734276},
doi = {10.1145/1734263.1734276},
abstract = {Media-Propelled Computational Thinking (MPCT - pronounced impact) is a course designed to introduce programming in the context of engaging problems in media computation, math, and physics. Programming concepts are introduced as incremental steps needed to solve pragmatic problems students already understand. The problems, graphical API, and hands-on program features are intended to expose fundamental concepts in mathematics and quantitative science.MPCT is offered in an entering students program for freshmen who plan to specialize in a variety of STEM (science, technology, engineering and math) and non-STEM subjects. The curriculum is intended to strengthen student intuition and interest in mathematical modeling and programming by engaging students in the direct manipulation of simple mathematical systems that model and display familiar physical phenomena. MPCT uses programs as concrete and manipulatable examples of fundamental concepts to engage a diverse range of students including women and underrepresented minorities.Variants of MPCT are being developed for high schools, and as a means to introduce computational science to upper division undergraduates studying non-computational STEM disciplines. This paper provides an overview of MPCT and representative problem studies including models of ballistics and resonant systems. The evaluation plan is described and very preliminary results are presented.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {37–41},
numpages = {5},
keywords = {first year programs, cs-zero, computational thinking},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

inproceedings{10.1145/3247314,
author = {Rabung, John},
title = {Session details: Computational thinking across disciplines},
year = {2009},
isbn = {9781605581835},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3247314},
doi = {10.1145/3247314},
booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
location = {Chattanooga, TN, USA},
series = {SIGCSE '09}
}

inproceedings{10.1145/3291279.3341203,
author = {Guerzhoy, Michael},
title = {Introduction to Data Science as a Pathway to Further Study in Computing},
year = {2019},
isbn = {9781450361859},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3291279.3341203},
doi = {10.1145/3291279.3341203},
abstract = {Several institutions have recently introduced Introduction to Data Science courses that involve a substantial programming component and do not require CS1 as a prerequisite. Programming and computational thinking are central to the emerging discipline of data science, and so there is overlap between traditional CS1 courses and Introduction to DS.Partly because of the evident societal significance of data science and because data science does not have the problematic reputation of computer science, Intro to DS can attract new and diverse audiences that may not have been interested in taking CS1.We explore Intro to DS as a possible alternative path into computing: what are the learning goals in Intro to DS that involve programming and/or computational thinking? How generalizable are the problems students solve in Intro to DS to what students would encounter in future studies? Is it feasible for students to pursue a data science sequence rather than CS1-CS2 and be prepared for a career that uses data science? To what extent can a pathway through a data science sequence diversify the population of students who graduate from degree programs in computer science and data science?We survey the Introduction to Data Science courses offered in North American post-secondary education, and focus on a data science sequence that uses the R programming language and does not require CS1 at an R1 institution as a case study.},
booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
pages = {303},
numpages = {1},
keywords = {cs1, data science, diversity, women in computer science},
location = {Toronto ON, Canada},
series = {ICER '19}
}

inproceedings{10.1145/3213818.3220126,
author = {Sharma, Kshitij and Papavlasopoulou, Sofia and Giannakos, Michail and Jaccheri, Letizia},
title = {Kid Coding Games and Artistic Robots: Attitudes and Gaze Behavior},
year = {2018},
isbn = {9781450353717},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3213818.3220126},
doi = {10.1145/3213818.3220126},
abstract = {We present a study in the context of coding activities for children. Our main focus is towards understanding the relation between children's attitudes towards coding and their behaviour while coding. Forty-four school children participated in this study solving different coding problems. We used mixed methods to capture attitude and behaviour of the children participating in the study. The attitudes towards learning to program were recorded using the self-reporting questionnaires and the behaviour was captured using the eye-trackers. The results show that the gaze-behaviour of the children moderates the relationship among the different attitudes towards coding.},
booktitle = {Proceedings of the Conference on Creativity and Making in Education},
pages = {64–71},
numpages = {8},
keywords = {Eye-tracking, Mobile eye-tracking, attitude, attitude for programming, computational thinking, learning, pre-university coding, programming psychology},
location = {Trondheim, Norway},
series = {FabLearn Europe'18}
}

inproceedings{10.1145/3617650.3624948,
author = {Kalluri, Balaji and Prasad, Prajish and Sharma, Prakrati},
title = {Making CS Education Relevant to the 21st Century: Blending Critical Thinking into an Introductory Programming Course},
year = {2023},
isbn = {9798400703744},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3617650.3624948},
doi = {10.1145/3617650.3624948},
abstract = {In this poster, we describe a theoretical model aimed at developing future human computational thinking in students. We describe a blended pedagogy drawing approaches from multiple disciplines such as social sciences, design, ethics, and computing to develop a new undergraduate introductory programming course. We describe how we introduced this pedagogy in an introductory programming course, taught in a university in India and summarise our preliminary findings.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 2},
pages = {194},
numpages = {1},
keywords = {critical thinking, Python programming, CS1, 21st-century skills},
location = {Hyderabad, India},
series = {CompEd 2023}
}

inproceedings{10.1145/2800835.2800871,
author = {Han, Ahyoung and Kim, Jihyun and Wohn, Kwangyun},
title = {Entry: visual programming to enhance children's computational thinking},
year = {2015},
isbn = {9781450335751},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2800835.2800871},
doi = {10.1145/2800835.2800871},
abstract = {This paper introduces Entry, a visual programming application which is developed to facilitate children's computational thinking. As an HTML5-based visual programming platform, it provides children and beginners with an integrated environment in which they not only learn programming in an easy and fun way but also create, post and share their own programs. This will enhance children's computational thinking and is expected to serve as an effective learning tool for the STEAM education. We have held a workshop with 16 elementary school teachers and conducted a preliminary survey to illuminate Entry's 1) potential educational implications on logical thinking, problem solving and creativity, and 2) applicability in the field of education. This paper is expected to contribute to future research on programming education and STEAM education programs for children.},
booktitle = {Adjunct Proceedings of the 2015 ACM International Joint Conference on Pervasive and Ubiquitous Computing and Proceedings of the 2015 ACM International Symposium on Wearable Computers},
pages = {73–76},
numpages = {4},
keywords = {visual programming, education, computational thinking},
location = {Osaka, Japan},
series = {UbiComp/ISWC'15 Adjunct}
}

inproceedings{10.1145/2978249.2978269,
author = {Millwood, Richard and Strong, Glenn and Bresnihan, Nina and Cowan, Pamela},
title = {CTWINS: improving Computational Thinking confidence in educators through paired activities},
year = {2016},
isbn = {9781450342230},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2978249.2978269},
doi = {10.1145/2978249.2978269},
abstract = {The CTwins project is a cross-border initiative targeting teachers of subjects other than Computing in the Republic of Ireland and Northern Ireland who want to use technology in the classroom but lack the confidence to do so. It aims to develop confidence in educators' capacity to use computational thinking through a playful and supportive introduction to computer programming. This will be done through paired learning exercises with an output intended to be aesthetically pleasing and fulfilling. Learning will be supported by an online community of practice.The project will be evaluated for its effect on building the confidence in participating educators and the design and resources will be created as a open educational resource.},
booktitle = {Proceedings of the 11th Workshop in Primary and Secondary Computing Education},
pages = {106–107},
numpages = {2},
keywords = {Teacher Training, Programming, Computational Thinking},
location = {M\"{u}nster, Germany},
series = {WiPSCE '16}
}

inproceedings{10.1145/3700297.3700345,
author = {Zhang, Yifan and Rutherford, Teomara},
title = {Scaffolding Expertise: Evaluating Scaffolds for Block-Based Coding Among Experts and Novices},
year = {2024},
isbn = {9798400707100},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3700297.3700345},
doi = {10.1145/3700297.3700345},
abstract = {Coding for computer programming is a common way to support and assess computational thinking (CT) skills, a set of problem-solving skills essential for computer science (CS) and STEM more broadly. We designed a coding platform, Fox and Field, to determine what kinds of scaffolds can encourage novice coders to behave more like experts. We compared actions between 221 upper-division undergraduate CS/engineering (expert, n=106) and social science (novice, n=115) majors randomized to scaffolding conditions from four universities in the United States. Overall, experts used statistically significantly more practices aligned with CT skills, such as those that increased code efficiency (e.g., non-right angle turns, loops). This difference disappeared when novices were scaffolded by being told to use fewer codes or by priming with critical features. Both experts and novices were equally likely to be swayed by purposefully distracting features within the platform, such as a drawn path to deflect them from the most efficient solution. Results present initial evidence regarding which features of coding platforms can direct students to exercise CT-linked practices, leading to recommendations regarding platform development to better support learning.},
booktitle = {Proceedings of the 2024 International Symposium on Artificial Intelligence for Education},
pages = {277–282},
numpages = {6},
keywords = {computational thinking, game-based learning, scaffolding},
location = {
},
series = {ISAIE '24}
}

inproceedings{10.1145/3102071.3102106,
author = {Bauer, Aaron and Butler, Eric and Popovi\'{c}, Zoran},
title = {Dragon architect: open design problems for guided learning in a creative computational thinking sandbox game},
year = {2017},
isbn = {9781450353199},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3102071.3102106},
doi = {10.1145/3102071.3102106},
abstract = {Educational games have a potentially significant role to play in the increasing efforts to expand access to computer science education. Computational thinking is an area of particular interest, including the development of problem-solving strategies like divide and conquer. Existing games designed to teach computational thinking generally consist of either open-ended exploration with little direct guidance or a linear series of puzzles with lots of direct guidance, but little exploration. Educational research indicates that the most effective approach may be a hybrid of these two structures. We present Dragon Architect, an educational computational thinking game, and use it as context for a discussion of key open problems in the design of games to teach computational thinking. These problems include how to directly teach computational thinking strategies, how to achieve a balance between exploration and direct guidance, and how to incorporate engaging social features. We also discuss several important design challenges we have encountered during the design of Dragon Architect. We contend the problems we describe are relevant to anyone making educational games or systems that need to teach complex concepts and skills.},
booktitle = {Proceedings of the 12th International Conference on the Foundations of Digital Games},
articleno = {26},
numpages = {6},
keywords = {programming education, game-based learning, computational thinking},
location = {Hyannis, Massachusetts},
series = {FDG '17}
}

inproceedings{10.1145/3629296.3629358,
author = {Schwinghammer, Michaela and Milisic, Daniela and Schmidthaler, Eva and Sabitzer, Barbara},
title = {"The \"COOL Clubs\": Supporting gifted primary school students in STEAM"},
year = {2024},
isbn = {9798400709111},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3629296.3629358},
doi = {10.1145/3629296.3629358},
abstract = {The rapid rise of computational technologies has heightened the demand for proficient computer scientists. A strong foundation in Computer Science (CS) and Digital Education (German: Digitale Grundbildung DGB) has become crucial, even for young learners. Despite the growing importance of CS and DGB in Austria, a gap remains in comprehensive understanding among students and educators. This study aims to bridge this gap by making CS accessible to primary school students and teachers. The solution, COOL Lab, is an active learning center offering diverse STEAM (Science, Technology, Engineering, Arts, and Mathematics) programs. These programs facilitate cross-disciplinary education, supported by innovative CS technologies, nurturing computational thinking (CT) as a problem-solving tool, and enhancing digital skills. Focusing on COOL Lab Clubs, tailored for gifted primary school students, specifically the 'Girls* Only IT-Club' and 'Mini Club', this research first introduces these clubs and then presents insights from four club activities, along with methodologies enhancing CS and CT comprehension. Early results from a questionnaire involving 20 participants aged 9-10 were analyzed. At the outset, almost half of the participants, particularly girls, lacked exposure to CT and CS yet showed eagerness to learn. Initial findings of the club evaluations indicate a strong interest in STEM (Science, Technology, Engineering, and Mathematics) as well as CS and a positive response to the COOL Clubs.},
booktitle = {Proceedings of the 15th International Conference on Education Technology and Computers},
pages = {384–390},
numpages = {7},
keywords = {Computer science, STEAM, computational thinking, creativity, digital education, gifted education, primary education},
location = {Barcelona, Spain},
series = {ICETC '23}
}

inproceedings{10.1145/3255310,
author = {Henderson, Peter},
title = {Session details: Computational thinking},
year = {2007},
isbn = {1595933611},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3255310},
doi = {10.1145/3255310},
booktitle = {Proceedings of the 38th SIGCSE Technical Symposium on Computer Science Education},
location = {Covington, Kentucky, USA},
series = {SIGCSE '07}
}

inproceedings{10.1145/3593663.3593677,
author = {Willert, Nico and Eriksson, Janik},
title = {Towards a feature-based didactic framework for generating individualized programming tasks for an e-learning environment},
year = {2023},
isbn = {9781450399562},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3593663.3593677},
doi = {10.1145/3593663.3593677},
abstract = {Adaptive programming tasks are a promising approach for personalized learning that adapts to each student’s unique needs and abilities. However, developing effective adaptive programming tasks can be challenging, particularly when it comes to selecting the appropriate changes and adapting the difficulty of the exercise. In this paper, we propose a model for tracking student knowledge and adapting programming exercises to guide the selection and implementation of task features. Our model combines aspects of cognitive load, computational thinking and feature-oriented software product line engineering to identify core and optional features, so that they can be used in conjunction to adapt to the specific needs and abilities of each student. We provide an overview over the insights gained from an exploratory study with students. To support the creation process of feature-based programming tasks, we present an approach using a template-based generator.},
booktitle = {Proceedings of the 5th European Conference on Software Engineering Education},
pages = {246–255},
numpages = {10},
keywords = {instructional design, computational thinking, assessment, adaptivity},
location = {Seeon/Bavaria, Germany},
series = {ECSEE '23}
}

inproceedings{10.1145/3613904.3642539,
author = {Bilstrup, Karl-Emil Kj\ae{}r and Kaspersen, Magnus H\o{}holt and Bouvin, Niels Olof and Petersen, Marianne Graves},
title = {ml-machine.org: Infrastructuring a Research Product to Disseminate AI Literacy in Education},
year = {2024},
isbn = {9798400703300},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3613904.3642539},
doi = {10.1145/3613904.3642539},
abstract = {ml-machine.org is a web- and micro:bit-based educational tool for building machine learning models designed to enable more widespread teaching of AI literacy in secondary education. It has been designed as a research product in collaboration with partners from the educational sector, including the Danish Broadcasting Corporation and the Micro:bit Educational Foundation. ml-machine.org currently has more than 5000 unique users and is used in schools and teacher training. It is publicly available and promoted on the broadcasting corporation’s platforms. We describe the two-year process of developing and disseminating ml-machine.org. Based on interviews with partners and educators, we report on how ml-machine.org supports inquiry into the adoption and appropriation of such educational tools. We also provide insights on working with formal education infrastructures in order to scale and integrate a research product into teacher practices. Based on these experiences, we propose infrastructure as a novel quality of research products.},
booktitle = {Proceedings of the 2024 CHI Conference on Human Factors in Computing Systems},
articleno = {272},
numpages = {16},
keywords = {AI Literacy, Participatory Infrastructuring, Research Product},
location = {Honolulu, HI, USA},
series = {CHI '24}
}

inproceedings{10.1145/3649217.3653586,
author = {Pozzan, Gabriele and Padova, Costanza and Montuori, Chiara and Arf\'{e}, Barbara and Vardanega, Tullio},
title = {Experimental Analysis of First-Grade Students' Block-Based Programming Problem Solving Processes},
year = {2024},
isbn = {9798400706004},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649217.3653586},
doi = {10.1145/3649217.3653586},
abstract = {This work presents an experimental analysis of first-grade students' block-based programming trajectories. These trajectories consist of edit-level program snapshots that capture learners' problem-solving processes in a navigational microworld. Our results highlight the potential of this fine-grained data capture. Snapshot frequencies in trajectories collected before and after a coding intervention showcase the collective progress of the learners. Graph visualizations, in which nodes represent snapshots and directed edges code edits, highlight strategies, pitfalls and debugging procedures. Individual programming trajectories shed light on details of learners' problem-solving processes that less granular analysis would conceal. Various works in the field of Learning Analytics research show the usefulness of collecting fine-grained process data that proceed from programming activities. However, how to analyze this data is still an open question and research on the subject is in an experimental phase. We contribute to this experimentation by analyzing and discussing results collected from 30 first-grade students in a pretest-posttest study.},
booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 1},
pages = {143–149},
numpages = {7},
keywords = {block-based programming, computational thinking, learning analytics, programming trajectories},
location = {Milan, Italy},
series = {ITiCSE 2024}
}

inproceedings{10.1145/3257533,
author = {Peckham, Joan},
title = {Session details: Panel: computational thinking: on weaving it in},
year = {2009},
isbn = {9781605583815},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3257533},
doi = {10.1145/3257533},
booktitle = {Proceedings of the 14th Annual ACM SIGCSE Conference on Innovation and Technology in Computer Science Education},
location = {Paris, France},
series = {ITiCSE '09}
}

inproceedings{10.1145/2481449.2481487,
author = {Gallenbacher, Jens},
title = {Abenteuer informatik: hands-on exhibits for learning about computational thinking},
year = {2012},
isbn = {9781450317870},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2481449.2481487},
doi = {10.1145/2481449.2481487},
abstract = {Computational thinking is one of the pillars of the ACM-CSTA standards for teaching computer science from kindergarten to college. Our approaches Abenteuer Informatik -- Informatik begreifen (adventures in informatics -- hands on computer science) and Abenteuer Technik are well established in the german-speaking community as means to connect computer science with other subjects and as means of clarifying some prejudices against computer science, especially problematic for establishing computer science as subject in schools.},
booktitle = {Proceedings of the 7th Workshop in Primary and Secondary Computing Education},
pages = {149–150},
numpages = {2},
keywords = {curriculum, computer science unplugged, computer science education, computational thinking, abenteuer informatik},
location = {Hamburg, Germany},
series = {WiPSCE '12}
}

inproceedings{10.1145/2157136.2157200,
author = {Werner, Linda and Denner, Jill and Campe, Shannon and Kawamoto, Damon Chizuru},
title = {The fairy performance assessment: measuring computational thinking in middle school},
year = {2012},
isbn = {9781450310987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2157136.2157200},
doi = {10.1145/2157136.2157200},
abstract = {Computational thinking (CT) has been described as an essential capacity to prepare students for computer science, as well as to be productive members of society. But efforts to engage K-12 students in CT are hampered by a lack of definition and assessment tools. In this paper, we describe the first results of a newly created performance assessment tool for measuring CT in middle school. We briefly describe the context for the performance assessment (game-programming courses), the aspects of CT that are measured, the results, and the factors that are associated with performance. We see the development of assessment tools as a critical step in efforts to bring CT to K-12, and to strengthen the use of game programming in middle school. We discuss problems and implications of our results.},
booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
pages = {215–220},
numpages = {6},
keywords = {pair programming, middle school, game programming, computational thinking, assessment, Alice},
location = {Raleigh, North Carolina, USA},
series = {SIGCSE '12}
}

inproceedings{10.1145/3544549.3585666,
author = {Wr\'{o}bel, Alicja and \'{Z}r\'{o}bek, Karolina and Indurkhya, Bipin and Schaper, Marie-Monique and Gunia, Artur and Zguda, Paulina Maria},
title = {Are robots vegan? Unexpected behaviours in child-robot interactions and their design implications},
year = {2023},
isbn = {9781450394222},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3544549.3585666},
doi = {10.1145/3544549.3585666},
abstract = {A robot’s unexpected behaviors, such as a social faux pas or system errors, affect how a child perceives or interacts with the robot. In this study, we conducted two child-robot interaction workshops on active reading in a museum of modern art, and observed the behavior and attitudes of 18 children from two age groups (6-7 yrs and 10-12 yrs). The video and audio data from this event was analyzed to observe how children in a group respond to the robot’s unexpected behaviors. We extracted six different types of robot’s surprising behaviors: robot’s personality, movement malfunctions, inconsistent behavior, mispronunciation, delays and freezing. We analyzed how children in the younger and the older age groups respond to each of these behaviours, and what are the similarities and differences between the two groups. Based on this analysis, we suggest guidelines for designing age-appropriate learning interactions with social robots.},
booktitle = {Extended Abstracts of the 2023 CHI Conference on Human Factors in Computing Systems},
articleno = {39},
numpages = {7},
keywords = {Age-Appropriate Learning Experience, Child-Robot Interaction, Child-Robot Interaction Design, Robot Unexpected Behaviors, Social Robots},
location = {Hamburg, Germany},
series = {CHI EA '23}
}

inproceedings{10.1145/2930674.2930724,
author = {Guo, Yu and Wagh, Aditi and Brady, Corey and Levy, Sharona T. and Horn, Michael S. and Wilensky, Uri},
title = {Frogs to Think with: Improving Students' Computational Thinking and Understanding of Evolution in A Code-First Learning Environment},
year = {2016},
isbn = {9781450343138},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2930674.2930724},
doi = {10.1145/2930674.2930724},
abstract = {This paper presents Frog Pond, an interactive code-first learning environment about biological evolution. We deployed Frog Pond as part of a six-day curricular unit on natural selection implemented in six 7th grade science classes. Here we describe a case study of two students, Charlie and Aaron who participated in the unit. Comparing pre- and post- interviews in which they were asked to design a program for a hypothetical simulation of evolution, we found that both students shifted from an event-based programming approach to a rule-based approach. Both students also drew upon their experience with Frog Pond to explain an evolutionary phenomenon. However, the level of sophistication of the two students' explanations varied along with the aspects of Frog Pond they drew upon. These findings have implications for design improvement to better support students' understanding of evolution.},
booktitle = {Proceedings of the The 15th International Conference on Interaction Design and Children},
pages = {246–254},
numpages = {9},
keywords = {evolution, computational thinking, code-first learning environment, agent-based modeling},
location = {Manchester, United Kingdom},
series = {IDC '16}
}

inproceedings{10.1145/3459990.3465203,
author = {Fernandez, Cassia and Fuhrmann, Tamar and de Deus Lopes, Roseli and Blikstein, Paulo},
title = {Designing domain-specific blocks for diffusion: The dialogue between pedagogical principles and design decisions},
year = {2021},
isbn = {9781450384520},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3459990.3465203},
doi = {10.1145/3459990.3465203},
abstract = {Designing computer models can be a valuable way for students to refine their understandings of scientific phenomena while creating and testing their hypotheses. Drawing on these ideas, we designed nine domain-specific blocks related to diffusion as a Scratch extension, which we called Diffusion Modeling Scratch Extension. In this paper, we describe the pedagogical principles that guided the design of the blocks and draw on the data from a pilot study with seven students to investigate how our design decisions impacted students' learning experiences.},
booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
pages = {461–465},
numpages = {5},
keywords = {scientific models, domain-specific blocks, constructionism, computational thinking},
location = {Athens, Greece},
series = {IDC '21}
}

inproceedings{10.1145/3421590.3421615,
author = {Krugel, Johannes and Ruf, Alexander},
title = {Learners' perspectives on block-based programming environments: code.org vs. scratch},
year = {2020},
isbn = {9781450387590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3421590.3421615},
doi = {10.1145/3421590.3421615},
abstract = {We report from a comparative study regarding two popular block-based programming environments for the introduction of algorithmic concepts, namely Code.org and Scratch. A quasi-experiment was conducted with five classes (grade 7) from two secondary schools (n = 122). To investigate the effects of both learning environments, the students were divided into two groups.Following a mixed-methods research approach, we use quantitative and qualitative methods to gain a comprehensive understanding of learner's perspectives and skills. We measure the learners' perceived self-regulation and intrinsic motivation. The learners of Code.org show a higher intrinsic motivation compared to the Scratch group. Qualitative analyses of answers to open-ended questions reveal positive and negative aspects of the learning environments. With Code.org, the learners in particular like the fun and the challenges, while for Scratch, they like the feeling of actually programming something and the very free environment.},
booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
articleno = {27},
numpages = {2},
keywords = {motivation, interactive learning environments, computational thinking, block-based programming, algorithmic thinking},
location = {Virtual Event, Germany},
series = {WiPSCE '20}
}

inproceedings{10.1145/3649405.3659515,
author = {Nolan, Keith and O'Farrell, Amanda and Quille, Keith and Nolan, Karen and Faherty, Roisin and Jaiswal, Rajesh and Hensman, Svetlana and Collins, Michael and Harte, Miriam and Becker, Brett A.},
title = {Enabling Digital Technology in Primary Schools},
year = {2024},
isbn = {9798400706035},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649405.3659515},
doi = {10.1145/3649405.3659515},
abstract = {In 2024, the National Council for Curriculum and Assessment (NCCA) in Ireland released a draft curriculum which intends to introduce Digital Technology (DT) into the Primary School Curriculum. While this is a positive step in terms of Computer Science education pipeline, the teachers who will be charged with delivering this are, for the most part, completely out-of-field and anecdotally are lacking in confidence in delivering DT in the classroom. We are proposing a project to enhance teachers competencies around DT concepts (skills, processes and dispositions). The project plans to develop targeted activities for teachers to deliver DT. These activities will incorporate real-world applications of DT, computational thinking, problem-solving, and creative skills all delivered through play-based pedagogies. To ensure that no teacher or school will be negatively impacted due to technological requirements, AWS In Communities are going to send every Primary School in Ireland a Digital Technology kit comprising of a plugged device and an unplugged computational thinking game.},
booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 2},
pages = {823},
numpages = {1},
keywords = {curriculum change, digital technology, teacher professional development},
location = {Milan, Italy},
series = {ITiCSE 2024}
}

inproceedings{10.1145/3628516.3663348,
author = {Fernandez, Cassia and Blikstein, Paulo and Lopes, Roseli De Deus Lopes},
title = {Design failures in data visualization programming activities},
year = {2024},
isbn = {9798400704420},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3628516.3663348},
doi = {10.1145/3628516.3663348},
abstract = {In this pictorial, we critically analyze how students engaged in data representation activities using PlayData, a block-based programming environment tailored for data visualization purposes. Drawing upon data collected over two years with middle and high school students, we describe obstacles that impacted the interpretation of the data under analysis. These obstacles, here called "design failures", arose from either unexpected uses of the tool or shortcomings in the design of activities. We explore how each of these failures was used as an opportunity for refining both the tool's design and the associated activities. We conclude by offering recommendations for educators and researchers to support learners' engagement with visualization construction for effective reasoning with data.},
booktitle = {Proceedings of the 23rd Annual ACM Interaction Design and Children Conference},
pages = {574–586},
numpages = {13},
keywords = {Authors Keywords data science education, block-based programming environments, computational thinking, data visualization, design-based research},
location = {Delft, Netherlands},
series = {IDC '24}
}

inproceedings{10.1145/3478431.3499405,
author = {Kalathas, Paris and Parham-Mocello, Jennifer and Elliot, Rebekah and Lockwood, Elise},
title = {Exploring Math + CS in a Secondary Education Methods Course},
year = {2022},
isbn = {9781450390705},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478431.3499405},
doi = {10.1145/3478431.3499405},
abstract = {There is wide-spread agreement that K-12 students need opportunities to explore computer science (CS) concepts and computational thinking within a wide array of disciplines for advancing, broadening, and diversifying the participation in CS. Programs such as "Computer Science for All" were created by the US government to motivate and help students of all ages to engage with CS, which was described as the "new basic skill for economic opportunity and social mobility". However, what is less understood is how to prepare teachers to engage with CS concepts and computational thinking, expanding their specialized and pedagogical content knowledge on these concepts. This study explores this gap in the context of a graduate-level secondary math education methods course in a university environment. To reduce the cognitive load for the teacher candidates as well as their students, we utilize the secondary mathematics curriculum to explore CS concepts infused into mathematics, avoiding at the same time an increase to the teaching hours to the extent that it is detrimental to the existing K-12 curriculum. Our study uses hybrid block-text programming-based teaching modules specifically designed to expose the similarities and the differences between mathematics and CS. We utilize the concept of variable and operations around it to explore how the teacher candidates' conceptions and misconceptions about CS make the understanding of those concepts easy or challenging, and how that affects their ability to incorporate them into their teaching.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education - Volume 1},
pages = {689–695},
numpages = {7},
keywords = {variables, teacher development, teacher candidates, secondary education, programming, preservice teachers, mathematics, math + cs, k-12, interdisciplinary, integrated curriculum, computer science, computational thinking},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

inproceedings{10.1145/3689050.3706008,
author = {Matthews, Sarah and Nicholas, Maria and Paatsch, Louise and Kervin, Lisa and Wyeth, Peta},
title = {Embeddables: Designing Physical-Digital Manipulatives for Young Children},
year = {2025},
isbn = {9798400711978},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3689050.3706008},
doi = {10.1145/3689050.3706008},
abstract = {Introducing digital literacy to young children develops foundational skills in problem-solving and supports their cognitive development, including critical thinking. However, physical manipulatives for digital literacy are not always designed for early-year environments or specifically for young children. Physical manipulatives can offer developmentally appropriate tools to introduce foundational digital literacy through dynamic system knowledge before children become developmentally ready for more formalised coding activities. This paper presents an initial study in a preschool environment with children (ages 3 – 5 years) using novel physical manipulatives, Embeddables (Fig. 1), in child-led free and guided play activities in a preschool. From our initial analysis of the types of activities the children engaged in, we identify how, firstly, children used the proximal relations to undertake experimental understanding of the devices, which secondly led to using the proximal relationships in their social play, further supported by the scale and feedback of the toys.},
booktitle = {Proceedings of the Nineteenth International Conference on Tangible, Embedded, and Embodied Interaction},
articleno = {69},
numpages = {7},
keywords = {Computational Thinking, Early Years, Interaction Design, Tangible},
location = {
},
series = {TEI '25}
}

inproceedings{10.1145/3361721.3362112,
author = {Ahmed, Gashawa and Nouri, Jalal and Nor\'{e}n, Eva and Zhang, Lechen},
title = {Students perceptions of programming in primary school},
year = {2019},
isbn = {9781450377041},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3361721.3362112},
doi = {10.1145/3361721.3362112},
abstract = {Since autumn 2018, teachers throughout Sweden are obliged to relate to programming in one way or another in the teaching, especially in the subject of mathematics and technology education. Although teachers should formally work with programming teaching from the autumn of 2018, programming has been taught in primary school for several years. While there is some research on younger students, most of the research has almost exclusively focused on didactic approaches and strategies used by teachers, educational values and practices that accompany programming teaching, and views of teachers regarding programming teaching. What is still missing is research that highlights how younger students experience these new practices and how they primarily perceive programming in traditional school subjects, such as mathematics. Thus, this paper reports on a thematic analysis of younger students' (n=44) perceptions of programming; students who have been introduced to and been taught programming in mathematics in grade 5.},
booktitle = {Proceedings of the 14th Workshop in Primary and Secondary Computing Education},
articleno = {3},
numpages = {5},
keywords = {Programming, Primary Education, Mathematics, Computational Thinking},
location = {Glasgow, Scotland, Uk},
series = {WiPSCE '19}
}

inproceedings{10.1145/3544548.3581261,
author = {Rocha, Filipa and Correia, Filipa and Neto, Isabel and Pires, Ana Cristina and Guerreiro, Jo\~{a}o and Guerreiro, Tiago and Nicolau, Hugo},
title = {Coding Together: On Co-located and Remote Collaboration between Children with Mixed-Visual Abilities},
year = {2023},
isbn = {9781450394215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3544548.3581261},
doi = {10.1145/3544548.3581261},
abstract = {Collaborative coding environments foster learning, social skills, computational thinking training, and supportive relationships. In the context of inclusive education, these environments have the potential to promote inclusive learning activities for children with mixed-visual abilities. However, there is limited research focusing on remote collaborative environments, despite the opportunity to design new modes of access and control of content to promote more equitable learning experiences. We investigated the tradeoffs between remote and co-located collaboration through a tangible coding kit. We asked ten pairs of mixed-visual ability children to collaborate in an interdependent and asymmetric coding game. We contribute insights on six dimensions - effectiveness, computational thinking, accessibility, communication, cooperation, and engagement - and reflect on differences, challenges, and advantages between collaborative settings related to communication, workspace awareness, and computational thinking training. Lastly, we discuss design opportunities of tangibles, audio, roles, and tasks to create inclusive learning activities in remote and co-located settings.},
booktitle = {Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems},
articleno = {606},
numpages = {14},
keywords = {Accessible, Children, Collaboration, Computational thinking, Mixed-visual ability, Robot, Tangible, Visually impaired},
location = {Hamburg, Germany},
series = {CHI '23}
}

inproceedings{10.1145/3372782.3406256,
author = {Franklin, Diana and Coenraad, Merijke and Palmer, Jennifer and Eatinger, Donna and Zipp, Anna and Anaya, Marco and White, Max and Pham, Hoang and G\"{o}kdemir, Ozan and Weintrop, David},
title = {An Analysis of Use-Modify-Create Pedagogical Approach's Success in Balancing Structure and Student Agency},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3406256},
doi = {10.1145/3372782.3406256},
abstract = {As computer science instruction gets offered to more young learners, transitioning from elective to requirement, it is important to explore the relationship between pedagogical approach and student behavior. While different pedagogical approaches have particular motivations and intended goals, little is known about to what degree they satisfy those goals.In this paper, we present analysis of 536 students' (age 9-14, grades 4-8) work within a Scratch-based, Use-Modify-Create (UMC) curriculum, Scratch Encore. We investigate to what degree the UMC progression encourages students to engage with the content of the lesson while providing the flexibility for creativity and exploration.Our findings show that this approach does balance structure with flexibility and creativity, allowing teachers wide variation in the degree to which they adhere to the structured tasks. Many students utilized recently-learned blocks in open-ended activities, yet they also explored blocks not formally taught. In addition, they took advantage of open-ended projects to change sprites, backgrounds, and integrate narratives into their projects.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {14–24},
numpages = {11},
keywords = {scratch, k-12 education, computational thinking},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

inproceedings{10.1145/2674683.2674686,
author = {Nowack, Palle and Caspersen, Michael E.},
title = {Model-based thinking and practice: a top-down approach to computational thinking},
year = {2014},
isbn = {9781450330657},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2674683.2674686},
doi = {10.1145/2674683.2674686},
abstract = {In this paper, we discuss using models and modeling in a new way to teach basic computing to pupils within the K-12 segment. We argue why we believe understanding and creating models are fundamental skills for all pupils as it can be characterized as the skill that enable us to analyze and understand phenomena as well as design and construct artifacts. We also try to characterize the essence of model-based thinking and practice. We propose that a strong focus on the relation between mental models (of real or imaginary systems) and computerized models (embedded in computer-based systems) could provide a new approach to teaching computing. This approach should clarify and make explicit the role of models in computing in connection with other subject areas. We believe that such an approach would strongly broaden the participation in computing, as it will allow more pupils to become active creators with computing.},
booktitle = {Proceedings of the 14th Koli Calling International Conference on Computing Education Research},
pages = {147–151},
numpages = {5},
keywords = {thinking, teaching, practice, models, modeling},
location = {Koli, Finland},
series = {Koli Calling '14}
}

inproceedings{10.1145/3446871.3469777,
author = {Dawson, Trent},
title = {The Block-based, Text-based, and the CS1 Prepared},
year = {2021},
isbn = {9781450383264},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3446871.3469777},
doi = {10.1145/3446871.3469777},
abstract = {For over 50 years, computer scientists whose backgrounds span many academic and corporate affiliations have attempted to truncate a novice programmer’s investment into their learning that might expedite the length of time required to advance from beginner to intermediate programmer. Widely accepted innovations in programming languages that use blocks instead of text to maintain novices’ motivation and attention have replaced some conventional text-based pedagogies at the pre-college level [8]. This study aims to contribute new knowledge to the Computer Science Education (CSEd) field to empirically validate whether text or block-based languages optimally prepare high school students for success in undergraduate level CS1 (Introduction to Computer Science) courses. The research sub-focus aims to distinguish the significance of equitable preparation between students from underserved communities and their peers arriving at college from affluent areas. This study introduces a 7-week, mixed-methods inquiry aimed at entering first-year undergraduate students enrolled in CS1, exploring their prior programming knowledge and experiences that might establish a relationship among high school programming curricula and learners’ CS1 achievement.},
booktitle = {Proceedings of the 17th ACM Conference on International Computing Education Research},
pages = {413–414},
numpages = {2},
keywords = {computer science education, computational thinking, Computing education, CS1},
location = {Virtual Event, USA},
series = {ICER 2021}
}

inproceedings{10.1145/3311890.3311907,
author = {Lee, Victor R. and Vincent, Heidee},
title = {An Expansively-framed Unplugged Weaving Sequence Intended to Bear Computational Fruit of the Loom},
year = {2019},
isbn = {9781450362443},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3311890.3311907},
doi = {10.1145/3311890.3311907},
abstract = {We report on a late-breaking project that centralizes the Maker practice of loom-based weaving as a locus for unplugged computational thinking. While unplugged activities are appealing for making computation accessible, they also come with the risk of developing inert knowledge. To address and mitigate that risk, we introduce a new framework that we are developing called "Expansively-framed Unplugged" (EfU) computing education. We report on some initial testing and refinement of a learning sequence that starts with weaving on a loom and ends with optimizing code in Scratch. The testing was done with a school librarian who is will be implementing a coding program with students at a middle school library using this EfU sequence.},
booktitle = {Proceedings of FabLearn 2019},
pages = {124–127},
numpages = {4},
keywords = {Weaving, Unplugged, Looms, Expansive Framing, Computational Thinking},
location = {New York, NY, USA},
series = {FL2019}
}

inproceedings{10.1145/3631802.3631805,
author = {Guzdial, Mark and Evrard, August},
title = {Identifying the Computing Education Needs of Liberal Arts and Sciences Students (Discussion Paper)},
year = {2024},
isbn = {9798400716539},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3631802.3631805},
doi = {10.1145/3631802.3631805},
abstract = {As a field, computing’s deepest roots lie in liberal arts domains such as philosophy and linguistics. As new technologies rapidly expanded the field, the computer science curricula emerged. The current undergraduate areas of study, including computer science and software engineering, focus on preparing students for careers in the computing industry or academia. The “born digital” students of a modern liberal arts institution need a different, less technology-heavy, form of computing education to support their careers as future scientists, artists, or humanists. At our large, research-focused, US university, the College of Literature, Science, and the Arts (LSA) charged a task force with defining the computing education needs for their students, chaired by the authors. We describe our process, findings and outcomes here with the aim of offering a reference template to faculty at universities that have experienced a similar growth to prominence of computer science in the undergraduate curriculum. The task force identified emergent themes of discovery, expression, and justice that we using to establish a new program, the Program for Computing in the Arts and Sciences (PCAS). Our themes and process may help other liberal arts and sciences programs organize the computing education needs in support of all their undergraduate students.},
booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
articleno = {19},
numpages = {7},
keywords = {CS for All, computational literacy, computational science, computational thinking, critical computing, liberal arts and sciences},
location = {Koli, Finland},
series = {Koli Calling '23}
}

inproceedings{10.1145/3613905.3644056,
author = {Rode, Jennifer Ann and Barkhuus, Louise and Ioannou, Andri},
title = {Exploring Gender, Computational Making and E-Textiles using the BBC Micro:bit},
year = {2024},
isbn = {9798400703317},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3613905.3644056},
doi = {10.1145/3613905.3644056},
abstract = {We present a qualitative study of a Cypriot summer school where we used the BBC micro:bit to examine gender inclusivity in e-textiles. We employed the Computational Making framework to analyze ethnographic data teaching 24 middle school students, aged 10-15. The study contrasts the challenges faced by students using the micro:bit with those from our team’s previous similar e-textile studies using the LilyPad Arduino. We pinpoint the BBC micro:bit’s limitations from an inclusive design perspective, underscoring the absence of gender-sensitive considerations in its hardware design. The paper presents a critique how upwards of £75 Million were spent deploying the micro:bit without proper user studies of gender equity and e-textiles. We propose design recommendations for future BBC micro:bit versions, advocating for integrating a gender-sensitive participatory design approach to enhance the usability and engagement of computational and creative making with e-textiles for children of all genders.},
booktitle = {Extended Abstracts of the CHI Conference on Human Factors in Computing Systems},
articleno = {554},
numpages = {9},
keywords = {BBC micro:bit, Children, Computational Making, Computational Thinking, E-textiles},
location = {Honolulu, HI, USA},
series = {CHI EA '24}
}

inproceedings{10.1145/3568739.3568752,
author = {Kanaki, Kalliopi and Kalogiannakis, Michail},
title = {Algorithmic thinking in early childhood},
year = {2023},
isbn = {9781450398091},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3568739.3568752},
doi = {10.1145/3568739.3568752},
abstract = {The rising interest of educators, researchers, and policymakers around the world as far as the development of computational thinking skills in compulsory education is concerned is echoed in the plethora of research studies discussed in the pertinent literature. However, the successful injection of computation thinking in formal educational settings demands the construction of developmentally appropriate assessment tools. In this paper, we discuss a novel framework for assessing computational thinking skills in early childhood settings. The proposed framework was employed in a relevant quantitative research study conducted in the city of Heraklion, Crete, from February to June 2019, with a sample of 435 first and second graders and within the context of the Environmental Study course. This paper also provides evidence regarding the examination of age, gender, and learning achievements in the Environmental Study course as predictive factors of one of the core computational thinking competencies, namely algorithmic thinking. The research findings revealed that age and learning achievements in the Environmental Study course constitute predictive factors for algorithmic thinking skills in the first and second grade level of primary school. On the contrary, algorithmic thinking skills are not related to first and second graders’ gender. The results of this study provide a solid background for designing and implementing developmentally appropriate tools for cultivating and assessing computational thinking skills in the early years of schooling.},
booktitle = {Proceedings of the 6th International Conference on Digital Technology in Education},
pages = {66–71},
numpages = {6},
keywords = {Gender, Early childhood education, Algorithmic thinking, Age},
location = {Hangzhou, China},
series = {ICDTE '22}
}

inproceedings{10.1145/3428029.3428044,
author = {Michaeli, Tilman and Romeike, Ralf},
title = {Investigating Students’ Preexisting Debugging Traits: A Real World Escape Room Study},
year = {2020},
isbn = {9781450389211},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3428029.3428044},
doi = {10.1145/3428029.3428044},
abstract = {Being able to find and fix errors is an essential skill in computer programming. Nevertheless, debugging poses a major hurdle in the K12 classroom, as students are often rather helpless and rely on the teacher hurrying from one student-PC to the other. Overall, there is a lack of respective concepts and materials for the classroom as well as research on how to teach debugging. According to the constructivist learning theory, teaching and developing concepts and materials for the classroom must take learners’ preexisting experience into account to be effective. In their daily lives, students are confronted with errors long before they build programming experience: Whether there is a problem with “the internet” or with their bicycle, they are troubleshooting and locating and fixing errors. Debugging is a special case of general troubleshooting and shares common characteristics, such as the overall process or particular strategies. Thus, the aim of this study is to investigate students’ preexisting debugging traits. To this end, we developed a real-world escape room consisting of debugging-related troubleshooting exercises. This allows us to observe students’ troubleshooting behavior in a natural environment. Building upon this, we employed the escape room approach with around 150 high school students and analyzed the resulting video data. Based on the data we identify preexisting debugging traits such as students struggling to generate hypotheses or to undo changes. Furthermore, they are not able to effectively test a system and struggle with cognitive load in topographic search. Therefore, our study firstly contributes to understanding and explaining the behavior of novice debuggers. The second contribution is an innovative methodology to analyze preexisting debugging traits.},
booktitle = {Proceedings of the 20th Koli Calling International Conference on Computing Education Research},
articleno = {15},
numpages = {10},
keywords = {K12, computational thinking, computer science education, debugging, escape room, troubleshooting},
location = {Koli, Finland},
series = {Koli Calling '20}
}

inproceedings{10.1145/3368308.3415446,
author = {Sherwin, Kate and Winter, Victor},
title = {Filling an Educational Void with Spatial Thinking in the Online Age of Pandemics},
year = {2020},
isbn = {9781450370455},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3368308.3415446},
doi = {10.1145/3368308.3415446},
abstract = {COVID-19 has created challenges and opportunities for K-12 education. Advances in technology and changes to the delivery mode of educational content has provided opportunities to better integrate spatial thinking into curriculums. Such integration is of enormous value due to the centrality of spatial thinking within the STEM disciplines.},
booktitle = {Proceedings of the 21st Annual Conference on Information Technology Education},
pages = {350},
numpages = {1},
keywords = {spatial reasoning, mathematical thinking, computational thinking},
location = {Virtual Event, USA},
series = {SIGITE '20}
}

inproceedings{10.1145/3450329.3476874,
author = {Guzdial, Mark},
title = {Getting Everyone the IT Education They Need},
year = {2021},
isbn = {9781450383554},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3450329.3476874},
doi = {10.1145/3450329.3476874},
abstract = {The inventors of the term "computer science" meant for it to be something that was taught to everyone, to facilitate learning other subjects, and to help people understand the risks of technology in their lives. Alan Perlis (with Newell and Simon) published the first definition of "computer science" in Science in 1967 [6]. In 1961, he argued at MIT that everyone at the academia should learn to program, to give them a new way to understand their world [10]. At the same event, C.P. Snow (author of The Two Cultures [11]) argued that we should teach everyone about computing so that they would understand the dangers in our new computerized society [12]. He wrote: "A handful of people, having no relation to the will of society, having no communication with the rest of society, will be taking decisions in secret which are going to affect our lives in the deepest sense."The world today relies on information technology but, we mostly teach IT to people who will become professionals. This leaves us with only a privileged class that understands a critical part of our world. If we want to reach the original and more general goal, we will have to change how we teach about computing. With my students and collaborators, I have been identifying the barriers to giving everyone an understanding of the computing technology in their world.We have explored how socioeconomic status influences success in computing [9], and how increasing access to high school computing courses has not led to a commensurate increase in the number or diversity fo students taking those courses [7, 8]. We have been studying why students reject computer science [1], and how to invent new forms of computing education that meet the needs of students who have not succeeded in traditional computing courses [2]. In our most recent work, we ask questions like "What are fundamental ideas of computing that everyone needs to reason about and use the computational technologies in their world?" and "How can we re-design computation to make it more approachable, accessible, and adoptable?" [3-5]},
booktitle = {Proceedings of the 22nd Annual Conference on Information Technology Education},
pages = {77–78},
numpages = {2},
keywords = {it for all, history, cs for all, computational thinking, computational literacy},
location = {SnowBird, UT, USA},
series = {SIGITE '21}
}

inproceedings{10.1145/3397617.3397845,
author = {Pearl, Harrison and Arrants, Samuel and Swanson, Hillary and Trninic, Dragan},
title = {The AL Goldberg machine: a virtual environment for engaging learners in algorithmic practices},
year = {2020},
isbn = {9781450380201},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3397617.3397845},
doi = {10.1145/3397617.3397845},
abstract = {Familiarity with the construction, test, and refinement of computational algorithms is of critical importance to many disciplines in the 21st century. We introduce a novel learning environment that lowers the threshold to participation in algorithmic practices including using functions to transform input, using conditionals to selectively transform or manipulate input, creating simple and complex algorithms, and testing and debugging algorithms to iteratively improve them. Our learning environment leverages VR technology and principles of embodied cognition that prioritize "hands in" learning. Instead of creating algorithms through traditional computational programming (which often renders the structure and components of an algorithm opaque), students using our technology build "concrete algorithms" in the form of a virtual Rube Goldberg-type machine that makes the algorithm's structure, components, and functioning visible.},
booktitle = {Proceedings of the 2020 ACM Interaction Design and Children Conference: Extended Abstracts},
pages = {211–216},
numpages = {6},
keywords = {algorithmic practices, computational thinking, constructionism, embodied cognition, virtual reality},
location = {London, United Kingdom},
series = {IDC '20}
}

inproceedings{10.1145/3627217.3627226,
author = {Naik, Shefali Trushit and Purohit, Jap Ashokbhai},
title = {Effectiveness of e-Crossword Puzzle tool in the Multidisciplinary course for the undergraduate students},
year = {2023},
isbn = {9798400708404},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3627217.3627226},
doi = {10.1145/3627217.3627226},
abstract = {Faculty members have the challenge of making classes engaging, while students often find it difficult to remember concepts taught in class, recall them when needed, and stay focused throughout. To address this issue, a crossword puzzle was used in an experimental capacity in a multidisciplinary undergraduate introductory data science course to evaluate its effectiveness at Ahmedabad University. The results showed that the crossword puzzle helped to increase interactivity in class and improved retention of knowledge and concepts covered during the session. Moreover, it helped to foster interest in learning new concepts or reinforcing weaker ones.},
booktitle = {Proceedings of the 16th Annual ACM India Compute Conference},
pages = {37–42},
numpages = {6},
keywords = {crossword, education, learning, multidisciplinary, pedagogy, teaching},
location = {Hyderabad, India},
series = {COMPUTE '23}
}

inproceedings{10.1145/3141798.3141805,
author = {Lui, Debora and Anderson, Emma and Kafai, Yasmin B. and Jayathirtha, Gayithri},
title = {Learning by Fixing and Designing Problems: A Reconstruction Kit for Debugging E-Textiles},
year = {2017},
isbn = {9781450363495},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3141798.3141805},
doi = {10.1145/3141798.3141805},
abstract = {In this paper, we present the development of a "reconstruction kit" for e-textiles, which transforms fixed-state construction kits---maker tools and technologies that focus on the creation of semi-permanent projects---into flex-state construction kits that allow for endless deconstruction and reconstruction. The kit uses modular pieces that allow students to both solve and create troubleshooting and debugging challenges, which we call "DebugIts." We tested our prototype in an after-school workshop with ten high school students, and report on how they interacted with the kit, as well as what they learned through the DebugIt activities. In the discussion, we delve into the affordances and challenges of using these kits as both learning and assessment tools. We also discuss how our pilot and prototype can inform the design of reconstruction kits in other areas of making.1},
booktitle = {Proceedings of the 7th Annual Conference on Creativity and Fabrication in Education},
articleno = {6},
numpages = {8},
keywords = {Productive Failure, Making, Debugging, Computational Thinking},
location = {Stanford, CA, USA},
series = {FabLearn '17}
}

inproceedings{10.1145/3547522.3547689,
author = {Bilstrup, Karl-Emil Kj\ae{}r and Kaspersen, Magnus H\o{}holt and S\o{}rensen, Marie-Louise Stisen Kjerstein and Petersen, Marianne Graves},
title = {Opportunities and Challenges of Teaching Machine Learning as a Design Material with the micro:bit},
year = {2022},
isbn = {9781450394482},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3547522.3547689},
doi = {10.1145/3547522.3547689},
abstract = {There has been a growing focus on preparing children for navigating a future where digital technologies, such as Machine Learning (ML), are present in both society and personal life. In order to let students explore how ML is embedded into our infrastructure, we designed ml-machine.org, an educational tool for creating ML models with the micro:bit, and incorporating them into interactive systems, thus making ML a design material. Through an in-situ pilot study in an 8th grade classroom we demonstrates that students were able to redesign everyday objects around the possibilities and limitations imposed by ML, but that they struggled to understand more advanced parts of ML such as data representation. Based on these experiences we discuss focus areas for future directions of the tool: Enriching machine learning as a design material; exposing machine learning design practices; addressing the difficult parts.},
booktitle = {Adjunct Proceedings of the 2022 Nordic Human-Computer Interaction Conference},
articleno = {45},
numpages = {6},
keywords = {computational empowerment, computational thinking, machine learning, micro:bit, prototyping},
location = {Aarhus, Denmark},
series = {NordiCHI '22 Adjunct}
}

inproceedings{10.1145/3300115.3309512,
author = {Zhang, Yuanlin and Wang, Jianlan and Bolduc, Fox and Murray, William G.},
title = {LP Based Integration of Computing and Science Education in Middle Schools},
year = {2019},
isbn = {9781450362597},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3300115.3309512},
doi = {10.1145/3300115.3309512},
abstract = {There is a consensus on integrating computing with STEM teaching in K-12. However, very little is known about the integration. In this paper, we propose a novel framework for integrating science and computational thinking teaching using Logic Programming. We then develop and implement two 8-session integration modules on chemistry and physics for 6th and 7th graders. Pre- and post- tests, class observations and interviews show the feasibility of the framework in terms of 1) development and implementation of the modules, and 2) the students' learning outcomes on science content and Computational Thinking, and their acceptance of the integration.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education},
pages = {44–50},
numpages = {7},
location = {Chengdu,Sichuan, China},
series = {CompEd '19}
}

inproceedings{10.1145/3311927.3325334,
author = {Van Mechelen, Maarten and Schut, Alice and Gielen, Mathieu and S\"{o}dergren, Antonia Clasina},
title = {Children's Assessment of Co-design Skills: Creativity, Empathy and Collaboration},
year = {2019},
isbn = {9781450366908},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3311927.3325334},
doi = {10.1145/3311927.3325334},
abstract = {This paper presents a co-design project in a school with 16 children ages 10 to 11 in which three learning goals were defined upfront: creativity, empathy, and collaboration. The first part of the paper demonstrates how these co-design skills were implemented through an iterative process of explanation, practice, reflection, and application. Based on the results of post-interviews and short questionnaires, the second part discusses children's assessments of these skills. Whereas children reported fluctuations in applying these skills, the findings show an overall positive trend towards the end of the project. In future work, these findings will be triangulated with observational data.},
booktitle = {Proceedings of the 18th ACM International Conference on Interaction Design and Children},
pages = {520–526},
numpages = {7},
keywords = {Participatory Design, Empathy, Design-based Learning, Creativity, Collaboration, Co-design, Children, 21st Century Skills},
location = {Boise, ID, USA},
series = {IDC '19}
}

inproceedings{10.1145/3594781.3594783,
author = {Fernandez, Cassia and De Deus Lopes, Roseli and Blikstein, Paulo},
title = {Programming Representations: Uncovering the Process of Constructing Data Visualizations in a Block-based Programming Environment},
year = {2023},
isbn = {9798400707360},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3594781.3594783},
doi = {10.1145/3594781.3594783},
abstract = {In this paper, we analyze how middle schoolers engaged in data visualization activities using PlayData, an educational tool designed to create representations for data by taking advantage of the flexibility and low entry point of block-based programming environments. Drawing on the analysis of artifacts and videos collected during a three-day workshop, we explore the types of visualizations created by participants and the process they engaged with to produce visualizations. Although the representational forms chosen by students were mainly traditional, our findings indicate that they were engaged in authentic data visualization practices throughout their programming process. These practices included translating ideas into programs, selecting parameters (such as color scheme and space between data points), inspecting the output, and adding annotations to provide context and better communicate the desired information. Moreover, our analysis pointed out opportunities for improving PlayData, mainly by the addition of new primitives for automating labeling and performing data transformations.},
booktitle = {Proceedings of the 2023 Symposium on Learning, Design and Technology},
pages = {11–20},
numpages = {10},
keywords = {block-based programming environments, computational thinking, data science education, data visualization},
location = {Evanston, IL, USA},
series = {LDT '23}
}

inproceedings{10.1145/3488392.3488395,
author = {Corr\^{e}a, Joseline Melo and Mota, Marcelle Pereira},
title = {Teaching Programming Using Cultural Viewpoint Metaphors Resignification},
year = {2021},
isbn = {9781450384896},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3488392.3488395},
doi = {10.1145/3488392.3488395},
abstract = {Technologies permeate contemporary society, and the ability to use computer science concepts in the problem-solving process is essential to everyone. This paper presents an epistemic tool of Semiotic Engineering whose meaning is resignified to the context of teaching programming to initial learners. Aiming to help these students absorb programming concepts, a gradual form of presentation using the interaction with a new system as a journey through a new culture, based on the Cultural Viewpoint Metaphors theory, was structured. After that, an application of this resignification was adopted in an introductory programming workshop using visual programming and the BBC Micro:bit embedded device. Results from the workshop revealed that this gradual form of introduction could help novices in the programming concepts learning process, showing the potential of this approach in teaching programming.},
booktitle = {Proceedings of the X Latin American Conference on Human Computer Interaction},
articleno = {3},
numpages = {5},
keywords = {Teaching Programming, Cultural Viewpoint Metaphors, Computational Thinking},
location = {Valparaiso, Chile},
series = {CLIHC '21}
}

inproceedings{10.1145/3649165.3690119,
author = {Kumar, Amruth N.},
title = {Auglets: Intelligent Tutors for Learning Good Coding Practices by Solving Refactoring Problems},
year = {2024},
isbn = {9798400705984},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649165.3690119},
doi = {10.1145/3649165.3690119},
abstract = {Code quality is of universal concern among educators. Refactoring code, i.e., revising the structure of a program without changing its behavior is one approach for improving code quality. Numerous software tools have been created to help students refactor the code they write. Only a few software tutors have been reported in literature that help students proactively learn code quality by solving refactoring problems. But they suffer false positive and false negative grading issues because they allow freehand coding. We investigated whether refactoring tutors that do not allow freehand coding could be used to help students learn about non-trivial anti-patterns. We developed and deployed two software tutors for refactoring problems that are based on the principle of "refactoring without rewriting code", and cover a subset of refactoring problems that can be solved using only deletion, duplication, reordering and token-wise editing of lines of code. We investigated whether students needed to learn the anti-patterns covered by the tutors and whether they benefited from using the tutors. In this experience report, we start by describing the tutors - the list of refactoring concepts covered, the user interface, grading, feedback and usage. We report our experience using the tutors over three semesters, which confirmed that both introductory and advanced students needed and benefited from using the tutors despite the limitations of the tutors' coverage. We reflect on what worked and what did not. The tutors currently cover C++, Java and C#. They are available for free for educational use on the web at auglets.org.},
booktitle = {Proceedings of the 2024 on ACM Virtual Global Computing Education Conference V. 1},
pages = {95–101},
numpages = {7},
keywords = {anti-patterns, c++, code quality, java., problem-solving tutor, refactoring},
location = {Virtual Event, NC, USA},
series = {SIGCSE Virtual 2024}
}

inproceedings{10.1145/3546155.3546156,
author = {Bilstrup, Karl-Emil Kj\ae{}r and Kaspersen, Magnus H\o{}Holt and Larsen, Matilde Fjelds\o{} and Bouvin, Niels Olof and Petersen, Marianne Graves},
title = {The Best of Both Worlds: Designing a Tiered Hybrid Interface for Teaching Machine Learning in K-9 Education},
year = {2022},
isbn = {9781450396998},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3546155.3546156},
doi = {10.1145/3546155.3546156},
abstract = {We designed Machine Learning Machine 2.0, a tiered hybrid interface allowing learners to create simple machine learning (ML) models using a tangible user interface and further inspect and tinker with them using a graphical user interface. This design experiment investigates how the two interaction styles can complement each other when used in the same educational tool to make ML concepts more approachable and prompt learners’ investigation of ML processes. The Machine Learning Machine 2.0 was designed in a co-design process with teachers and tested in a pilot study with pupils aged 13 to 15, where we found that the combination of interaction styles scaffolded pupils in forming and testing hypotheses about ML and discussing ML processes. Based on these experiences, we provide design recommendations and future directions for designing tiered hybrid interfaces for teaching about complex computational technologies, such as machine learning, in K-9 education.},
booktitle = {Nordic Human-Computer Interaction Conference},
articleno = {51},
numpages = {12},
keywords = {tangible user interfaces, machine learning, hybrid user interface, computational thinking},
location = {Aarhus, Denmark},
series = {NordiCHI '22}
}

inproceedings{10.1145/3483529.3483731,
author = {Garcia-Robles, Rocio and Mu\~{n}oz-Del Amo, Aurea},
title = {ACCtic Master Programme on STEAM + SciArt},
year = {2022},
isbn = {9781450384209},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3483529.3483731},
doi = {10.1145/3483529.3483731},
abstract = {A new master university programme on STEAM + SciArt is presented. It will be taught in University of Seville (Spain).Its objectives, structure and subjects are further described.},
booktitle = {Proceedings of the 10th International Conference on Digital and Interactive Arts},
articleno = {84},
numpages = {2},
keywords = {Computational thinking, Educational programming, STEAM-STEAM-STEAM+A, SciArt},
location = {Aveiro, Portugal, Portugal},
series = {ARTECH '21}
}

inproceedings{10.1145/3689535.3689550,
author = {Maguire, Joseph and Brown, Neil},
title = {Work in Progress Workshop: Themes, Challenges and Opportunities},
year = {2024},
isbn = {9798400711770},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3689535.3689550},
doi = {10.1145/3689535.3689550},
abstract = {The Works-in-Progress (WiP) workshop started at the United Kingdom and Ireland Computing Education Research (UKICER) conference in 2023. This ‘grown-up doctoral consortium’ is designed to provide a space for academics, researchers and educators to discuss works that would benefit from feedback and critique. The aim is to provide a space for critical but constructive researchers to support each other in improving works to take them to their next level. The present editorial outlines the structure of the workshop, the invited participants for the present workshop and a brief overview of the themes observed.},
booktitle = {Proceedings of the 2024 Conference on United Kingdom &amp; Ireland Computing Education Research},
articleno = {27},
numpages = {1},
keywords = {computing science, computing science education},
location = {Manchester, United Kingdom},
series = {UKICER '24}
}

inproceedings{10.1145/3386201.3386213,
author = {Shaw, Fayette and Kshirsagar, Khushbu and Wendell, Kristen and Danahy, Ethan and Bernstein, Debra and Puttick, Gillian and Cassidy, Michael},
title = {Characterizing Student Artifacts in a Multi-disciplinary Biomimicry and Robotics Unit},
year = {2021},
isbn = {9781450375436},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3386201.3386213},
doi = {10.1145/3386201.3386213},
abstract = {As states are adopting NGSS, engineering is increasingly being integrated in K-12 science education. While middle schools have typically segregated learning by discipline, educators are recognizing the importance of making connections across STEM disciplines. This paper presents robot artifacts built by students in an interdisciplinary middle school curriculum that combines biology, engineering, and computational thinking. In this curriculum, students analyze animals and use them as inspiration to build biomimetic robots - robots inspired by animals. We characterized and classified these artifacts based on their robots' mechanical structure and biomimetic structure and motion.},
booktitle = {Proceedings of the FabLearn 2020 - 9th Annual Conference on Maker Education},
pages = {34–39},
numpages = {6},
keywords = {middle school education, educational robotics, curriculum, Biomimicry},
location = {New York, NY, USA},
series = {FabLearn '20}
}

inproceedings{10.1145/3502717.3532129,
author = {Guzdial, Mark},
title = {Designing Computing Education Courses for Liberal Arts and Science Students},
year = {2022},
isbn = {9781450392006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502717.3532129},
doi = {10.1145/3502717.3532129},
abstract = {Computing education practitioners and researchers know a lot about how to design courses for students who are going to pursue a career in computing (e.g., professional software developer, data scientist, or computer engineer). Today, computing is a necessary part of other careers, such as scientists who create computational models and simulations, artists working in computational media, and critical computing scholars. The University of Michigan College of Literature, Science, and the Arts (LSA) charged a task force with defining the computing education needs for their students. The task force conducted a year long process involving searches of courses and programs, interviews with students and faculty, and a large survey. The task force proposed themes of Computing for Discovery, Expression, and Justice as useful in organizing computing within the liberal arts and sciences. We are now designing the introductory courses for expression and justice. We are using participatory design methods where faculty advisors engage in tasks (like card sorting) to define projects and learning goals. The expression and justice card sorts are markedly different. We are planning to use a block-based language (Snap!) for instruction and homework, but students will also engage with a purpose-built Runestone ebook in a textual language like Processing (for expression), and Python and HTML (for justice). The ebook activities are informed by purpose-first programming in order to support transfer of knowledge and to encourage a sense of self-efficacy and authenticity.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 2},
pages = {614},
numpages = {1},
keywords = {computational literacy, computational science, computational thinking, critical computing, cs for all, liberal arts and sciences},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

inproceedings{10.1145/3466725.3466728,
author = {Kaspersen, Magnus Hoeholt and Bilstrup, Karl-Emil Kjaer and Van Mechelen, Maarten and Hjorth, Arthur and Bouvin, Niels Olof and Petersen, Marianne Graves},
title = {VotestratesML: A High School Learning Tool for Exploring Machine Learning and its Societal Implications},
year = {2021},
isbn = {9781450389891},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3466725.3466728},
doi = {10.1145/3466725.3466728},
abstract = {The increased use of Artificial Intelligence, and in particular Machine Learning (ML) raises the need for widespread AI literacy, in three particular areas related to ML; understanding how ML works, the process behind creating ML models, and the ability to reflect on its personal and societal implications. Existing ML learning tools focus primarily on the first two areas, and to a lesser degree the third. In order to address this, we designed VotestratesML; a tool allowing K-12 students to build models and make predictions based on real world voting data. Based on in-situ deployments of VotestratesML, we reflect on opportunities and challenges for engaging K-12 students in understanding and reflecting on ML. We find that the design of VotestratesML supports students’ engagement in all three areas of ML, through grounding ML in a known subject area and allowing for collaboration and competition.},
booktitle = {FabLearn Europe / MakeEd 2021 - An International Conference on Computing, Design and Making in Education},
articleno = {3},
numpages = {10},
keywords = {AI literacy, Computational empowerment, computational thinking, learning tools, machine learning},
location = {St. Gallen, Switzerland},
series = {FabLearn Europe / MakeEd 2021}
}

inproceedings{10.1145/3027063.3027129,
author = {Melcer, Edward},
title = {Moving to Learn: Exploring the Impact of Physical Embodiment in Educational Programming Games},
year = {2017},
isbn = {9781450346566},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3027063.3027129},
doi = {10.1145/3027063.3027129},
abstract = {There has been increasing attention paid to the necessity of Computational Thinking (CT) and CS education in recent years. To address this need, a broad spectrum of animation programming environments and games have been created to engage learners. However, most of these tools are designed for the touchpad/mouse and keyboard, and few have been evaluated to assess their efficacy in developing CT/programming skills. This is problematic when trying to understand the validity of such designs for CS education, and whether there are alternative approaches that may prove more effective. My dissertation work helps address this problem. After creating a framework based on a meta-review that carefully dissects embodiment strategies in learning games, I am building and evaluating tangible and augmented reality versions of a CT game. I plan to examine how these different forms of physical interaction help to facilitate and enhance meaning-making during the learning process, and whether/how they improve related learning factors such as self-belief and enjoyment.},
booktitle = {Proceedings of the 2017 CHI Conference Extended Abstracts on Human Factors in Computing Systems},
pages = {301–306},
numpages = {6},
keywords = {computational thinking, educational games, embodied cognition, embodied interaction, physical embodiment, programming},
location = {Denver, Colorado, USA},
series = {CHI EA '17}
}

inproceedings{10.1145/3660650.3660671,
author = {Tareque, Md. Hasan and Deutekom, Steven and Anvik, John and Bashir, Maimoona},
title = {Program Wars v.2.0 : Improving a Game-based Learning Approach for Teaching Fundamental Programming Concepts},
year = {2024},
isbn = {9798400709975},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3660650.3660671},
doi = {10.1145/3660650.3660671},
abstract = {Game-based learning (GBL) provides an engaging way to introduce those with limited programming experience to fundamental programming concepts, Program Wars&nbsp;uses a GBL approach to teach fundamental programming concepts using cards that represent instructions, loops, variables and methods to create a programming language-independent program. This paper introduces Program Wars&nbsp;v.2.0, which improves the prior implementation in several ways. These changes include the approach to teaching methods, introducing players to the concepts of searching and sorting algorithms, and revisions to the gameplay and UI to improve engagement. A user study of Program Wars&nbsp;v.2.0&nbsp;was conducted and shows that Program Wars&nbsp;v.2.0&nbsp;is more effective than Program Wars&nbsp;v.1.0&nbsp;in teaching the concepts of variables, loops and methods. Specifically, 60% of participants showed knowledge improvements of variables, 56% showed knowledge improvements for loops, and 44% showed knowledge improvements for methods. Qualitative results show that Program Wars&nbsp;’s game-based approach results in an engaging experience for learners.},
booktitle = {Proceedings of the 26th Western Canadian Conference on Computing Education},
articleno = {7},
numpages = {7},
keywords = {Game-based Learning, Programming language education, Serious Game, Web application},
location = {Kelowna, BC, Canada},
series = {WCCCE '24}
}

inproceedings{10.1145/3576882.3617907,
author = {Kafai, Yasmin B.},
title = {Empowering the Next Generation of Computational Thinkers},
year = {2023},
isbn = {9798400700484},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3576882.3617907},
doi = {10.1145/3576882.3617907},
abstract = {Over the past ten years, global efforts have promoted computational thinking in K-12 computer science education. With the increasing prevalence of machine learning and artificial intelligence, there is a pressing need to broaden the scope of computational thinking to enable students to become competent, creative, and critical learners. Future digital literacies should encompass an appreciation of the distinctions between machine and human thinking, an awareness of the social aspects of data production, and an understanding of the values, biases, and historical contexts embedded within digital technologies. This opens up new possibilities for teachers and schools to guide students in actively shaping their digital destinies.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 1},
pages = {3–4},
numpages = {2},
keywords = {artificial intelligence, computing education, k-12, machine learning},
location = {Hyderabad, India},
series = {CompEd 2023}
}

incollection{WILSON2023146,
title = {Principled assessment design},
editor = {Robert J Tierney and Fazal Rizvi and Kadriye Ercikan},
booktitle = {International Encyclopedia of Education (Fourth Edition)},
publisher = {Elsevier},
edition = {Fourth Edition},
address = {Oxford},
pages = {146-162},
year = {2023},
isbn = {978-0-12-818629-9},
doi = {https://doi.org/10.1016/B978-0-12-818630-5.10022-3},
url = {https://www.sciencedirect.com/science/article/pii/B9780128186305100223},
author = {Mark Wilson and Sean Tan},
keywords = {Assessment design, Cognition, Interpretation, Tests, Observation},
abstract = {The aim of this article is to define and exemplify the concept of Principled Assessment Design (PAD) as it is used in the domain of educational testing. The crucial aspect of PAD approaches is that they are centered on models of the cognitive psychology involved in students responding to the assessment and articulate how to use that as the basis for development of the assessments. The account gives an extended description of one PAD approach and summarizes four others, noting common characteristics among them. It concludes with a discussion of how PAD approaches can be extended into the domain of instruction, and a consideration of why PAD is not so commonly recognized by educational professionals.}
}

incollection{KIRK20131,
title = {Chapter 1 - Introduction},
editor = {David B. Kirk and Wen-mei W. Hwu},
booktitle = {Programming Massively Parallel Processors (Second Edition)},
publisher = {Morgan Kaufmann},
edition = {Second Edition},
address = {Boston},
pages = {1-21},
year = {2013},
isbn = {978-0-12-415992-1},
doi = {https://doi.org/10.1016/B978-0-12-415992-1.00001-8},
url = {https://www.sciencedirect.com/science/article/pii/B9780124159921000018},
author = {David B. Kirk and Wen-mei W. Hwu}
}

incollection{HWU2023xvii,
title = {Preface},
editor = {Wen-mei W. Hwu and David B. Kirk and Izzat {El Hajj}},
booktitle = {Programming Massively Parallel Processors (Fourth Edition)},
publisher = {Morgan Kaufmann},
edition = {Fourth Edition},
pages = {xvii-xxv},
year = {2023},
isbn = {978-0-323-91231-0},
doi = {https://doi.org/10.1016/B978-0-323-91231-0.00005-7},
url = {https://www.sciencedirect.com/science/article/pii/B9780323912310000057},
author = {Wen-mei W. Hwu and David B. Kirk and Izzat {El Hajj}}
}

incollection{SMITH2025371,
title = {Smart Libraries and Library 3.0},
editor = {David Baker and Lucy Ellis},
booktitle = {Encyclopedia of Libraries, Librarianship, and Information Science (First Edition)},
publisher = {Academic Press},
edition = {First Edition},
address = {Oxford},
pages = {371-387},
year = {2025},
isbn = {978-0-323-95690-1},
doi = {https://doi.org/10.1016/B978-0-323-95689-5.00017-1},
url = {https://www.sciencedirect.com/science/article/pii/B9780323956895000171},
author = {Charlie Smith},
keywords = {Artificial intelligence, Academic libraries, Content creation, Electronic resource management, Intelligent discovery, Library 3.0, Physical space, Public libraries, Smart Libraries, Smart technologies, User-centric, Virtual space, Web 3.0},
abstract = {This entry describes the smart systems, digital services and Web 3.0 technologies that constitute Smart Libraries and Library 3.0, and explores the roles that virtual spaces and physical places have in this next generation of libraries. Key points include that the Smart Library and Library 3.0 are increasingly user-centric and focused on personalization and content creation as well as collections, and that physical library spaces are becoming much more informal and socially orientated but remain crucially significant. The entry concludes by considering implications of smart services and new digital technologies for library professionals and outlines some projections for the future.}
}

incollection{STONE2017331,
title = {Chapter 15 - Application case study—molecular visualization and analysis},
editor = {David B. Kirk and Wen-mei W. Hwu},
booktitle = {Programming Massively Parallel Processors (Third Edition)},
publisher = {Morgan Kaufmann},
edition = {Third Edition},
pages = {331-344},
year = {2017},
isbn = {978-0-12-811986-0},
doi = {https://doi.org/10.1016/B978-0-12-811986-0.00015-7},
url = {https://www.sciencedirect.com/science/article/pii/B9780128119860000157},
author = {John Stone},
keywords = {Electrostatic potential energy, molecular dynamics, atomic operation, memory coalescing, thread coarsening},
abstract = {This chapter uses the electrostatic potential calculation in the VMD application to illustrate the practical use of loop transformations, thread granularity coarsening, and redundancy elimination techniques in a real application. It further shows some important details, interleaved data mapping and data structure padding, in achieving memory coalescing in a coarsened kernel.}
}

incollection{PINA2020579,
title = {Technology: Gaming},
editor = {Mark Runco and Steven Pritzker},
booktitle = {Encyclopedia of Creativity (Third Edition)},
publisher = {Academic Press},
edition = {Third Edition},
address = {Oxford},
pages = {579-584},
year = {2020},
isbn = {978-0-12-815615-5},
doi = {https://doi.org/10.1016/B978-0-12-809324-5.23848-0},
url = {https://www.sciencedirect.com/science/article/pii/B9780128093245238480},
author = {Jeremiah Piña},
keywords = {Technology, Gaming, Games, Video games, Personal creativity, Collaborative creativity, Creative benefits, Play, Play theory, Digital media, Gamifying learning},
abstract = {Digital technology transformed games and gaming in recent decades conferring certain benefits to the creativity of individual players and social groups. This article will review a retrospective account of play theory and discuss the psychological costs and benefits of deep engagement in play. Then, from the position of articulating creative benefits to the individual and society, two complementary theories will be employed elaborating significant characteristics of creativity in gaming with the intention of highlighting the utility of constructs embedded in each theory, both as explanatory features and as foundations for further study.}
}

incollection{VOSKOGLOU202591,
title = {5 - Using gray numbers as tools for assessment and linear programming},
editor = {Michael Gr. Voskoglou},
booktitle = {Fuzzy Methods for Assessment and Decision Making},
publisher = {Morgan Kaufmann},
pages = {91-105},
year = {2025},
isbn = {978-0-443-23732-4},
doi = {https://doi.org/10.1016/B978-0-443-23732-4.00005-X},
url = {https://www.sciencedirect.com/science/article/pii/B978044323732400005X},
author = {Michael Gr. Voskoglou},
keywords = {Generalized gray number, Gray assessment, Gray linear programming, Gray number, Gray set, Gray system, Problem solving, SIMPLEX algorithm, Whitenization},
abstract = {The gray system (GS) theory, introduced by Ju-Long Deng in 1982, is an alternative to the fuzzy systems' approach for managing the existing in real world uncertainties. Gray numbers (GNs), which are defined with the help of the closed real intervals, are the tools for performing all the necessary calculations in GS theory. This Chapter studies applications of GNs to assessment and to linear programming and presents examples illustrating their use in real world situations.}
}

incollection{ABDALLA2024xvii,
title = {List of contributors},
editor = {Seyedali Mirjalili},
booktitle = {Handbook of Whale Optimization Algorithm},
publisher = {Academic Press},
pages = {xvii-xx},
year = {2024},
isbn = {978-0-323-95365-8},
doi = {https://doi.org/10.1016/B978-0-32-395365-8.00005-1},
url = {https://www.sciencedirect.com/science/article/pii/B9780323953658000051},
author = {Mohmad Hussein Abdalla and Abdelaziz A. Abdelhamid and Laith Abualigah and Mahmood Ahmadi and Aram M. Ahmed and Adedotun T. Ajibare and Malik Naveed Akhter and Lateef A. Akinyemi and Ali Ala and Mohammed Azmi Al-Betar and Nabeel Salih Ali and Zaid Abdi Alkareem Alyasseri and Erfan Amini and Bahman Arasteh and K. Ashwini and Mehmet Enes Avcu and Mohammed A. Awadallah and Mahdi Azizi and Ziad Azzi and E. Balasubramanian and Mahla Basiri and Abdelbaki Benayad and Diptendu Bhattacharya and Amel Boustil and Seyed Mostafa Bozorgi and Malik Braik and Sanjoy Chakraborty and Amit Chhabra and Yashar Dadrasajirlou and Lamees Mohammad Dalbah and Leandro S.P. {da Silva} and Marwa M. Eid and Serdar Ekinci and Stephen O. Ekwe and Hossien B. Eldeeb and El-Sayed M. El-kenawy and Nava Eslami and Amir Faraji and Sepehr Faridmarandi and Mansoureh Shahabi Ghahfarokhi and Farhad Soleimanian Gharehchopogh and Mojtaba Ghasemi and Tripti Goel and Harun Gökçe and Shahzaib Farooq Hadi and Hozan K. Hamarashid and Saad Harous and Bryar A. Hassan and Abdelhameed Ibrahim and Gültekin Işık and Saadat Izadi and Davut Izci and Jafar Jafari-Asl and Norziana Jamil and Ravi Kumar Jatoth and Soleiman {Kadkhoda Mohammadi} and Hojat Karami and Okba Kazar and Muhammad Najeeb Khan and Mohammad Reza Khayyambashi and Mohamed Akram Khelili and Nima Khodadadi and Ouajdi Korbaa and Imene Latreche and Jaffer Majidpour and Parijata Majumdar and Sharif Naser Makhadmeh and Ghaith Manita and Majad Mansoor and Yassine Meraihi and Farid MiarNaeimi and Seyedali Mirjalili and Seyedeh Zahra Mirjalili and Seyed Mohammad Mirjalili and Sanjoy Mitra and Ali Mohammadzadeh and Naufel B. Mohammed and Diab Mokeddem and Ahmadreza Montazerolghaem and Syed Kumayl Raza Moosavi and R. Murugan and Z. Mustaffa and Mohammad H. Nadim-Shahraki and Mahdieh Nasiri and Anurup Naskar and Dallel Nasri and Hathiram Nenavath and Mehdi Neshat and Kaniaw A. Noori and Maha Nssibi and Sima Ohadi and Sunday O. Oladejo and D.N. Kiran Pandiri and Payel Pramanik and Rishav Pramanik and Shko M. Qader and Mahdi Rahbar and Chnoor Maheadeen Rahman and R.R. Rajalaxmi and D. Rajamani and Awf Abdulrahmam Ramadhan and Amar Ramdane-Cherif and Tarik A. Rashid and Salpa Reang and Souad Refas and C. Roopa and Apu Kumar Saha and Ashim Saha and İsmail Şahin and Saroj Kumar Sahoo and Taybeh Salehnia and Ram Sarkar and Nataliia Y. Sergiienko and Alaa Sheta and Milad Baghalzadeh Shishehgarkhaneh and Haval Sidqi and Amit Kumar Sinha and M. {Siva Kumar} and Sihem Slatnia and K. Sruthi and M.H. Sulaiman and Sylia Mekhmoukh Taleb and Noor Tayfor and R. Thangarajan and Satılmış Ürgün and Selma Yahia and Samaneh Yazdani and Halil Yiğit and Hassaan Bin Younis and Muhammad Hamza Zafar and Mohsen Zare and Farouq Zitouni}
}

incollection{KOLTAY2022145,
title = {Chapter 6 - Roles and education of information and data professionals},
editor = {Tibor Koltay},
booktitle = {Research Data Management and Data Literacies},
publisher = {Chandos Publishing},
pages = {145-180},
year = {2022},
series = {Chandos Information Professional Series},
isbn = {978-0-12-824475-3},
doi = {https://doi.org/10.1016/B978-0-12-824475-3.00006-0},
url = {https://www.sciencedirect.com/science/article/pii/B9780128244753000060},
author = {Tibor Koltay},
keywords = {Data librarian, Data scientist, Data science, Research data management, Data literacy, Social-constructionist approaches, Connectivism, Scholarship of teaching, Inquiry-based learning},
abstract = {This chapter is based on a nonexhaustive treatment of selected issues. The first subsection identifies the main professional groups involved in data-related activities in academic libraries and beyond. In the second subsection, educational issues are targeted with regard to the education of information professionals for research data management, as well as for data literacy. The third subsection examines similarities and convergences between the pedagogy of educating for literacies. Pedagogical approaches, including social-constructionist, cognitive, and connectivist approaches, as well as the Scholarship of Teaching, are characterized here briefly. Inquiry-based learning and the ideas for breaking out of silos are also portrayed, and the tasks of visualization are described as well.}
}

incollection{LU2024251,
title = {Chapter 18 - Multitemporal-spatial-scale flexibility to improve renewable energy accommodation},
editor = {Zongxiang Lu and Haibo Li and Ying Qiao and Le Xie and Chanan Singh},
booktitle = {Power System Flexibility},
publisher = {Academic Press},
pages = {251-261},
year = {2024},
isbn = {978-0-323-99517-7},
doi = {https://doi.org/10.1016/B978-0-323-99517-7.00024-5},
url = {https://www.sciencedirect.com/science/article/pii/B9780323995177000245},
author = {Zongxiang Lu and Haibo Li and Ying Qiao and Le Xie and Chanan Singh},
keywords = {Renewable accommodation, quantitative factors, quantitative analysis, flexibility, regulation capabilities},
abstract = {The capacity of the wider power system for wind power accommodation is the end result of the synergistic characteristics of the power source (“generation”), the power grid (“grid”), and the load (“load”). Research efforts devoted to wind power accommodation capacity, consequently, ought to take a holistic view of the “generation-grid-load” characteristics. This chapter first introduces the factors that influence wind power accommodation on a multispace and timescale. Then, this section proceeds with a quantification of the flexibility contribution of the power system devices to the grid to establish the flexibility balance at the device level. This chapter is devoted to a holistic study of the wind power accommodation capacity of the Mengxi grid from the electrical output and electricity volume perspectives, taking into account both the general “generation-grid-load” characteristics and the features of wind generation operation, conventional generator operation, load, and grid structure. The topics to be contemplated include wind power accommodation capacity in real-time operation with load and frequency modulation, status quo on the utilization of wind generation resources in the Mengxi grid, the level of impact the constraints have on wind power accommodation, and the dissection of potential improvement initiatives and the pertaining sensitivity analyses.}
}

incollection{2017255,
title = {Index},
editor = {Teresa M. Evans and Natalie Lundsteen and Nathan L. Vanderford},
booktitle = {ReSearch},
publisher = {Academic Press},
pages = {255-260},
year = {2017},
isbn = {978-0-12-804297-7},
doi = {https://doi.org/10.1016/B978-0-12-804297-7.18001-2},
url = {https://www.sciencedirect.com/science/article/pii/B9780128042977180012}
}

incollection{GARDNER202477,
title = {Chapter 4 - Smart design for urban activation and placemaking},
editor = {Nicole Gardner},
booktitle = {Scaling the Smart City},
publisher = {Elsevier},
pages = {77-102},
year = {2024},
series = {Smart Cities},
isbn = {978-0-443-18452-9},
doi = {https://doi.org/10.1016/B978-0-443-18452-9.00008-2},
url = {https://www.sciencedirect.com/science/article/pii/B9780443184529000082},
author = {Nicole Gardner},
keywords = {Cyber-physical systems, Design, Digital placemaking, Interaction, Placemaking, Smart design, Urban activation, Urban amenitization},
abstract = {This chapter charts out the distinction between the concepts of digital placemaking and smart placemaking. It examines existing and speculative urban technology projects that combine spatial design thinking and physical computing to address placemaking design goals such as urban activation, amenitization, and safety and security. In ways different from conventional smart city initiatives that surveil urban dynamics en masse to imperceptibly calibrate large-scale urban services and infrastructural systems, the projects discussed in this chapter engage sensor-based technologies to create localized, responsive, and interactive urban environments to address the social, cultural, and aesthetic dimensions of urban livability.}
}

incollection{BRAME201915,
title = {Chapter 2 - Course Design: Making Choices About Constructing Your Course},
editor = {Cynthia J. Brame},
booktitle = {Science Teaching Essentials},
publisher = {Academic Press},
pages = {15-28},
year = {2019},
isbn = {978-0-12-814702-3},
doi = {https://doi.org/10.1016/B978-0-12-814702-3.00002-0},
url = {https://www.sciencedirect.com/science/article/pii/B9780128147023000020},
author = {Cynthia J. Brame},
keywords = {Undergraduate, science, education, course design, learning goals, learning objectives, guiding questions, formative assessment},
abstract = {Designing or redesigning a course can be a creative and rewarding effort, but it is always a challenge. Science is characterized by continuous change and an ever-growing (and already large!) body of knowledge, and our courses often seek to help students understand the core knowledge, experimental tools, and ways of thinking in a field. It’s a big task. Further, a course may play a particular role in the curriculum, serving as a prerequisite, a capstone, or the course in which students learn a particular skill. How do you pick on what to focus, and how do you organize your course to help your students be able to transfer their knowledge to a new setting? How can you design the course to help your students build a conceptual framework that can expand and grow as their understanding grows? This chapter describes six principles to guide your course design and provides suggestions for more detailed resources.}
}

