@INPROCEEDINGS{9453972,
  author={Michaeli, Tilman and Romeike, Ralf},
  booktitle={2021 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Developing a Real World Escape Room for Assessing Preexisting Debugging Experience of K12 Students}, 
  year={2021},
  volume={},
  number={},
  pages={521-529},
  abstract={Debugging code is a central skill in learning to program. Nevertheless, debugging poses a major hurdle in the K12 classroom, as students are often rather helpless and rely on the teacher hurrying from one student-PC to the other. Despite this, debugging is an underrepresented topic in the classroom as well as in computer science education research, as only few studies, materials and concepts discuss the explicit teaching of debugging. According to the constructivist learning theory, teaching and developing concepts and materials for the classroom have to take learners' preexisting experience into account. Students' preexisting debugging experience is built through troubleshooting, where they frequently find and fix errors in their daily lives - before they learn to program - for example when repairing their bicycle or if “the internet” stops working. Debugging is a special case of general troubleshooting and shares common characteristics, such as the overall process or particular strategies. Thus, the aim of this study is to develop an instrument for assessing preexisting debugging experience in the form of a real-world escape room consisting of debugging-related troubleshooting tasks. This allows us to observe students' troubleshooting process, strategies, and overall behavior in a natural environment and thus assess preexisting debugging experience. To this end, a design-based research process was conducted and a real-world escape room consisting of various troubleshooting tasks was developed. Those tasks and the escape room setting provide an innovative methodological approach to study students troubleshooting behavior and assess their preexisting debugging experience.},
  keywords={Systematics;Instruments;Conferences;Debugging;Bicycles;Computer science education;Task analysis;debugging;troubleshooting;escape room;computer science education;K12;computational thinking},
  doi={10.1109/EDUCON46332.2021.9453972},
  ISSN={2165-9567},
  month={April},}
@INPROCEEDINGS{9071071,
  author={Winter, Victor and Love, Betty and Friend, Michelle and Matthews, Michael},
  booktitle={2019 International Conference on Computational Science and Computational Intelligence (CSCI)}, 
  title={A Computer Scientist Teaches Gen Ed Math}, 
  year={2019},
  volume={},
  number={},
  pages={793-799},
  abstract={A nationwide effort is underway to provide students pursuing higher education with options for satisfying general education (gen ed) math requirements. Within the context of this effort, computer science has an opportunity to introduce students to programming fundamentals and computer science principles while also satisfying gen ed math requirements. This paper is an experience report that describes initial efforts at the University of Nebraska-Omaha in piloting a course, satisfying the gen ed math requirements for non-STEM majors, whose content spans computer science, mathematics as well as the visual arts.},
  keywords={Art;Algebra;Cognition;Education;Programming profession;mathematical thinking, computational thinking, spatial reasoning, computer programming, visual arts},
  doi={10.1109/CSCI49370.2019.00151},
  ISSN={},
  month={Dec},}
@INPROCEEDINGS{10481204,
  author={Lee, Chien-Sing},
  booktitle={2023 18th International Conference on Intelligent Systems and Knowledge Engineering (ISKE)}, 
  title={Developing a Knowledge-Requirements Engineering Framework towards Transformative Metaverses/(Eco)Systems/Ecologies}, 
  year={2023},
  volume={},
  number={},
  pages={1-8},
  abstract={Sustainability and circular economy are promoted by the UNSDGs. However, UNEP has suggested localization prior to development, and harmonization, to aggregate impacts across spatial scales and across different taxonomic groups, applicable to all resources, to address emergent crosscutting issues across regions and models. This study posits that based on design thinking, sustainable investing/asset management theory needs to be situated within societal needs, to cater to differentiated needs, diverse capability maturity levels, and different flavours of reuse. Thus, instantiating from the Knowledge-Requirements Engineering frameworks, this study aims to review, simplify and localize sustainable investing concepts. To cater to different scenarios, a Knowledge-Requirements Engineering-Lifecycle Thinking-Innovation Helixes framework is proposed; intertwining expansive framing and UNEP's intrinsic value, pivoting via instrumental values, localized to cultural values, analogical to online shopping drivers, to enhance absorptive/ multiplicative/ relational capacity/capability, transformative innovations, across SDGs. Hopefully, the framework can interconnect/recommend/transform metaverses/ (eco)systems/ ecologies/assets more reflectively, effectively and efficiently.},
  keywords={Technological innovation;Instruments;Heuristic algorithms;Biological system modeling;Supply chains;Electronic commerce;Cultural differences;metaverse;sustainable investing;UNEP;circular economy;design thinking;Lifecycle Thinking;computational thinking;reform asset management theory;intrinsic;instrumental;cultural values;ontological design potentials;knowledgerequirements engineering},
  doi={10.1109/ISKE60036.2023.10481204},
  ISSN={},
  month={Nov},}
@INPROCEEDINGS{8226399,
  author={Rosales, Vanessa Aybar and Queiruga, Claudia and Tzancoff, Claudia Banchoff and Kimura, Isabel Miyuki and Bartneche, Matías Brown},
  booktitle={2017 XLIII Latin American Computer Conference (CLEI)}, 
  title={Programming competitions in high school classrooms: RITA en RED}, 
  year={2017},
  volume={},
  number={},
  pages={1-8},
  abstract={This paper presents RITA en RED, an improvement of RITA (Robot Inventor to Teach Algorithms) that came as a results of field tests in high schools of Great La Plata. The goals of the design of RITA en RED are: to promote the introduction of block programming competitions in the classroom, providing a collaborative space for the creation and analysis of programmed robot strategies, while favoring the teaching practice through the development of proposals for teaching programming in the classroom. This paper describes experiences with RITA and the results that led to the design of RITA en RED, preliminary results of a first implementation of RITA en RED and a new design that attempts to improve the experience of the students participating in the competitions.},
  keywords={Robots;Java;Information technology;Programming profession;Education;Teaching programming;free software;block-based programming;computational thinking;RITA},
  doi={10.1109/CLEI.2017.8226399},
  ISSN={},
  month={Sep.},}
@INPROCEEDINGS{10020957,
  author={Gosselar, Ashley},
  booktitle={2022 IEEE International Conference on Big Data (Big Data)}, 
  title={A Data-Driven Approach to Reparative Description at the University of Chicago}, 
  year={2022},
  volume={},
  number={},
  pages={2532-2540},
  abstract={Reparative description of collections is a growing element of diversity, equity, and inclusion efforts at cultural heritage institutions. However, the scale and complexity of the work can be overwhelming in practice. I demonstrate that computational methodologies and data analytics can be used to kickstart the planning stage for reparative description of archival finding aids. I discuss auditing and analyzing finding aids at the University of Chicago Library’s Hanna Holborn Gray Special Collections Research Center for potentially problematic language utilizing Python, Trifacta, Tableau, and Neo4j. I describe insights gained by treating finding aids as data, and I share recommendations for structuring reparative description work in a logical and attainable way.},
  keywords={Pain;Forestry;Metadata;Big Data;Propulsion;Data science;Libraries;Computational Thinking;Data Analysis;Reparative Description;Inclusive Description;Archives;Archival Description;Archival Metadata;Finding Aids},
  doi={10.1109/BigData55660.2022.10020957},
  ISSN={},
  month={Dec},}
@INPROCEEDINGS{10343081,
  author={Kalathas, Paris and Parham-Mocello, Jennifer},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Math+CS: Comparing Teaching Candidates in a Methods Course and Pre-Service Teachers in a Math and Technology Course}, 
  year={2023},
  volume={},
  number={},
  pages={1-9},
  abstract={While governments, teacher educators, and teachers recognize the importance of introducing computer science (CS) in K-12, there is limited understanding about when the teacher preparation should start and how it needs to be done. Furthermore, with the rapid expansion of digital technology in our society and the way it affects our lives, new educational frameworks for better teacher preparation have been developed, such as TPACK and CTIntegration, that situate new technologies and their role in education to meet the new societal demands. There is a larger body of research in Mathematics on how on how to prepare teachers to teach than in CS. This study explores how graduate teaching candidates and undergraduate pre-service teachers engage with Math+CS modules differently. We were interested in the similarities and differences in the way senior-level pre-service teachers in a mathematics and technology class and graduate-level teacher candidates in a methods class interact with Math+CS integrated modules. Working with the concepts of variable, input, and output, we investigated which knowledge domains were leveraged among groups in different classes, what connections they make between the concepts in math and CS, and their uncertainty. The results indicated that there was a difference in the way the teaching candidates in their methods class approached the computational modules than the pre-service teachers. The pre-service teachers focused more on developing their CS content knowledge, and the teacher candidates were interested in making connections between their knowledge domains, reflecting on how their students would think about the concepts in math, expressing more concerns, and asking more questions to develop their TPACK.},
  keywords={Computer science;Uncertainty;Education;Government;Mathematics;Computer science;computational thinking;K-12;teachers;integrated curriculum;mathematics;teacher development;Math + CS},
  doi={10.1109/FIE58773.2023.10343081},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{10707923,
  author={Dai, Wan-Juan and Li, Ming-Chaun and Chen, Chih-Ming and Huang, Ming-Yan},
  booktitle={2024 16th IIAI International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={Empowering Elementary Students' Scratch Programming Skills Through a Jigsaw Collaborative Learning Method in a Metaverse Virtual Space}, 
  year={2024},
  volume={},
  number={},
  pages={142-147},
  abstract={This study designs a jigsaw collaborative learning method in a metaverse virtual space (JCLM-MVS) to promote learning performance and CT in Scratch programming. This study used a quasi-experimental research method with 48 fifth-grade students from two classes in Taiwan's elementary school as the research participants. One class of 24 students was randomly assigned to the experimental group using JCLM-MVS to conduct Scratch programming learning, whereas the other class of 24 students was assigned to the control group using the traditional teacher-centered teaching method. The study found that the experimental group of learners showed significantly better learning performance than the control group. Although the results showed no statistically significant difference in overall and most dimensions of CT between the two groups, both learning approaches were found to promote CT effectively.},
  keywords={Federated learning;Metaverse;Education;Programming;Aerospace electronics;Informatics;Computational thinking;Programming learning;Jigsaw collaborative learning method;Metaverse virtual space},
  doi={10.1109/IIAI-AAI63651.2024.00036},
  ISSN={2472-0070},
  month={July},}
@ARTICLE{10305292,
  author={Jiménez Toledo, Javier Alejandro and Collazos, César A. and Ortega, Manuel and Ramos, Deixy Ximena},
  journal={IEEE Revista Iberoamericana de Tecnologias del Aprendizaje}, 
  title={Algorithmic Thinking and Extension of its Definition for Trainee Software Developers: A Systematic Literature Mapping}, 
  year={2023},
  volume={18},
  number={4},
  pages={331-343},
  abstract={This paper exhibits a systematic literature mapping of the considerations required to develop algorithmic thinking in a first course in computer programming (CS1) in university academic programs in computing. In the methodological process of this study, 5 stages were proposed: research questions, search, selection, quality assessment and synthesis extraction. In this way, 5 guiding questions were drawn, 136 articles generated by the search stage were analyzed and the synthesis of 55 documents that met the criteria of this research was concluded, thus compiling the different practices used for the development of algorithmic thinking. In addition, as a result of the systematic literature mapping, a definition of Algorithmic Thinking oriented Software Engineering and didactics is proposed.},
  keywords={Systematics;Software algorithms;Education;Programming profession;Information services;Software engineering;Computational modeling;Algorithms;computing;computational logic;computational thinking;computer programming},
  doi={10.1109/RITA.2023.3323784},
  ISSN={1932-8540},
  month={Nov},}
@INPROCEEDINGS{5673145,
  author={Chang, Carl K. and Yang, Hen-I and Svecs, Igors and Wong, Johnny},
  booktitle={2010 IEEE Frontiers in Education Conference (FIE)}, 
  title={REACH platform — Remote access to smart home facility based computer science laboratory}, 
  year={2010},
  volume={},
  number={},
  pages={F3F-1-F3F-7},
  abstract={The purpose of the REACH (REmote ACcess to smart Home facility) platform is to allow students to learn about basic principles of computer science and software engineering practices, and gain hands-on experience through observable effects of the computing systems in a familiar setting (home). It utilizes virtualization to encourage group collaboration and grants anytime, anywhere access to the smart home facility. It incorporates dynamic binding capability that allows students to either use the sensors and actuators hardware they check out and install locally for development, or to conduct experiments in the smart home facility. Once the development is completed, the programs can be deployed remotely, and students can make observations through web cams strategically situated in the smart home facility and the logs of the system's operations and users' activities. The REACH platform is designed to support a large spectrum of computer science courses, from the equivalence of computer science lab 101, interdisciplinary projects, all the way to research projects in artificial intelligence, pervasive computing, and human computer interactions.},
  keywords={Smart homes;Sensors;Computer science;Hardware;Software;Servers;Collaboration;Virtualization;Remote lab;Pervasive computing;Smart home;Interdisciplinary courses;Computational thinking},
  doi={10.1109/FIE.2010.5673145},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{8726211,
  author={Altaher, Marah and Ferchichi, Ahmed},
  booktitle={2018 JCCO Joint International Conference on ICT in Education and Training, International Conference on Computing in Arabic, and International Conference on Geocomputing (JCCO: TICET-ICCA-GECO)}, 
  title={ALGO-THINK Approach}, 
  year={2018},
  volume={},
  number={},
  pages={1-6},
  abstract={In our time human depends to solve his problems on the machine and the technology, however, there is a gap between the human thinking and the implementation of these ideas in the machine. From this point we try, in this article, to find a common language between machine and human thinking, that is to say the use of the concepts of computer science to solve problems. We propose in this study a new methodology called “Algo-think Approch” serving as a bridge between computer processing, practiceand human activities},
  keywords={Computer science;Bridges;algorithm;Algo-think approach;computational thinking;Landa's theory},
  doi={10.1109/ICCA-TICET.2018.8726211},
  ISSN={},
  month={Nov},}
@INPROCEEDINGS{10386566,
  author={Buchanan, Sarah A. and Wachtel, Jennifer L. and Stevenson, Jennifer A.},
  booktitle={2023 IEEE International Conference on Big Data (BigData)}, 
  title={Accelerating Precision Research and Resolution Through Computational Archival Science Pedagogy}, 
  year={2023},
  volume={},
  number={},
  pages={2010-2019},
  abstract={Use of archival collections is accelerated by the presence of finding aids, which communicate the arrangement and description of collection contents. To arrive at the optimal arrangement of a collection, archivists rely on some item-level processing or knowledge gained by exploring and manipulating digital reproductions of the contents. In this paper we consider archival student and instructor perspectives from hands-on course experiences directly with two distinct collections: one pertaining to the development, 2017 transfer and launch, and ongoing maintenance of the International Research Portal for Records Related to Nazi-Era Cultural Property (IRP2), and one a selection of unclassified catalog entries about digitized nuclear science reports. Visualizing is a data practice that permits the discovery of key content patterns, identification of computational models to be carried out to aid further analysis, and query-resolution for subject experts with precise - and historically significant - research questions. While archival data visualizations have previously been implemented as an extension of descriptive work including finding aid element counts, here we connect visualization to the work of archival outreach and access. We study how visualizations generated by groups of students working with textual and numerical dataset portions can ultimately accelerate time-sensitive uses of collections.},
  keywords={Analytical models;Computational modeling;Data visualization;Maintenance engineering;Big Data;Data models;Cultural differences;computational thinking;information science education;information visualization;provenance research;data transformation},
  doi={10.1109/BigData59044.2023.10386566},
  ISSN={},
  month={Dec},}
@INPROCEEDINGS{9637399,
  author={Chung, Chan-Jin and Palonis, Shannan and Santos, Elmer and Sparks, Pamela and Cartwright, Christopher},
  booktitle={2021 IEEE Frontiers in Education Conference (FIE)}, 
  title={Design, Implementation, and Assessment of Synchronized Worldwide Online Robotics Competitions for Engineering and Computing Education}, 
  year={2021},
  volume={},
  number={},
  pages={1-8},
  abstract={The work presented in this Full Paper is categorized as Innovative Practice, as per FIE guidelines. Robofest is a worldwide robotics competition program for students in 4th-12th grade and college. Student teams design, construct, and program their autonomous robots in a variety of competition categories. In the 2019–2020 academic year, due to the COVID-19 pandemic, we designed an innovative and novel online robotics competition format using Zoom Webinar tools rather than cancelling the world championship competition. The purpose of this paper is to show how we designed, implemented synchronized online robotics competitions, and to analyze the results and efficacy of the Robofest Online World championships (ROWC). One hundred and fifty-three teams comprising of 360 students competed in three age divisions and six categories held weekends from Aug. 28 through Oct. 10, 2020. Most teams set up playing fields at home and we trained judges online prior to the competitions. We sent the description of an unknown game ending task and unknown playing field factors to local volunteer judges at the same time just before the 30-minute work time on the competition day. After checking to make sure that all the teams were ready to play, we sent the game start signal to all the teams at the same time through Zoom. The local judges scored the runs and submitted videos to the Robofest office for score verification. Robofest office staff also proctored the competitions through Zoom screens for fair competition results and maximum learning opportunities. It was an innovative practice of using online conference tools to organize the world's first unique “synchronized” online autonomous robotics competitions for engineering and computing education. Anonymous coach & judge survey results after the ROWC showed that the satisfaction rate was better than the in-person competition surveys of previous years. Additionally, 95 % of students surveyed after the ROWC exposure said that they would now consider a career involving STEM versus 91 % of students surveyed after the 2019 in-person competitions.},
  keywords={Pandemics;Engineering profession;Education;Games;Webinars;Synchronization;Task analysis;online robotics competition;autonomous robotics;computational thinking;computer science and engineering education;virtual robotics;online learning environment;STEM education;synchronized online competition;online competition methodologies},
  doi={10.1109/FIE49875.2021.9637399},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{7833330,
  author={de Kereki, Inés Friss and Paulós, J. Víctor and Manataki, Areti},
  booktitle={2016 XLII Latin American Computing Conference (CLEI)}, 
  title={A bilingual MOOC that teaches youngsters how to program: Analysis and reflections on one year of experiences}, 
  year={2016},
  volume={},
  number={},
  pages={1-11},
  abstract={Critical thinking and problem solving are fundamental skills to function successfully particularly in today's world. When programming, these skills are promoted, developed and deployed. In this context, Universidad ORT Uruguay and The University of Edinburgh co-created in 2015 a MOOC (Massive Open Online Course) that teaches young teenagers how to program. The course was implemented simultaneously in 2 versions: in Spanish, called “¡A Programar!” and in English, called “Code Yourself!”, which are available on the Coursera platform. Since its launch in March 2015, more than 139,000 people from 197 countries have registered. Initially it was offered in a “fixed session”; while currently it is offered in an “auto-cohort” mode. In both cases, students' surveys indicate that the course has met or exceeded expectations (values above 93%). In this paper, we detail the characteristics of the MOOC, and we analyze and compare the modes and results.},
  keywords={Videos;Software;Programming;Java;Reflection;Problem-solving;Context;MOOC;programming;computational thinking;Scratch},
  doi={10.1109/CLEI.2016.7833330},
  ISSN={},
  month={Oct},}
@INPROCEEDINGS{9894608,
  author={Marchetti, Emanuela and Valente, Andrea and Dohn, Nina Bonderup},
  booktitle={2022 12th International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={Sandwich robot: how non-programmers solve computational problems}, 
  year={2022},
  volume={},
  number={},
  pages={234-239},
  abstract={We are investigating how non-programmers make sense and solve simple computational problems. We developed a game where a robot has to assemble a sandwich, collecting a specific list of ingredients. Our game follows principles and offers game mechanics typical of games for learning programming. The main innovation of our game is that it visualizes the generality property of algorithms through double levels, that we call twin-worlds, in which one same algorithm is executed by two robots in assembling their sandwiches. Results from early testing with university students enrolled in the education of Media Studies show that the game is usable, levels can be solved at various degrees of complexity (e.g. with and without using loops), and that the students were able to make sense of our twin-worlds levels and formulate general algorithms for both worlds. However, the gathered feedback also highlights the need to explore alternative implementations of the twin-worlds concept.},
  keywords={Visualization;Technological innovation;Codes;Prototypes;Games;Robot sensing systems;Complexity theory;Computational Thinking;Games;Programming;Computational Problems;Gaming Experience;Netnography},
  doi={10.1109/IIAIAAI55812.2022.00054},
  ISSN={2472-0070},
  month={July},}
@INPROCEEDINGS{9657426,
  author={Ruzycki, Nancy Jean and Dela Fuente Imperial, Lorelie and Dulany, Krista and Carter, Jared and Kerr, Seleka Naomi and Danger, Christine Angel and Arnold, Leigh},
  booktitle={2021 World Engineering Education Forum/Global Engineering Deans Council (WEEF/GEDC)}, 
  title={Building Conceptual Models and Engineering Design Thinking in K12 Students}, 
  year={2021},
  volume={},
  number={},
  pages={1-7},
  abstract={This half-day workshop will engage participants in understanding how engineering design practices can be brought into core content classes to support conceptual model development in students as part of the model development cycle. Participants will have a chance to map this learning using frameworks developed by the facilitators.},
  keywords={Conferences;Buildings;Engineering education;Modeling instruction;system thinking;teacher professional development;computational thinking;engineering design},
  doi={10.1109/WEEF/GEDC53299.2021.9657426},
  ISSN={},
  month={Nov},}
@INPROCEEDINGS{10831471,
  author={Li, Bin},
  booktitle={2024 IEEE International Conference on Systems, Man, and Cybernetics (SMC)}, 
  title={Computational Logistics: Definition Evolution, Conceptual Architecture, Practical Philosophy and Typical Application}, 
  year={2024},
  volume={},
  number={},
  pages={4283-4290},
  abstract={With the rapid development of global supply chain, the existing methodology and solution struggle to cope with the operation of complex logistics systems (CLS). Thereupon, the computational logistics is suggested systematically from the perspectives of definition evolution, conceptual architecture, problem-oriented exploration, and practical philosophy. All provide an elementary sketch and synopsis of CLS oriented scheduling and decision methodology. Subsequently, a typical application of computational logistics is discussed on a container terminal handling system (CTHS). After the abstraction and automation of container terminal-oriented logistics generalized computation, the memory access model and computing principles in computer science are transferred and integrated to propose the yard facility-block accessing and switching model (YFB-ASM). The processor affinity, spatial locality and cooperative computing of CTHS are discussed according to the practice data in a large-scale CTHS. The YFB-ASM is supposed to establish a solid foundation for rolling plan, task scheduling, resource allocation and performance analysis of CTHS. It illustrates the feasibility, availability, credibility and practicability of computational logistics preliminarily.},
  keywords={Automation;Philosophical considerations;Systematics;Processor scheduling;Computational modeling;Supply chains;Computer architecture;Switches;Containers;Logistics;computational logistics;computational thinking;logistics operation;container terminals;machine learning},
  doi={10.1109/SMC54092.2024.10831471},
  ISSN={},
  month={Oct},}
@INPROCEEDINGS{9505572,
  author={Dapozo, Gladys Noemí and Greiner, Cristina Liliam and Petris, Raquel Herminia and Medina, Yanina and Company, Ana María and Espíndola, María Cecilia},
  booktitle={2020 IEEE Congreso Bienal de Argentina (ARGENCON)}, 
  title={Motivación y logros en la formación de docentes para introducir la programación y la robótica en los niveles educativos no universitarios}, 
  year={2020},
  volume={},
  number={},
  pages={1-8},
  abstract={Within the framework of public policies that promote the incorporation of programming and robotics in the compulsory educational system in Argentina, at the Universidad Nacional del Nordeste, training actions are carried out to prepare teachers of pre-university educational levels with the technological and pedagogical competencies necessary to address the challenge of teaching programming in schools. In this work the preliminary results of the implementation of the Diploma in Programming and Educational Robotics are shown. The interest that this training arouses is highlighted by the participation of teachers from locations far from the headquarters of the dictating academic unit, from different areas of knowledge and with a motivation in line with the objectives of this educational proposal. Likewise, it is also verified that teachers have incorporated the knowledge and techniques of programming and have consolidated competencies for digital culture, such as collaboration, communication and creativity, necessary to achieve a more effective and motivating learning in students.},
  keywords={Training;Collaboration;Public policy;Proposals;Programming profession;Robots;Creativity;Teaching of programming;non-university educational levels;computational thinking},
  doi={10.1109/ARGENCON49523.2020.9505572},
  ISSN={},
  month={Dec},}
@INPROCEEDINGS{10366351,
  author={Paz, Julian Andrés Mera and Ibarra, Luis Eduardo Ruano and Hurtado, Jhonn Jairo Muñoz},
  booktitle={2023 VI Congreso Internacional en Inteligencia Ambiental, Ingeniería de Software y Salud Electrónica y Móvil (AmITIC)}, 
  title={Development of technological tools in response to primary mental health care needs arising from the emergency caused by COVID-19 in Cauca}, 
  year={2023},
  volume={},
  number={},
  pages={1-8},
  abstract={The pandemic caused by Covid-19 – Coronavirus forced government authorities to take quick action against the virus, within the framework of these measures, borders, social distancing, confinement, cancellation of face-to-face attendance and implementation of teleworking were interrupted, and effective solutions were sought for the protection of physical health and care of life. However, mental health was neglected, triggering depression, anxiety, different types of violence, suicidal ideation, and action, among other factors. Directly affecting individuals in their environment, emotions, and perceptions. With the understanding of the demands in mental health care, the research team made an interdisciplinary proposal focused on the inhabitants of the department of Cauca, methodologically used a mixed research approach, applying qualitative instruments such as focus groups, debates with experts, discursive analysis; in quantitative, analysis of secondary sources, compilation, and review of reports. As a result, a technological platform was built to favor decision-making by state actors, a virtual learning object, a training process for 210 actors such as technical assistance, installed capacity in the 42 Municipalities of Cauca, a base document for the formulation of public policies in mental health and primary care for 60,000 people through face-to-face visits or teleorientation.},
  keywords={COVID-19;Training;Statistical analysis;Pandemics;Mental health;Software;Social factors;Mental health;technological tools;Covid 19;primary care;computational thinking},
  doi={10.1109/AmITIC60194.2023.10366351},
  ISSN={},
  month={Oct},}
@INPROCEEDINGS{10578766,
  author={Lopez-Caudana, Edgar and Luviano, Ariadna Sosa and Lora, Joan Domínguez and de León, Victoria Rodriguez and González, Carina Soledad González and George-Reyes, Carlos Enrique},
  booktitle={2024 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Development of Academic Projects with Robotics for Social Support: Initiatives of Mexican engineering Students}, 
  year={2024},
  volume={},
  number={},
  pages={1-9},
  abstract={In today's rapidly evolving technological landscape, marked by the proliferation of artificial intelligence and robotics, the role of engineering education stands as a cornerstone of sustainable progress. Recognizing this imperative, engineering curricula are increasingly incorporating a competency-based approach that reflects the complexities of the real world, for lifelong learning, using enabling and disruptive technologies such as humanoid robotics. We present a case study from the Tecnologico de Monterrey, Mexico City Campus, where NAO robots are used in social projects with immediate impact in the fields of health and education, addressing sustainable development objectives. This research shows projects that have had a significant social impact in different communities in Mexico, in the areas of education and health with innovative solutions that motivate and engage the attention of the audience. A group of students from different engineering careers design, develop and implement application scenarios for the accompaniment and social appropriation of challenges such as: the incorporation of girls in STEM areas, support for groups with intellectual disabilities, dissemination and knowledge of sign language and dissemination of the cultural heritage of Xochimilco as a cultural heritage of humanity. Preliminary results indicate that this pedagogical approach not only inculcates students with essential skills such as problem solving, critical thinking and teamwork, but also makes them more aware of the social implications of their engineering studies. Evidence and results of the involvement of undergraduate students in social scenarios are shown, showing that, by integrating these elements, engineering programs aspire to train professionals capable of harnessing their technical knowledge for the general good of society as well as the perception of the participants and audiences reached.},
  keywords={Knowledge engineering;Visualization;Sign language;Educational robots;Urban areas;Teamwork;Cultural differences;Complex thinking;competency-based education;educational innovation;higher education;data visualization;computational thinking},
  doi={10.1109/EDUCON60312.2024.10578766},
  ISSN={2165-9567},
  month={May},}
@INPROCEEDINGS{10941629,
  author={Yadav, Rakesh Kumar and Harinaiha, Adarsha},
  booktitle={2025 First International Conference on Advances in Computer Science, Electrical, Electronics, and Communication Technologies (CE2CT)}, 
  title={AI-Driven Green Computing for 6G Network: Improve User Experience and Security}, 
  year={2025},
  volume={},
  number={},
  pages={481-485},
  abstract={A dynamic Computational Thinking resolution can be likely in a 6G environment by way of Green-IoT and Artificial Intelligence (AI), important parts of computational thinking. This order requires lowering difficult problems to tinier, more controllable parts and recognizing patterns and friendships at intervals in miscellaneous parts. Machine intelligence approaches concentrate on algorithms capable of learning from data, making judgments and predictions, and executing complex tasks beyond explicit programming. To appreciate the far-reaching quantities of data presented by 6G-connected schemes, computational inference and machine intelligence can be used for the Green-IoT. This has the potential to reinforce the computerization of many processes and bring about a smarter and more efficient use of possessions. Computational thinking that combines Green-IoT, AI, and 6G sciences can transform many areas, including education, and reinforce society's lives through the production of brisker, more adept, and more tailor-made uses and services. The research has been started by outlining key limits utilizing Green-IoT-authorized sensor electronics in the framework of 5G and 6G surroundings, as well as Artificial Intelligence, in this place study's review on computational thinking. In the subsequent section, delineate the fundamental structural requirements for a digital thinking paradigm centered on artificial intelligence and the Net of Things, significant aspects of prospective beneficial applications, and evaluate the advantages and disadvantages of each within the context of shared resources. Lastly, several security risks to an AI-based architecture that might compromise the system's ability to provide the computational thinking services that social media platforms need},
  keywords={6G mobile communication;Social networking (online);Green products;Transforms;User experience;Security;Internet of Things;Artificial intelligence;Programming profession;Machine intelligence;Artificial Intelligence;Green-lOT;6G;Internet of Things;Computational},
  doi={10.1109/CE2CT64011.2025.10941629},
  ISSN={},
  month={Feb},}
@INPROCEEDINGS{10904401,
  author={Zou, Xuanxuan and Zhan, Zehui and Yong, Lin and Yang, Kaixun and Chen, Guanliang},
  booktitle={2024 6th International Workshop on Artificial Intelligence and Education (WAIE)}, 
  title={Effect of the Event Graph-Based Feedback Strategies on Learning Motivation in Robotics Education}, 
  year={2024},
  volume={},
  number={},
  pages={390-395},
  abstract={Relying on the robotics education curriculum, this study constructs a computational thinking evaluation method based on event graph, observes and analyses the behavioral characteristics of learners with high and low computational thinking levels, provides them with more accurate and differentiated feedback, and verifies the effect of different feedback on learners' motivation through quasi-experimental research. It can be found that the motivation of high computational thinking learners increases more significantly with corrective feedback, while the motivation of low computational thinking learners decreases with corrective feedback and increases with prompting feedback. The study provides a practical reference for teachers to implement feedback for learners with different levels of computational thinking.},
  keywords={Accuracy;Conferences;Education;Information technology;Artificial intelligence;Robots;robotics education;feedback strategies;event graph;learning motivation},
  doi={10.1109/WAIE63876.2024.00076},
  ISSN={},
  month={Sep.},}
@INPROCEEDINGS{8956448,
  author={Bakała, Ewelina and Visca, Jorge and Tejera, Gonzalo and Seré, Andrés and Amorin, Guillermo and Gómez-Sena, Leonel},
  booktitle={2019 28th IEEE International Conference on Robot and Human Interactive Communication (RO-MAN)}, 
  title={Designing child-robot interaction with Robotito}, 
  year={2019},
  volume={},
  number={},
  pages={1-6},
  abstract={Computational thinking is a skill that is considered essential for the future generations. Because of this it should be incorporated into the curricula as soon as possible. An interesting option to work on computational thinking with children is by means of robots. Here, we present Robotito, a robot that can be programmed by arranging its environment, intended to help the development of computational thinking in preschool children. We describe its hardware and software environment, and hierarchical state machines used to implement two modes of interaction with environment-first based on color detection and the second sensible to the surrounding objects. We also present activities that we developed to work on abstraction, generalization, decomposition, algorithmic thinking, and debugging-skills related to computational thinking.},
  keywords={Conferences;Software algorithms;Color;Software;Hardware;Robots},
  doi={10.1109/RO-MAN46459.2019.8956448},
  ISSN={1944-9437},
  month={Oct},}
@INPROCEEDINGS{6684950,
  author={Vieira, Camilo and Magana, Alejandra J.},
  booktitle={2013 IEEE Frontiers in Education Conference (FIE)}, 
  title={Using backwards design process for the design and implementation of computer science (CS) principles: A case study of a colombian elementary and secondary teacher development program}, 
  year={2013},
  volume={},
  number={},
  pages={879-885},
  abstract={This paper describes the outcomes of a three-day teacher professional development workshop aimed at introducing concepts, principles and practices of computational thinking. The guiding research question for this study was: How teachers implement the backwards design process embodying elements of CS Principles (i.e., computational thinking big ideas and computational thinking practices) in the context of their classrooms? The participants of this study included 15 elementary, high school and college level teachers who are also graduate students from a master program in engineering. As part of the workshop participants developed a learning activity that included a set of learning objectives, the design of computational thinking related activities considering appropriate pedagogical strategies, and the integration of mechanisms to evaluate students' performance. Here we describe (a) how participants embodied the CS Principles in the design of learning activities to be integrated into their classrooms, (b) how they used the backwards design process as a tool to implement elements of the CS Principles and (c) what is teachers' performance in integrating CS Principles to the design of learning activities as evidenced by their peer evaluations. Finally, we propose the use of backwards design process together with the CS Principles as a framework for the design of computing learning activities and the development of teacher professional development programs in computing education.},
  keywords={Conferences;Educational institutions;Context;Reflection;Programming;Materials;Computing science;education;lesson plan;backwards design},
  doi={10.1109/FIE.2013.6684950},
  ISSN={2377-634X},
  month={Oct},}
@ARTICLE{10643971,
  author={Vidal-Silva, Cristian and Cárdenas-Cobo, Jesennia and Tupac-Yupanqui, Miguel and Serrano-Malebrán, Jorge and Sánchez Ortiz, Aurora},
  journal={IEEE Access}, 
  title={Developing Programming Competencies in School-Students With Block-Based Tools in Chile, Ecuador, and Peru}, 
  year={2024},
  volume={12},
  number={},
  pages={118924-118936},
  abstract={The information society is a reality nowadays, and computational thinking has become a relevant competence for everybody, regardless of age, social status, and primary activity. Information society is everywhere in contemporary life, and algorithmic thinking represents a significant competency for individuals, irrespective of their educational background and social condition. Developing and applying programming competencies represents a high-value know-how ability. Block-based coding and design tools like Scratch and TinkerCAD Arduino allow people to successfully build programming competencies in online environments regardless of age and social status. This article presents empirical evidence of the positive impact of the block-based programming language Scratch and the design tool TikerCAD Arduino in practical workshops to develop computational thinking with school children, school teachers, and university students. The results permit finding patterns, and almost transversal teaching approaches to build an elementary computational thinking competency applying Scratch and TinkerCAD Arduino, with a block-based approach in both tools and textual programming in the second one. The motivation and wishes of learning in all participants were hegemonic. Those results demonstrate the positive impact of Scratch and TinkerCAD Arduino on developing computational thinking competencies without restrictions. This work shows the application of Scratch and TinkerCAD Arduino in non-WEIRD contexts and, during the pandemic time, demonstrates the relevance of online education. The results show that developing programming competencies with Scratch and TinkerCAD Arduino motivated students’ autonomy and motivation for learning regardless of their education level and status. Those results encourage us to continue using Scratch and TinkerCAD Arduino to develop programming competencies without considering age and education level.},
  keywords={Programming profession;Education;Problem-solving;Codes;Encoding;Electronic learning;Programming competencies;school students;children;professors;scratch;TinkerCAD Arduino;online education},
  doi={10.1109/ACCESS.2024.3449228},
  ISSN={2169-3536},
  month={},}
@INPROCEEDINGS{10893419,
  author={Mohamad, Nurain Nadhirah and Abdullah, Abdul Halim and Hamzah, Mohd Hilmi},
  booktitle={2024 IEEE Frontiers in Education Conference (FIE)}, 
  title={Assessing the Readiness of Pre-Service Mathematics Teachers in Utilizing the Scratch Application: A Case Study at Universiti Teknologi Malaysia}, 
  year={2024},
  volume={},
  number={},
  pages={1-9},
  abstract={This research-to-practice full paper describes the readiness of pre-service mathematics teachers to incorporate Scratch, a block-based programming application, into mathematics instruction, focusing on their knowledge, skills, and attitudes. Given the rapid technological advancements, leveraging technology in mathematics education is crucial in fostering proficient problem-solving abilities among students. Consequently, computational thinking is recognized as a vital 21st-century competency, a transferable skill for effective problem-solving methods. The study underscores the importance of integrating Scratch, a supportive tool in computational thinking, into mathematics education. However, to integrate this application into mathematics education, pre-service teachers must be prepared to acquire the necessary knowledge and skills and to be ready to accept its use in teaching in the future. The construction of knowledge by pre-service mathematics teachers regarding the Scratch application is examined through the lens of social constructivism, which emphasizes knowledge construction through experience and social interaction. A purposive sample of 60 first- and second-year students participated in an online survey. The sample selection involving two groups aimed to identify significant differences in pre-service teachers' readiness levels across gender, study year, and academic achievement. The findings revealed limited proficiency among pre-service mathematics teachers in utilizing Scratch, particularly regarding its integration into mathematics instruction. Several factors contribute to the deficiency in skills among pre-service mathematics teachers in navigating the Scratch application, including requiring additional time to grasp the programming language employed in the application, challenges in arranging blocks to achieve desired outputs, and struggles in rectifying syntax errors. However, there was a positive attitude towards the application, indicating a strong inclination to enhance their skills. The study also found no significant differences in demographic variables such as gender, study year, or academic achievement, but a slight correlation exists between knowledge, attitudes, and academic achievement. Investigating pre-service teachers' readiness to integrate Scratch into mathematics instruction sheds light into the intersection between mathematics pedagogy and computational thinking. This intersection underscores the importance of integrating programming tools like Scratch into mathematics education to cultivate computational thinking skills. Additionally, the findings contribute to the broader discourse on the role of technology in education and highlight the need for enhanced training and support for pre-service teachers in leveraging technology effectively for instructional purposes.},
  keywords={Training;Surveys;Navigation;Education;Syntactics;Solids;Mathematics;Problem-solving;Programming profession;Lenses;Attitudes;Knowledge;Mathematics Education;Pre-service Teachers;Scratch Application;Skills},
  doi={10.1109/FIE61694.2024.10893419},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{9569502,
  author={Tao, Tao and Funan, Zhang and Lei, Ren and Yuan, Liu and Zekai, Cheng and Yuezhong, Chu},
  booktitle={2021 16th International Conference on Computer Science & Education (ICCSE)}, 
  title={Research on the Teaching Reform of Public Basic Courses of Computer at Universities under the Thinking of New Engineering}, 
  year={2021},
  volume={},
  number={},
  pages={975-977},
  abstract={With the development of computer technology, the current concept of “computational thinking” has been generally recognized by everyone. “Computational thinking” provides strong support for the development and research of various disciplines. The reform of university computer basic courses guided by “computational thinking” has become an important direction for the current reform of computer public basic courses. In recent years, our school’s series of reform measures based on the public basic courses of computer have achieved obvious results, which proves that this orientation is worthy of promotion.},
  keywords={Current measurement;Engineering education;New Engineering;Thinking of New Engineering;public basic courses;research on teaching reform;college computer},
  doi={10.1109/ICCSE51940.2021.9569502},
  ISSN={2473-9464},
  month={Aug},}
@INPROCEEDINGS{10343224,
  author={Do Nascimento, Marcos D. and Brandão, Anarosa A. F. and De Oliveira Brandão, Leônidas and Casal, Tiago Melo},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Towards iVProg4All: An Accessibility Test with Blind}, 
  year={2023},
  volume={},
  number={},
  pages={01-05},
  abstract={Computational thinking has become an essential skill nowadays. Many educational institutions around the world have adopted computational thinking as an elementary or complementary subject in their teaching schedules. One of the approaches that is efficient in teaching and learning computational thinking has been visual programming. However, like other applications used daily, visual programming tools can be a limiting factor for the blind in learning computational thinking. This work aims to present the iVProg4all, an accessible visual programming system based on forms. A preliminary study was carried out to test the usability of iVProg4all and accessibility with a blind user. The results show that, although some usability issues need to be fixed, the system proved accessible for blind people.},
  keywords={Visualization;Schedules;Limiting;Education;Blindness;Computational efficiency;Usability;Visual Programming;Accessibility;Blind},
  doi={10.1109/FIE58773.2023.10343224},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{6976343,
  author={Jingye Qu},
  booktitle={2014 IEEE Workshop on Advanced Research and Technology in Industry Applications (WARTIA)}, 
  title={The calculation thinking training system research for C program based on B/S mode}, 
  year={2014},
  volume={},
  number={},
  pages={641-643},
  abstract={Improving the computational thinking ability of students is the focus of the program design course teaching purpose. In the program design, guide students to analyze things and be able to describe things in natural language processing, make students establish the concept of computational thinking, and then through the programming to solve the problem, is an effective way to cultivate students computational thinking and methods. In this paper, on the basis of combing calculation thinking development, in view of the C program design, collection, classification, and refine the calculation thinking part of the classic case of ascension. According to the calculation thinking training method, calculation thinking training support system for C program was designed and developed.},
  keywords={Training;Browsers;Computers;Web servers;Computer languages;Calculation thinking;C program;B/S mode},
  doi={10.1109/WARTIA.2014.6976343},
  ISSN={},
  month={Sep.},}
@ARTICLE{6960872,
  author={Guruswami, Venkatesan and Xia, Patrick},
  journal={IEEE Transactions on Information Theory}, 
  title={Polar Codes: Speed of Polarization and Polynomial Gap to Capacity}, 
  year={2015},
  volume={61},
  number={1},
  pages={3-16},
  abstract={We prove that, for all binary-input symmetric memoryless channels, polar codes enable reliable communication at rates within an additive gap  $ \varepsilon > 0$  to the Shannon capacity with a block length, construction complexity, and decoding complexity, all bounded by a polynomial in  $1/ \varepsilon $ . Polar coding gives the first known explicit construction with rigorous proofs of all these properties; previous constructions were not known to achieve capacity with less than  $\exp (1/ \varepsilon )$  decoding complexity except for erasure channels. We establish the capacity-achieving property of polar codes via a direct analysis of the underlying martingale of conditional entropies, without relying on the martingale convergence theorem. This step gives rough polarization (noise levels  $\approx \varepsilon $  for the good channels), which can then be adequately amplified by tracking the decay of the channel Bhattacharyya parameters. Our effective bounds imply that polar codes can have block length (and encoding/decoding complexity) bounded by a polynomial in  $1/ \varepsilon $ . The generator matrix of such polar codes can be constructed in polynomial time by algorithmically computing an adequate approximation of the polarization process.},
  keywords={Decoding;Error probability;Polynomials;Entropy;Convergence;Complexity theory;Capacity planning;Information theory;error-correction codes;linear codes;Channel polarization;entropy;maximum likelihood decoding;symmetric capacity},
  doi={10.1109/TIT.2014.2371819},
  ISSN={1557-9654},
  month={Jan},}
@ARTICLE{7365445,
  author={Cheraghchi, Mahdi and Guruswami, Venkatesan},
  journal={IEEE Transactions on Information Theory}, 
  title={Capacity of Non-Malleable Codes}, 
  year={2016},
  volume={62},
  number={3},
  pages={1097-1118},
  abstract={Non-malleable codes, introduced by Dziembowski et al., encode messages s in a manner, so that tampering the codeword causes the decoder to either output s or a message that is independent of s. While this is an impossible goal to achieve against unrestricted tampering functions, rather surprisingly non-malleable coding becomes possible against every fixed family P of tampering functions that is not too large (for instance, when I≤I 22αn for some α <; 1, where n is the number of bits in a codeword). In this paper, we study the capacity of non-malleable codes, and establish optimal bounds on the achievable rate as a function of the family size, answering an open problem from Dziembowski et al. Specifically, We prove that for every family P with IFI I≤I 22αn, there exist non-malleable codes against P with rate arbitrarily close to 1-α [this is achieved with high probability (w.h.p.) by a randomized construction]. We show the existence of families of size exp(nO(1)2αn) against which there is no non-malleable code of rate 1 - α (in fact this is the case w.h.p for a random family of this size). We also show that 1 - α is the best achievable rate for the family of functions, which are only allowed to tamper the first αn bits of the codeword, which is of special interest. As a corollary, this implies that the capacity of non-malleable coding in the split-state model (where the tampering function acts independently but arbitrarily on the two halves of the codeword, a model which has received some attention recently) equals 1/2. We also give an efficient Monte Carlo construction of codes of rate close to 1 with polynomial time encoding and decoding that is non-malleable against any fixed c > 0 and family P of size 2nc, in particular tampering functions with, say, cubic size circuits.},
  keywords={Encoding;Decoding;Monte Carlo methods;Computer science;Cryptography;Electronic mail;Probabilistic logic;Cryptography;cryptographic protocols;codes;privacy;data security;Cryptography;cryptographic protocols;codes;privacy;data security},
  doi={10.1109/TIT.2015.2511784},
  ISSN={1557-9654},
  month={March},}
@INPROCEEDINGS{9576399,
  author={Broll, Brian and Lédeczi, Ákos and Stein, Gordon and Jean, Devin and Brady, Corey and Grover, Shuchi and Catete, Veronica and Barnes, Tiffany},
  booktitle={2021 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Removing the Walls Around Visual Educational Programming Environments}, 
  year={2021},
  volume={},
  number={},
  pages={1-9},
  abstract={Many block-based programming environments have proven to be effective at engaging novices in learning programming. However, most restrict access to the outside world, limiting learners to commands and computing resources built in to the environment. Some allow learners to drag and drop files, connect to sensors and robots locally or issue HTTP requests. But in a world where most of the applications in our daily lives are distributed (i.e., their functionality depends on communicating with other programs or accessing resources and data on the internet), the lack of support for beginners to envision and create such distributed programs is a lost opportunity. This paper argues that it is not only feasible, but crucial, to create environments with simple yet powerful abstractions that open up distributed computing and other widely used but advanced computing concepts including networking, the Internet of Things, and cybersecurity to novices. By thus removing the walls around our environments, we can expand opportunities for learning considerably: programs can access a wealth of online data and web services, and communicate with other projects. Moreover, these changes can enable young learners to collaborate with each other during program construction whether they share their physical location or study remotely. Importantly, providing access to the wider world will also help counter widespread student perceptions that block-based environments are mere toys, and show that they are capable of creating compelling applications. The paper presents NetsBlox, a programming environment that supports these ideas and shows that tools can be designed to democratize access to powerful ideas in computing.},
  keywords={COVID-19;Visualization;Codes;Educational robots;Web services;Toy manufacturing industry;Distributed databases},
  doi={10.1109/VL/HCC51201.2021.9576399},
  ISSN={1943-6106},
  month={Oct},}
@ARTICLE{8907854,
  author={Jia, Menghan and Yu, Wangyang and Zhai, Xiaojun and Saha, Sangeet},
  journal={IEEE Access}, 
  title={Modeling and Analysis of First Aid Command and Dispatching System of Cloud Medical System}, 
  year={2019},
  volume={7},
  number={},
  pages={168752-168758},
  abstract={Nowadays, with the phenomenon of the world ageing getting serious, the demand for intelligent medical treatment becomes higher than past. A series of smart bracelets have been launched for the health of the elderly, which can detect the health condition of the elderly in real-time. When an abnormal phenomenon occurs and the rescue will be needed, it can transmit the signal to the medical platform of the hospital or the mobile phone of its guardian, and then the hospital would send an ambulance and relevant doctors to rescue the patient. This paper mainly studies the starting bracelet sensors to collect data to rescue behavior of the entire process, proposes a Petri net model of distributed resource allocation based on cloud medical system. Through the structural analysis of the model and the construction of the algorithm, the rationality and efficiency of the whole system model are verified, and the case study shows that the model can effectively find the optimal scheduling path and each part of the system can respond well.},
  keywords={Cloud computing;Petri nets;Analytical models;Hospitals;Optimal scheduling;Monitoring;Real-time systems;Cloud medical system;emergency scheduling;Petri net},
  doi={10.1109/ACCESS.2019.2954451},
  ISSN={2169-3536},
  month={},}
@ARTICLE{10636140,
  author={Pirzado, Farman Ali and Ahmed, Awais and Mendoza-Urdiales, Román Alejandro and Terashima-Marin, Hugo},
  journal={IEEE Access}, 
  title={Navigating the Pitfalls: Analyzing the Behavior of LLMs as a Coding Assistant for Computer Science Students—A Systematic Review of the Literature}, 
  year={2024},
  volume={12},
  number={},
  pages={112605-112625},
  abstract={In recent years, large language models (LLMs) have been employed significantly in different domains of computing education. Nevertheless, these models have been focused on essential adherence to their integration as coding assistants in computing education. However, attention has been switched to thoroughly examining and analyzing LLM behavior, particularly in computing education for programming tasks such as code generation, code explanation, and programming error message explanation. Therefore, it becomes imperative to understand their behavior to examine potential pitfalls. This article addresses this gap systematically and details how different LLM-based coding chatbots, such as ChatGPT, Codex, Copilot, and others, react to various coding inputs within computing education. To achieve this objective, we collected and analyzed articles from 2021 to 2024, and 72 studies were thoroughly examined. These objectives include investigating the existing limitations and challenges associated with utilizing these systems for coding tasks, assessing their responses to prompts containing coding syntax, examining the impact of their output on student learning, and evaluating their performance as debugging tools. The findings of this review highlight that it is premature to incorporate these systems into computing education due to their limitations that may limit their effectiveness as comprehensive coding assistants for computer science students. These limitations include issues with handling prompts containing code snippets, potential negative impacts on student learning, limited debugging capabilities, and other ineffectiveness. The finding also reports multiple research directions that can be considered in future research related to LLMs in computing education.},
  keywords={Codes;Encoding;Chatbots;Programming profession;Task analysis;Surveys;Large language models;Computer science education;Error analysis;Large language models;computing education;code generation;code explanation;programming error messages explanation},
  doi={10.1109/ACCESS.2024.3443621},
  ISSN={2169-3536},
  month={},}
@INPROCEEDINGS{7739687,
  author={Xie, Benjamin and Abelson, Hal},
  booktitle={2016 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Skill progression in MIT app inventor}, 
  year={2016},
  volume={},
  number={},
  pages={213-217},
  abstract={This paper contributes to the growing body of research that attempts to measure online, informal learning. We analyze skill progression in MIT App Inventor, an informal online learning environment with over 5 million users and 15.9 million projects/apps created. Our objective is to understand how people learn computational thinking concepts while creating mobile applications with App Inventor. In particular, we are interested in the relationship between the progression of skill in using App Inventor functionality and in using computational thinking concepts as learners create more apps. We model skill progression along two dimensions: breadth and depth of capability. Given a sample of 10,571 random users who have each created at least 20 apps, we analyze the relationship between demonstrating domain-specific skills by using App Inventor functionality and generalizable skills by using computational thinking concepts. Our findings indicate that domain-specific and generalizable skills progress similarly; there is a common pattern of expanding breadth of capability by using new skills over the first 10 projects, then developing depth of capability by using previously introduced skills to build more sophisticated apps.},
  keywords={Trajectory;Computational modeling;Programming;Atmospheric measurements;Particle measurements;Vocabulary;Analytical models},
  doi={10.1109/VLHCC.2016.7739687},
  ISSN={1943-6106},
  month={Sep.},}
@INPROCEEDINGS{7296518,
  author={Erete, Sheena and Pinkard, Nichole and Martin, Caitlin K. and Sandherr, Jim},
  booktitle={2015 Research in Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Employing narratives to trigger interest in computational activities with inner-city girls}, 
  year={2015},
  volume={},
  number={},
  pages={1-1},
  abstract={There has been a well-documented and persistent drop in the number of women in computer science and engineering courses [1]. Young peoples' decisions about participation often start early and have been linked to particular experiences [2]. For some young people, these experiences are less than encouraging. In the US, high school computer science courses are overwhelmingly male dominated [3]. Schools serving minority students and those from lower socioeconomic backgrounds often struggle to even offer such classes [4]. Even when opportunities exist, many girls and underrepresented populations face barriers such as negative stereotypes and dearth of role models and community [5]. The Digital Youth Divas program was created to address these issues through intentional design. The program is developed to trigger situational interest [6] in girls through a combination of community, project-based instruction, on- and offline learning spaces, and narrative stories. Triggered situational interest is critical as an opening to move on to subsequent phases that are more independent of environmental factors. Understanding potential effective triggers for girls, minorities, and youth from lower socioeconomic backgrounds is critical to engaging such populations in STEM learning. (1) Community: Middle school girls interested in fashion and design are recruited, especially from areas that have traditionally been underserved. Adult mentors who are not engineers, but share cultural connections with the girls and have gone through curriculum and pedagogical training, attend to specific practices of encouraging, helping to troubleshoot, and developing community. (2) Project-based instruction: The program combines principles of fashion, design, and dance with the power and possibilities of electronic circuits and programming to develop interactive e-fashion projects and virtual programmed choreographies. Scaffolded challenges work through stages of design and computational thinking, including paper prototyping, implementation, feedback, and revision. (3) Integrated on and offline learning spaces: Girls work through projects in a shared physical space using supplied materials. An online system, iRemix, is the mechanism for independent work and leveling up. (4) Interactive narrative stories: Narratives can provide context that helps relate abstract concepts to real-world issues [7], increase motivation and positively contribute to girls' science identity [8], and provide focus for design by communicating tasks, specifically when readers can identify with the stories [9]. Compelling stories conveyed in text and multimedia (video, audio, images) is employed to engage middle school girls in activities involving computational thinking. The stories center on a group of middle school girls involved in the Digital Youth Divas program, and combines aspects of contemporary young adult fiction (mystery, social and emotional issues) with content, topics, and project work from the e-textiles and programming curricula. The interactive narratives unfold through the iRemix platform: girls launch narratives and at intervals are prompted to engage in project-based work. The girls solve challenges by submitting work online, and receive and respond to messages from characters. Our early exploratory research suggested that narratives prompted discussions of identity, and contributed to participant interest in the program content and motivation to engage in project work.},
  keywords={Physics;Statistics;Sociology;Computational modeling;User experience;Training;Textiles},
  doi={10.1109/RESPECT.2015.7296518},
  ISSN={},
  month={Aug},}
@INPROCEEDINGS{4402039,
  author={Karci, Ali},
  booktitle={2007 IEEE International Conference on Computational Cybernetics}, 
  title={Human Being Properties of Saplings Growing up Algorithm}, 
  year={2007},
  volume={},
  number={},
  pages={227-232},
  abstract={The human culture and cognition are consequence of the thinking capability of human, and thinking is a social activity. People have similar idea and opinion interacts, and interactions force people to have similar idea and interaction take place locally. However, its effect is global. In this study, we try to determine define the computational thinking for saplings growing up algorithm (SGuA) which belongs to evolutionary algorithms. Thinking capability can be defined based on the process interaction for similar solutions. SGuA has four operators: mating, branching, vaccinating and surviving. We determined the computational thinking capability for each operator. Finally, we determined computational thinking capability of SGuA.},
  keywords={Humans;Cognition;Scattering;Evolutionary computation;Cultural differences;Computer networks;Artificial neural networks;Supervised learning;Unsupervised learning;Semisupervised learning},
  doi={10.1109/ICCCYB.2007.4402039},
  ISSN={},
  month={Oct},}
@INPROCEEDINGS{9962737,
  author={Barman, Arko and Beckman, Leslie S. and Chebaro, Yasmin},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={Interdisciplinary Computing Education: An Introductory Programming and Data Science Course for Postdoctoral Researchers in the Biosciences}, 
  year={2022},
  volume={},
  number={},
  pages={1-8},
  abstract={This Innovative-Practice Full Paper presents the curriculum development of an introductory course in programming and data science for postdoctoral researchers (PDRs) in the biosciences. The use of computing software has become ubiquitous and a working knowledge of data science has become increasingly essential for researchers in all domains. However, curriculum development focusing on imparting foundational programming skills and fundamentals of data science for researchers in domains other than computing has been scarce. Thus, there is an unmet need for curriculum development involving computational thinking, programming, and the fundamentals of data science for this audience. Recognizing these growing needs and demands of researchers to learn programming and data science that can then be applied to their area of research or practice, we developed an introductory course in programming and data science for PDRs in biology and medicine. The primary goal of the course was to develop computational thinking skills in PDRs who hail from backgrounds that have traditionally not focused on inculcating computational thinking. This course covered the fundamental concepts of programming using either Python or R - languages that researchers outside the computing community use in numerous ways including the statistical analysis of large datasets that are becoming increasingly common in biomedical research. Further, PDRs enrolled in the course were introduced to some of the broad categories of problems in data science - exploratory data analysis, classification, regression, and clustering - along with relevant algorithms and how they can be applied to real-world datasets in their respective domains using packages or libraries in Python or R. We also report the feedback from the enrolled PDRs, lessons learned, and recommendations for instructors interested in designing similar curricula. Our course focusing on computing and data science education for postdoctoral scholars from a non-computing background demonstrates a promising model for incorporating computing education in other areas of study that do not traditionally have a focus on computing education as well as in continuing education.},
  keywords={Statistical analysis;Education;Curriculum development;Focusing;Data science;Software;Libraries;computer science education;interdisciplinary computing education;data science education;continuing education},
  doi={10.1109/FIE56618.2022.9962737},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{5508834,
  author={Hurson, Ali R. and Sedigh, Sahra},
  booktitle={2010 IEEE Transforming Engineering Education: Creating Interdisciplinary Skills for Complex Global Environments}, 
  title={Transforming the Instruction of Introductory Computing to Engineering Students}, 
  year={2010},
  volume={},
  number={},
  pages={1-19},
  abstract={Computer science as a discipline encompasses the study and creation of computational techniques for problem-solving. Unfortunately, much of the benefit of these techniques to engineering students is lost in translation, in part due to the disconnect between introductory computing courses and the disciplinary courses that introduce problems that could benefit from computational techniques. A considerable body of literature has documented the ineffectiveness of traditional programming courses in transferring usable knowledge to students, specifically where problem-solving skills and computational thinking are concerned. This paper describes a transformative change to the instruction of introductory computing to engineering students, in the context of a single non-major course. In the proposed architecture, a core lecture is supplemented with plug-in domain-specific modules and problems that are presented in domain-specific recitation/laboratory sections. The focus of the lecture component of the course is to introduce the core concepts and skills required for computational thinking, including algorithms and software engineering techniques. The recitation/laboratory component encourages and guides the application of these skills to introductory problems in engineering. The objective is to shift the emphasis from the minutia of the syntax of textual programming languages to computational thinking.},
  keywords={Computer aided instruction;Engineering students;Problem-solving;Laboratories;Computer science;Computer architecture;Software algorithms;Software engineering;Application software;Computer languages},
  doi={10.1109/TEE.2010.5508834},
  ISSN={},
  month={April},}
@INPROCEEDINGS{6826147,
  author={Giordano, Daniela and Maiorana, Francesco},
  booktitle={2014 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Use of cutting edge educational tools for an initial programming course}, 
  year={2014},
  volume={},
  number={},
  pages={556-563},
  abstract={Programming skills are an important component of an engineering curriculum, not only because they enable the customization of software tools to be used in the profession, but also (and perhaps more crucially) because of the "computational thinking" and problem solving capabilities that are ideally developed by young students who learn to program for the first time. The necessity to expand the computing curriculum across a wider range of schools and university courses for students who are not majoring in Computer Science (CS) ) it is well-documented in literature [1], as is the difficulty of teaching 21st century skills (www.p21.org. This work presents an educational approach to teaching initial programming based on the development of fundamental and transversal skills and computer science skills, including creative and computational thinking as well as problem solving and critical thinking. The approach is based on cutting-edge educational tools, namely the visual programming frameworks Scratch, AppInventor, BYOB, and the well-known C/C++ language; curriculum material is drawn from CSPrinciples pilot courses, CS unplugged, school level preparation material for the International Olympiad in Informatics, and are complemented by supplementary information. The pedagogical approaches used in the course are based on constructivist learning theory, experiential learning and guided inquiry. This paper presents a year-long teaching experience in a 10th/13th grade high school with 14 to 16-year-old students. Ways to extend the experience to a university course are also presented. An initial analysis of the course results, both qualitative (based on two student surveys) and quantitative (based on formal written examinations) is presented and discussed. Results are encouraging, showing how visual programming languages help students to improve their problems solving skills and reasoning practices. Exposing the younger generation to computational concepts is fundamental in order to improve the mastering of these concepts and increase the success rate in university studies.},
  keywords={Educational institutions;Programming profession;Visualization;Problem-solving;Pedagogy;Curriculum design;Initial programming course;Visual programming frameworks},
  doi={10.1109/EDUCON.2014.6826147},
  ISSN={2165-9567},
  month={April},}
@INPROCEEDINGS{7044089,
  author={Al-Jarrah, Ahmad and Pontelli, Enrico},
  booktitle={2014 IEEE Frontiers in Education Conference (FIE) Proceedings}, 
  title={"AliCe-ViLlagE" Alice as a Collaborative Virtual Learning Environment}, 
  year={2014},
  volume={},
  number={},
  pages={1-9},
  abstract={There is a growing literature demonstrating the importance of collaboration and teamwork in the process of learning computational thinking and the foundational aspects of computer science. While Collaborative Virtual Environments are becoming widespread in the software development professional domain and in various areas of advanced learning, their use in the introductory stages of learning computing is still very limited. On the other hand, in recent years, there has been a blooming of attractive programming environments specifically designed to expose young students (e.g., middle school age) to computational thinking. Alice is a very popular introductory programming environment, focused on programming through animations and story-telling. This paper introduces a novel extension of the Alice framework that enables interaction and collaboration among students in the development of programs. In particular, the new version of Alice described in this paper provides support for virtual pair programming. The modified version of Alice allows two students to remotely share a virtual world, and interact in its construction; the system supports roles assignments, to allow teachers to control activities and contributions of the two students in the creation of a programming project.},
  keywords={Programming profession;Navigation;Educational institutions;Three-dimensional displays;Teamwork},
  doi={10.1109/FIE.2014.7044089},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{7760705,
  author={Jung, Inho and Choi, Jaewoong and Kim, In-Jung and Choi, Changbeom},
  booktitle={2016 15th International Conference on Information Technology Based Higher Education and Training (ITHET)}, 
  title={Interactive learning environment for practical programming language based on web service}, 
  year={2016},
  volume={},
  number={},
  pages={1-7},
  abstract={As the needs of education of programming language increase, the importance of the learning environment has been emphasized. Based on the social trends, various web services for the education of programming which improves the computational thinking of a student. Among the web services, block-based programming languages are well known as an effective educational tool for a primary student though a freshman in the university. These tools are proven to be useful tools since the tools provide same programming environment to the students and the teachers anytime and anywhere. However, the environments may be insufficient for learning practical programming languages, such as C/C++ and Java, because they are not the block-based programming languages. This paper introduces a block-based learning environment for C programming language using web services. The environment fills the gap between building computational thinking and learning the syntax of the programming language. The programming environment provides the equivalent environment to teachers and the students during the programming hands-on.},
  keywords={Computer languages;Programming profession;Visualization;Computers;Programming environments;Education;web-based instruction;visual programming language;problem-based learning;self-motivated learning},
  doi={10.1109/ITHET.2016.7760705},
  ISSN={},
  month={Sep.},}
@INPROCEEDINGS{8511891,
  author={Li, Yue and Pan, Yiqing and Liu, Wensheng and Zhang, Xingming},
  booktitle={2018 IEEE 16th Intl Conf on Dependable, Autonomic and Secure Computing, 16th Intl Conf on Pervasive Intelligence and Computing, 4th Intl Conf on Big Data Intelligence and Computing and Cyber Science and Technology Congress(DASC/PiCom/DataCom/CyberSciTech)}, 
  title={An Automated Evaluation System for App Inventor Apps}, 
  year={2018},
  volume={},
  number={},
  pages={230-235},
  abstract={More and more K-12 schools are paying attention to the training of Computational Thinking. A considerable amount of K-12 use blocked-based visual programming platforms such as Scratch, App Inventor, Alice and etc. MIT App Inventor is one of the more popular mobile application visualization programming platforms. Visual programming is based on the 'You see what you get' doctrine. Its simplicity and ease of use coheres with K-12 teaching principles and allows students to access to computational thinking without the burden of learning Coding grammar. Recently App Inventor is gaining momentum and traction in China at a very high speed and is expected to grow even faster in the future. Teachers using App Inventor for teaching face the problem of having to go through a very high number of App Inventor apps without any way to catalogue them. The 2017 Google App Inventor Competition alone received over 1300 entries. This article aims to devise an automated scoring method based on TF-IDF and clustering to help teachers evaluate App Inventor apps, thus greatly reducing their workload. Evaluating the method gives us an 75.42% with space for further improvement in the future.},
  keywords={Clustering algorithms;Programming;Visualization;Mobile applications;Creativity;Education;App Inventor;automated evaluation system},
  doi={10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00048},
  ISSN={},
  month={Aug},}
@INPROCEEDINGS{9481012,
  author={Oprea, Marin and Mocanu, Mariana},
  booktitle={2021 23rd International Conference on Control Systems and Computer Science (CSCS)}, 
  title={Bluetooth Communications in Educational Robotics}, 
  year={2021},
  volume={},
  number={},
  pages={408-413},
  abstract={In a world in a continuous and rapid change, it is absolutely necessary for our students to keep up with the rapid progress of new technologies: Internet of Things (IoT), Robotics, Artificial Intelligence (AI), Virtual Reality (VR), Augmented Reality (AR) etc. The rapid evolution and diversification of these emerging technologies has recently led to their introduction into the educational offer of the school curriculum for the gymnasium. The discipline of Information and Communication Technology (ICT) has already been implemented, a discipline that involves both the formation of skills to use new technologies and the formation of computational thinking necessary for the efficient and intelligent use of these technologies. In order to teach and learn Physics from a STEM (Science, Technology, Engineering and Mathematics) educational perspective, we initiated optional school courses of IoT, Robotics and AI (approached through Machine Learning). These courses stimulate, at the level of students, computational thinking, creativity and innovation and lead, from an interdisciplinary perspective, to the development of emerging specializations such as Mathematics-Physics-Automation, Mathematics-Physics-Electronics, Mathematics-Physics-Informatics-Robotics etc. In this paper we presented a method of approaching, in the school educational space, the study of wireless communication technologies between smart devices, through an Educational Robotics project. The project consisted of creating a wireless controlled mobile robotic platform (robot car) via a Bluetooth module connected to an Arduino Uno board.},
  keywords={Bluetooth;Robot kinematics;Microwave communication;Microwave amplifiers;Information and communication technology;Internet of Things;Smart devices;wireless communication;Arduino Uno;Bluetooth module HC-05;joystick;motor driver L298N},
  doi={10.1109/CSCS52396.2021.00073},
  ISSN={2379-0482},
  month={May},}
@INPROCEEDINGS{9273818,
  author={Ke, Fengfeng and Moon, Jewoong and Sokolikj, Zlatko},
  booktitle={2020 IEEE Frontiers in Education Conference (FIE)}, 
  title={Tracking Representational Flexibility Development through Speech Data Mining}, 
  year={2020},
  volume={},
  number={},
  pages={1-4},
  abstract={In this work-in-progress research we exploited and investigated a virtual reality (VR) based, flexibility learning environment (FLE) in which adolescents with autism use, customize, and design an assortment of simulation games that represent and exemplify the application of forces and Newton's laws of motion. The simulation/game modeling and making tasks acted as the primers of practicing and assessing representational flexibility in solving the engineering design problems with computational thinking. The participants' participation behaviors and verbal utterances during the intervention sessions have been archived via screen and webcam recordings. The current study findings indicated that two approaches of speech or text data mining, multi-label classification and similarity index, can act as the in-situ performance assessment methods to evaluate the representational flexibility development for engineering design and computational thinking of a heterogeneous learner group.},
  keywords={Task analysis;Autism;Solid modeling;Data models;Data mining;Training;Indexes;educational data mining;representational flexibility;learning by making;virtual reality},
  doi={10.1109/FIE44824.2020.9273818},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{10343283,
  author={Walker, Justice T. and Barany, Amanda and Acquah, Alex and Reza, Sayed Mohsin and Barrera, Alan and Del Rio Guzman, Karen and Johnson, Michael A.},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Coding Like a Data Miner: A Sandbox Approach to Computing-Based Data Science for High School Student Learning}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  abstract={Personal health tracking devices and internet-based digital platforms with the capacity to collect, aggregate, and store data at massive scales are examples of tools that have broadened priorities in computing to include data science. In response, there has been growing attention in research and practice emphasizing pre-college groups. This is partly because of the growing recognition-reflected in initiatives like CS4ALL, Code.org, Bootstrap: Data Science, Exploring Computer Science-that learning experiences before college are consequential in sustaining a robust pipeline of computer scientists and engineers. Despite these inroads, there is justifiable concern that existing efforts might not fully support learner development in the necessary conceptual, epistemological, and heuristic styles needed to productively parse and understand “big data.” This is because computing-based curricula that include data science often involve data curated by others (rather than learners directly), which results in simulated versions of practice instead of engagement that is realistically discursive and messy. This is further complicated by the persistent shortage of K-12 computer science teachers in general and even fewer who can design and implement curricula that support authentic engagement with data science. To address these issues, we leverage culturally relevant and constructionist perspectives in a sandbox (i.e., open-ended) science where tools like Scratch and electronic textiles (E-textiles) have had success expanding possibilities in computing to also include activities where learners can engage broadly along varied pursuits-and encounter challenges that spur computational thinking and problem-solving. The literature suggests that learning activities framed in this way encourage knowledge construction, practice literacies, and seriously impact learner attitudes, interest, and perceptions of growth in the field. This latter set of self-concept measures represents a few of many related key predictors of long-term field participation and persistence. In this work-in-progress scholarship of discovery research, we co-develop, with youth and educators, “Coding Like a Data Miner” (CLDM)-a sandbox approach to computing-based data science wherein learners access a social media platform, Twitter, to mine, analyze, and understand quantitative and qualitative data sources. In this preliminary work, we assess affordances in co-developing a curriculum that leverages sandbox approaches to data science. Ultimately (and what will be presented in our final submission), we aim to study learning outcomes when high school students' access, analyze and make sense of “big data” sets of their own. We collaborated with high school teachers in a West Texas/Paso Del Norte region where computer science educators are exceptionally scarce and where there is an urgent and persistent need to support underrepresented learner access to burgeoning areas of computing. Using mixed-methodological approaches (e.g., quantitative analysis of learner pre- and post-survey responses along with qualitative assessments of semi-structured interview data), we address the following research questions: (1) What affordances exist using co-design approaches to develop sandbox data science for pre-college learners? (2) Which computational concepts do students learn when carrying out CLDM activities, (3) Which computational practices do high school students enact when mining, processing, and analyzing big data sets in CLDM? (4) How do learner knowledge and perceptions about data science shift after participating in CLDM? We use contemporary perspectives in computing education, constructionism, and equity to discuss how open-ended sandbox approaches to computing-based data science support learner computational thinking, practice literacies, and field perceptions.},
  keywords={Computer science;Smart textiles;Social networking (online);Statistical analysis;Affordances;Soft sensors;Scholarships;Computer Science Education;Data Science Education;Constructionism;Curriculum Design;Computer Science Learning},
  doi={10.1109/FIE58773.2023.10343283},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{8985981,
  author={Lee, Sarah and Ivy, Jessica and Stamps, Andrew},
  booktitle={2019 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Providing Equitable Access to Computing Education in Mississippi}, 
  year={2019},
  volume={},
  number={},
  pages={1-4},
  abstract={To maintain competitiveness as a nation, the United States must broaden participation in computing education and career pathways. Integrating computational thinking and computer science in K-12 classrooms is becoming increasingly essential to the development of a responsible and innovative workforce. Further, with increased recognition of the need for computing competency, workforce development programs that target the emerging workforce that may not be on a college pathway and those citizens who want to retool for the digital economy are also essential. This study examines work by researchers and practitioners in Mississippi to engage all public school students and the workforce with computational thinking, computer science concepts, and cybersecurity, providing pathways for learning that make computing education accessible for all citizens. The state of Mississippi has the lowest median wage in the nation, and one of the lowest rates of STEM employment. With half of the public school children identified as African American, and half of them female, there is much opportunity for broadening participation in computing. Assessments from a K-12 teacher professional development programs will be discussed, in addition to outcomes from one year of a workforce development program.},
  keywords={computer science;K-12;workforce development},
  doi={10.1109/RESPECT46404.2019.8985981},
  ISSN={},
  month={Feb},}
@INPROCEEDINGS{10578608,
  author={Choi, Wan-Chong and Lam, Chan-Tong and Mendes, António José},
  booktitle={2024 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={How Various Educational Features Influence Programming Performance in Primary School Education}, 
  year={2024},
  volume={},
  number={},
  pages={1-8},
  abstract={In the digital age, programming education has become increasingly important, even in primary schools. However, introducing programming at such an early stage presents unique challenges, given the need for students to grasp mathematical concepts, abstract thinking, and the intricacies of programming syntax. Educational Data Mining (EDM) offers a potential contribution by predicting learning performance, facilitating the optimization of the learning processes, and providing real-time guidance. A notable gap in the current literature about EDM in programming education is its predominant emphasis on the university level. Our research objectives were to identify features influencing primary school students' programming capabilities. A more comprehensive dataset was introduced, incorporating psychometric data and highlighting features such as learning motivation and attitude, computational thinking data, and other potentially influential variables, which set our study apart from previous studies. We found that the strongest predictor was academic performance in Information Technology, followed by psychometric data on students' learning attitudes and motivation. Computational thinking also emerged as a significant feature in predicting programming performance. It's worth highlighting that involvement in extra-curricular activities, like Olympic Mathematics training, showed a significant association, underscoring the importance of mathematical logic and reasoning in programming. This is further bolstered by the evident correlation with academic performance in Mathematics, confirming its pivotal role in shaping programming abilities. Interestingly, the correlation of academic performance in Chinese is also significant, indicating that the language medium of instruction can notably influence success.},
  keywords={Training;Performance evaluation;Computers;Correlation;Syntactics;Mathematics;Cognition;Computer science;Programming Education;Educational Data Mining;Educational features correlation;Performance prediction;Features selection},
  doi={10.1109/EDUCON60312.2024.10578608},
  ISSN={2165-9567},
  month={May},}
@INPROCEEDINGS{7943068,
  author={Ng, Peter H. F.},
  booktitle={2017 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Introducing the practices for adopting the constructivist teaching in game engineering}, 
  year={2017},
  volume={},
  number={},
  pages={1636-1643},
  abstract={In this paper, we are going to present our solid experience in applying constructivism to teach computational thinking and game engineering. Fifty undergraduate students have created nine game based learning applications for a special school in two semesters. This special school caters to children who are severely mentally handicapped, and their day-to-day training consists of repetitive tasks that are designed to help them to express their needs to a certain degree. We will present (1) our timeline and detailed setting of our course which is different from traditional lecture setting. (2) the way to provide situated learning which helps our students to develop better, larger and more linked information. (3) the ways to provide constructivist teaching which helps our students to construct the knowledge of computational thinking and game engineering, so that it can improve their products and have a better interaction with the real world.},
  keywords={Games;Computational modeling;Prototypes;Mathematical model;Training;Computer science;Constructivist teaching;game engineering},
  doi={10.1109/EDUCON.2017.7943068},
  ISSN={2165-9567},
  month={April},}
@INPROCEEDINGS{7250352,
  author={Jun, Zhao Yan and Ying, Zhang Chun},
  booktitle={2015 10th International Conference on Computer Science & Education (ICCSE)}, 
  title={Construction of virtual-actual fusion experiment platform: Exploration of University Computer reform in local college}, 
  year={2015},
  volume={},
  number={},
  pages={789-793},
  abstract={Based on present situation analysis of University Computer Foundation Course facing reformation in local college, for the purpose of training computational thinking ability, this paper integrates virtual experiment system into practice teaching link and constructs Virtual-Actual fusion experiment platform. It consists of four parts, such as virtual experiment platform, practical platform, network platform and comprehensive test platform. The platform provides much and enough practice training in the class and outclass for the students, trains computational thinking ability, meanwhile, improves application skills and innovative quality.},
  keywords={Computers;Training;Software;Encoding;Hardware;Computational modeling;University Computer;Virtual-Actual fusion;experiment platform;reform},
  doi={10.1109/ICCSE.2015.7250352},
  ISSN={},
  month={July},}
@INPROCEEDINGS{8190558,
  author={Schmeelk, Suzanna and Fontaine, Fred and Ackerman, Larisa and Aho, Alfred},
  booktitle={2017 IEEE Frontiers in Education Conference (FIE)}, 
  title={Learning Java in a New York City immigrant engineer retraining program}, 
  year={2017},
  volume={},
  number={},
  pages={1-7},
  abstract={This research explores the psychology of programming and the pedagogical environment in a certificate granting urban immigrant engineer retraining program in New York City. The program is aimed at teaching under-represented immigrant engineer students to learn how to program in the Java programming language. The programming concepts and the fostered pedagogical environment were implemented in three-hour evening sessions over 15 weeks in which the students were encouraged to develop programming communities while working on computational thinking concept strands. The research findings that we report are threefold. First, we report on how we fostered building programming concepts into the curriculum into a set of activities specifically designed for an immigrant engineer retraining program with students ranging in backgrounds. We found that at that the program curriculum must be flexible enough for student learning regardless of the fact that a student may miss sessions. Second, we report on how an effective pedagogical environment, which fosters student-centered learning, was promoted so that the students could construct their own meanings of the programming concepts. Third, we report on implementation strategies unique to a retraining program, such as specific environmental constraints as well as how sessions were partitioned into components that fostered computational thinking while learning Java. Our findings provide unique insights into intervention constraints for an urban retraining program which can be used to guide and inform further retraining computer learning program research.},
  keywords={Java;Education;Programming profession;Urban areas},
  doi={10.1109/FIE.2017.8190558},
  ISSN={},
  month={Oct},}