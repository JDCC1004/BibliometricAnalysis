@INPROCEEDINGS{8659237,
  author={Joshi, Alark and Jain, Amit},
  booktitle={2018 IEEE Frontiers in Education Conference (FIE)}, 
  title={Reflecting on the Impact of a Course on Inclusive Strategies for Teaching Computer Science}, 
  year={2018},
  volume={},
  number={},
  pages={1-9},
  abstract={As the number of teachers teaching computer science grows, it is increasingly important to be mindful of the training they receive with respect to broadening participation in computer science. Through our program, we have trained over 50 teachers in the greater Boise Metropolitan region, who have in turn taught over 1400 students computing concepts through courses such as Exploring CS, AP CS Principles, and AP CS A. These courses have an excellent curriculum that contains a mix of computational thinking concepts such as a focus on creativity, abstraction, coding, as well as increasing awareness about the cyber footprint of the students with respect to security and privacy. While the curriculum is excellent, we need to be more mindful about incorporating pedagogical strategies that promote inclusive teaching especially for women and minorities who are traditionally underrepresented in computer science.To address the challenges associated with teaching a truly inclusive course, we developed a new course titled “Inclusive Strategies for Computer Science Education” that draws attention to the strategies that have been studied over the years in STEM and CS education literature. We present the contents of the course along with a post-hoc qualitative survey on the applicability and practicality of the material discussed in the course.},
  keywords={Training;Computer science education;Programming;Industries;STEM},
  doi={10.1109/FIE.2018.8659237},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{10139678,
  author={Sinha, Neelu and Evans, Ryan F. and Carbo, Mackenzie},
  booktitle={2023 32nd Wireless and Optical Communications Conference (WOCC)}, 
  title={Hands-on Active Learning Approach to Teach Artificial Intelligence/Machine Learning to Elementary and Middle School Students}, 
  year={2023},
  volume={},
  number={},
  pages={1-6},
  abstract={The last decade has seen a surge in expanding access to Computer Science (CS) education, especially for K-12, with many states even stipulating student learning standards in CS and Computational Thinking (CT). Our 21st century K-12 students are no longer just computer users, but are now required to be computationally literate creators with proficient skills both in the concepts and practices of CS and CT. At the same time, technology continues to pervade our lives and expand at a relentless pace and all aspects of our lives are now embedded in technology surrounded by Artificial Intelligence (AI). AI in the form of Machine Learning (ML) is a key technology in a diversity of applications, where we use sensors to meaningfully perceive the world around us, analyze and organize the perceived data, and autonomously use that data to make predictions and decisions. In higher education, AI/ML courses proliferate, with many institutions now conferring degrees and certifications in these. To an extent, some high schools (grades 9–12) have started introducing these concepts in a technology class, or a robotics club, or as an after-school activity. As for middle (grades 6–8) and elementary school (grades K-5), there are very few examples of such instruction. In this paper, we present a complete framework for elementary and middle school teachers to help them prepare and incorporate AI/ML lessons in their classrooms using hands-on active learning strategies. We want to empower these teachers to impart improved learning to their students, which in turn will prepare their students to become effective thinkers, problem solvers, communicators, and gain necessary skills for high-skilled and high-demand jobs. We describe a detailed AI/ML lesson plan based on standards and framework, AI4K12 big ideas, art and science of curriculum design, active learning, and culturally responsive and inclusive pedagogy. Then we discuss our experiences in teaching the same to $\boldsymbol{4}^{\mathbf{th}}$ grade students in an elementary school.},
  keywords={Wireless communication;Wireless sensor networks;Education;Learning (artificial intelligence);Machine learning;Optical fiber communication;Surges;Hands-on active learning curriculum framework;Artificial Intelligence;Machine Learning;lesson plans - grades elementary school;grades 6–8 middle school;AI4K12 big ideas;culturally responsive and inclusive pedagogy;CS Hub;New Jersey Department of Education Student Learning Standards},
  doi={10.1109/WOCC58016.2023.10139678},
  ISSN={2379-1276},
  month={May},}
@INPROCEEDINGS{8001845,
  author={Pappas, Ilias O. and Papavlasopoulou, Sofia and Giannakos, Michail N. and Sampson, Demetrios G.},
  booktitle={2017 IEEE 17th International Conference on Advanced Learning Technologies (ICALT)}, 
  title={An Exploratory Study on the Influence of Cognitive and Affective Characteristics in Programming-Based Making Activities}, 
  year={2017},
  volume={},
  number={},
  pages={507-511},
  abstract={Programming-based making activities are at the core of teaching strategies to engage young students in learning programming for developing computational thinking skills. Despite the initial evidences of enthusiastic participation in such activities, more systematic studies are needed to better understand drivers of students' intentions to participate in programming-based making activities. In this paper, we present an exploratory study which aim to address this issue by examining the interrelations among cognitive (i.e., perceived usefulness, perceived ease of use) and affective (i.e., enjoyment) characteristics for both boys and girls. To this end, we build on complexity theory and configuration theory, present a conceptual model, and employ fuzzy-set Qualitative Comparative Analysis (fsQCA) on a sample of 105 young students, to identify such interrelations. The findings provide insights on how the examined factors may have a different influence for boys and girls, an outcome that can be used to re-design educational programs targeting maximizing engagement regardless gender.},
  keywords={Programming profession;Conferences;Calibration;Correlation;Education;Complexity theory;programming;making;young students;computer science education;fsQCA},
  doi={10.1109/ICALT.2017.78},
  ISSN={2161-377X},
  month={July},}
@INPROCEEDINGS{7344030,
  author={Byrne, J. R. and Fisher, L. and Tangney, B.},
  booktitle={2015 IEEE Frontiers in Education Conference (FIE)}, 
  title={Empowering teachers to teach CS — Exploring a social constructivist approach for CS CPD, using the Bridge21 model}, 
  year={2015},
  volume={},
  number={},
  pages={1-9},
  abstract={This paper describes current research exploring the adaption of the Bridge21 pedagogical model for the provision of a Computer Science (CS) Continuing Professional Development (CPD) Programme for post-primary/high school teachers in the Republic of Ireland. This paper outlines the design of the programme and explores the delivery of two, week long CS CPD interventions delivered in the authors' home institution over the summer of 2014. The interventions were designed to help teachers develop expertise in areas such as computational thinking, programming and game design, text based programming and hardware configuration. The Bridge21 Learning and Activity Models were used throughout each workshop delivery and teachers were invited to use the same models in their own delivery of CS classroom activities. An Exploratory Case Study approach, using Evaluation Theory, informed data collection, coding and analysis procedures. Teacher reactions towards the Bridge21 CS CPD programme were investigated. Analysis indicate that teacher reaction towards the programme was positive and that teachers intended to use elements of the Bridge21 Learning and Activity model for CS delivery in the classroom.},
  keywords={Conferences;Education;Computational modeling;Media;Programming;Context;Computing and Programming;21st Century Teaching and Learning;Social Constructivist Pedaogy;CPD},
  doi={10.1109/FIE.2015.7344030},
  ISSN={},
  month={Oct},}
@INPROCEEDINGS{8658572,
  author={Lobo de Aguiar Gomes, Ludymila and Reginaldo Hughes Carvalho, José and Lauschner, Tanara and Nakamura, Fabilo G. and de Freitas, Rosiane},
  booktitle={2018 IEEE Frontiers in Education Conference (FIE)}, 
  title={Encouraging Women to Pursue a Computer Science Career in the Context of a Third World Country}, 
  year={2018},
  volume={},
  number={},
  pages={1-5},
  abstract={This innovative practice full paper presents a set of engaging actions aimed to encourage women to pursue a Computer Science career in a city of a third world country (Manaus, Brazil). Despite worldwide efforts to promote gender equality, typically, women account for less than 30% of the workforce in technological areas. In third world countries, the situation is much more unbalanced. Poor educational and economic conditions, allied with a chauvinism culture contaminated by sexism and stereotypes, are strong forces that repel the young girls from IT areas. As a result, the percentage of women in local Computer Science majors is lower than expected. The authors detail a program to involve girls from all school levels in computer science career, which is indeed the adaptation of a national program, combined with indigenous elements. The mentioned adaptation was a key success factor to catch the attention of students and local educators. Some activities that are included in this program are lectures at scientific, technological and gender discussion events, realization of dynamics in schools for the dissemination of computational thinking in children and young students, training students to take part in programming contests and develop knowledge into real computational applications. These actions resulted in highlights achieved in programming contests and prizes obtained through application development, and have provided a more conducive academic environment to discuss issues related to the female gender in science and technology fields. Besides the fundamentals of the program, the authors present the results of the last three initiatives, which happened in conjunction with local events, and the promising opportunities perceived in Computer Science major of a local university.},
  keywords={Engineering profession;Conferences;Programming profession;STEM;gender equality;diversity politics, STEM education;women inclusion and leadership},
  doi={10.1109/FIE.2018.8658572},
  ISSN={2377-634X},
  month={Oct},}
@ARTICLE{10005170,
  author={Peterson, Tina L. and Ferreira, Rodrigo and Vardi, Moshe Y.},
  journal={IEEE Transactions on Technology and Society}, 
  title={Abstracted Power and Responsibility in Computer Science Ethics Education}, 
  year={2023},
  volume={4},
  number={1},
  pages={96-102},
  abstract={As computing becomes more powerful and extends the reach of those who wield it, the imperative grows for computing professionals to make ethical decisions regarding the use of that power. We propose the concept of abstracted power to help computer science students understand how technology may distance them perceptually from consequences of their actions. Specifically, we identify technological intermediation and computational thinking as two factors in computer science that contribute to this distancing. To counter the abstraction of power, we argue for increased emotional engagement in computer science ethics education, to encourage students to feel as well as think regarding the potential impacts of their power on others. We suggest four concrete pedagogical approaches to enable this emotional engagement in computer science ethics curriculum, and we share highlights of student reactions to the material.},
  keywords={Ethics;Computer science education;Writing;Cognition;Codes;Philosophical considerations;Social implications of technology;Curriculum development;Social factors;Power;abstraction;responsibility;social impact;emotional engagement;ethics},
  doi={10.1109/TTS.2022.3233776},
  ISSN={2637-6415},
  month={March},}
@INPROCEEDINGS{6220928,
  author={Izurieta, Clemente and Poole, Geoffrey and Payn, Robert A. and Griffith, Isaac and Nix, Ryan and Helton, Ashley and Bernhardt, Emily and Burgin, Amy J.},
  booktitle={2012 International Conference on Information Science and Applications}, 
  title={Development and Application of a Simulation Environment (NEO) for Integrating Empirical and Computational Investigations of System-Level Complexity}, 
  year={2012},
  volume={},
  number={},
  pages={1-6},
  abstract={Network Exchange Objects (NEO) is a new software framework designed to facilitate development of complex natural or built distributed system models, where the system model is represented as a graph, through which currencies (e.g., coding information) flux. This paper introduces "system-level hypothesis (SLH) testing" as a form of computational thinking that will drive integration of computational and empirical sciences to promote efficient, self- correcting inquiry into the operations and behavior of complex systems. To demonstrate NEO, we examine the problem of maximizing the productivity of a software development organization by measuring growth in the total lines of code (LOC) contributed by developers. We develop a software framework (NEO) that allows rapid creation of model variants representing alternative SLHs. NEO is designed to investigate systems we describe as "complex adaptive hierarchical networks" (CAHNs - complex systems represented as networks that route and store multiple interactive currencies). Models built atop NEO, are organized collections of individual values (model variables) and algorithms (model logic). Modelers systematically combine algorithms to create alternative model formulations at runtime. Thus, NEO is a simulation framework that can be used in any domain of expertise, where systems are represented as interdependent entities that store and flux multiple currencies.},
  keywords={Organizations;Heuristic algorithms;Mathematical model;Complexity theory;Object oriented modeling;Topology;Biological system modeling},
  doi={10.1109/ICISA.2012.6220928},
  ISSN={2162-9048},
  month={May},}
@INPROCEEDINGS{10143930,
  author={Hsu, Ting-Chia and Hsu, Tai-Ping and Lin, Yi-Ting},
  booktitle={2023 International Conference on Artificial Intelligence and Education (ICAIE)}, 
  title={The Artificial Intelligence Learning Anxiety and Self-Efficacy of In-Service Teachers Taking AI Training Courses}, 
  year={2023},
  volume={},
  number={},
  pages={97-101},
  abstract={This research explored the degree of learning self-efficacy of machine learning experience (MLSE) and artificial intelligence learning anxiety (AILA) of elementary and junior high school teachers. The participants were in-service teachers in the technology domain. This research applied the AI2 Robot City, which is a computational thinking board game, to in-service teacher education. The learning content was image classification for AI application. Elementary and junior high school teachers operated the MIT App Inventor(MAI) and Personal Image Classifier(PIC) platform, and trained the model for practicing AI to implement supervised machine learning on the PIC platform. The learners then inserted the model they had trained into the block-based programming environment of MAI. They completed the smart phone app and used the app to recognize the board game cards so as to control the movement of the smart cars on the table map to meet the requirements of the task in the AI2 Robot City board game. In order to understand affective factors such as the self-efficacy and learning anxiety of the elementary and middle school teachers participating in the AI teacher training workshop, the MLSE and AILA scales were administered before and after the classes. A total of 28 samples were collected. The results showed that there was no significant difference between the MLSE of the elementary and junior high school teachers. However, the average AILA degree of the junior high school teachers was significantly higher than that of the elementary school teachers. It was found that AILA was significantly negatively correlated with MLSE. The elementary and junior high school teachers were confident that they could study AI-related courses. However, the AILA of the junior high school teachers was higher than that of the elementary school teachers. Therefore, more teacher training workshops on AI application can be conducted for junior high school teachers to generally improve their familiarity with AI application. Future research can further explore whether teachers will gradually improve their AILA and MLSE with time and as training courses increase.},
  keywords={Training;Maximum likelihood estimation;Conferences;Anxiety disorders;Urban areas;Learning (artificial intelligence);Games;in-service teacher education;artificial intelligence education;learning self-efficacy of machine learning;artificial intelligence learning anxiety},
  doi={10.1109/ICAIE56796.2023.00034},
  ISSN={},
  month={March},}
@INPROCEEDINGS{9155812,
  author={De La Rosa, Matthew and Chen, Yinong},
  booktitle={2019 IEEE 14th International Symposium on Autonomous Decentralized System (ISADS)}, 
  title={A Machine Learning Platform for Multirotor Activity Training and Recognition}, 
  year={2019},
  volume={},
  number={},
  pages={1-8},
  abstract={Machine learning is a new paradigm of problem solving. Teaching machine learning in schools and colleges to prepare the industry's needs becomes imminent, not only in computing majors, but also in all engineering disciplines. This paper develops a new, hands-on approach to teaching machine learning by training a linear classifier and applying that classifier to solve Multirotor Activity Recognition (MAR) problems in an online lab setting. MAR labs leverage cloud computing and data storage technologies to host a versatile environment capable of logging, orchestrating, and visualizing the solution for an MAR problem through a user interface. This work extends Arizona State University's Visual IoT/Robotics Programming Language Environment (VIPLE) as a control platform for multi-rotors used in data collection. VIPLE is a platform developed for teaching computational thinking, visual programming, Internet of Things (IoT) and robotics application development.},
  keywords={Robots;Machine learning;Mars;Training;Activity recognition;Tools;Machine learning;training and recognition;Internet of Things;VIPLE;cloud computing;orchestration;education;classification;multirotor},
  doi={10.1109/ISADS45777.2019.9155812},
  ISSN={2640-7485},
  month={April},}
@INPROCEEDINGS{7760759,
  author={Miller, Gary and Hermans, Felienne and Braun, Robin},
  booktitle={2016 15th International Conference on Information Technology Based Higher Education and Training (ITHET)}, 
  title={Gradual structuring: Evolving the spreadsheet paradigm for expressiveness and learnability}, 
  year={2016},
  volume={},
  number={},
  pages={1-8},
  abstract={Spreadsheets are arguably the most used form of programming and are frequently used in higher education to teach fundamental concepts about computation. Their success has shown that they are simple enough for a huge number of end users to learn and use. This is in contrast to traditional programming languages and the high dropout rate from introductory programming and computer science. However in comparison to traditional programming languages and structured modelling, spreadsheets are not expressive, placing a limit on the levels of computational thinking that can be taught using the spreadsheet paradigm. This limitation is imposed by the lack of programming language features and abstractions in the paradigm. Furthermore, more advanced spreadsheet features (e.g. array formulae, lookup formulae, R1C1 syntax) can be difficult to learn and use. This paper discusses the idea of adding language features to spreadsheets, enabling the gradual structuring of free-form spreadsheets to more structured models. We propose that this concept is termed Gradual Structuring, and is analogous to the programming language concept of gradual typing. In this analogy, spreadsheets take the place of dynamic programming and structured modelling of static programming. In programming languages, gradual typing allows dynamic programming to be mixed with static programming. It is our contention that dynamic programming is more learnable while static programming is more expressive and abstract. Gradual typing could be used to mitigate the issues in the teaching of traditional programming. Likewise Gradual Structuring can mitigate the conceptual limits that can be taught using current spreadsheets. The key language feature required to enable Gradual Structuring is the ability to logically group cells together so that a single formula can be applied to the grouped cells. This concept, termed cell grouping diminishes and can even eliminate the need for the ubiquitous and error-prone use of copy-pasted in spreadsheets. Moreover, it makes the structure present in spreadsheet models explicit. Cell grouping requires a cascade of other new languages features. Namely a more expressive referencing style, which in turned requires enabling labels to be moved to the row and column headers, and the hierarchical structuring of these headers. Respectively these language features are termed enhanced referencing and semantic axes. The ongoing research focusses on the usability and learnability of these language features. Spreadsheet applications exist that contain aspects of the features mentioned. However these applications do not enable Gradual Structuring and have taken a mainly technical, not human behavioural, approach to evolving the spreadsheet.},
  keywords={Programming profession;Computer languages;Dynamic programming;Electronic mail;Education;Semantics},
  doi={10.1109/ITHET.2016.7760759},
  ISSN={},
  month={Sep.},}
@INPROCEEDINGS{8102343,
  author={Mufeti, Tulimevava K. and Sverdlik, William},
  booktitle={2017 IST-Africa Week Conference (IST-Africa)}, 
  title={Introducing computer programming in secondary schools: A case study of NAMTOSS}, 
  year={2017},
  volume={},
  number={},
  pages={1-8},
  abstract={Most countries in the Southern Africa Development Community (SADC) have adopted national development plans that recognize ICT as the main driver for economic development. For ICT to effectively contribute to the national development agenda however, there is a need to ensure that citizens are ICT literate. As a result, a number of countries have developed Subject Policy Guidelines aimed at introducing Computer Studies at Secondary School level. While most of these guidelines are carefully crafted, actual implementation in secondary schools has proved troublesome; having under-maintained or non-existent ICT infrastructures along with inadequately trained teachers as major obstacles. Subsequently, most African student's first exposure to computer programming occurs in the first year of university education, thus entering the Computer Science major without any prior hands-on experience. The Namibian Technology Outreach to Secondary Schools (NAMTOSS) initiative is a pilot program started by the School of Computing (SoC) at the University of Namibia (UNAM) in March 2016. NAMTOSS is a partnership between secondary school teachers, learners and the staff members of the School of Computing at UNAM that is designed to introduce computer programming skills and computational thinking at secondary school level. NAMTOSS attempts to address the structural and systemic issues raised by previously unsuccessful outreach efforts conducted in Southern Africa. In this paper, we enumerate the successes and failures of our initial outreach efforts and suggest several enhancements to our program that we feel will lead to its success.},
  keywords={Programming profession;Economics;Training;Africa;Technology education;secondary education;outreach;Namibia;Africa;computing;programming;ICT},
  doi={10.23919/ISTAFRICA.2017.8102343},
  ISSN={},
  month={May},}
@INPROCEEDINGS{9964176,
  author={Noordin, N. H. and Mok, RenHao and Mohamad, I. H.},
  booktitle={8th International Conference on Mechatronics Engineering (ICOM 2022)}, 
  title={UMP STEM Bot as educational kit for robotics and computer programming}, 
  year={2022},
  volume={2022},
  number={},
  pages={1-8},
  abstract={We present UMP STEM Bot, an open-source robotic platform, for educational use that covers a wide spectrum of black-box and white-box learning objectives. The building structure of UMP STEM Bot and its learning outcomes are described. The educational kit is scalable to a more advance application as it is built based on the open-source technology. The UMP STEM Bot is a viable low-cost robotic manipulator platform alternative for introductory courses such as basics of robotics, computational thinking, and programming, as well as for advance courses at the university level such as intelligent robotics.},
  keywords={},
  doi={10.1049/icp.2022.2256},
  ISSN={},
  month={Aug},}
@INPROCEEDINGS{9962584,
  author={Cheng, Qingwan and Tao, Angela and Chen, Huangliang and Samary, Maira Marques},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={Design an Assessment for an Introductory Computer Science Course: A Systematic Literature Review}, 
  year={2022},
  volume={},
  number={},
  pages={1-8},
  abstract={This Research Full Paper presents a literature review on introductory CS assessments. As Computer Science (CS) becomes increasingly popular in the world of big data, more college students are taking introductory CS courses to follow the trend. However, students have different levels of exposure to CS when they start CS in college, varying from no experience to years of coding experience. This disparity in the amount of exposure can pose many problems. In the same intro-level class, some students may think they do not learn anything new, while others believe the professor goes through concepts so fast that they cannot follow the pace. CS professors may also feel confused about how to control the pace and content of introductory courses. Therefore, CS departments need an assessment to measure students’ CS knowledge and then assign them to the appropriate CS introductory courses. Though a vast number of research papers discuss CS introductory courses, few of them focus on developing and validating assessments that evaluate students’ background knowledge (i.e., concept inventory). This paper aims to conduct a systematic literature review to gain an overview of the most important introductory CS contents that need to be assessed, the methods to evaluate students’ understanding of introductory CS concepts, and some existing assessments/concept inventories. By reviewing relevant papers over the last 15 years, we selected 48 papers that are related to assessments and corresponding introductory courses. We collected assessment information and made tables of contents, question types, programming languages, and origins to analyze data. We found that iterations, conditionals, and variables are the most popular assessment contents. Multiple-Choice and Code Writing questions, which are more popular than Code Explaining questions, are the preferred ways of assessing students’ knowledge. Scratch is commonly used as a CS0 assessment language, while Python, Java, C, and Pseudo-codes are employed in CS1 assessments. FCS1, SCS1, and BDSI are existing assessments/concept inventories for CS1 or CS2, but there is not yet a validated assessment or concept inventory that encompasses introductory concepts of CS0 (computational thinking), CS1 (fundamentals), and CS2 (data structure). Designing a comprehensive CS0/CS1/CS2 assessment by using the information collected from our systematic literature review would help students choose the right course and benefit educators and researchers for general use.},
  keywords={Computer science;Java;Systematics;Codes;Bibliographies;Buildings;Market research;computer science education;introductory CS courses;assessment;concept inventory;systematic literature review},
  doi={10.1109/FIE56618.2022.9962584},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{9794193,
  author={Groher, Iris and Vierhauser, Michael and Sabitzer, Barbara and Kuka, Lisa and Hofer, Alexander and Muster, David},
  booktitle={2022 IEEE/ACM 44th International Conference on Software Engineering: Software Engineering Education and Training (ICSE-SEET)}, 
  title={Exploring Diversity in Introductory Programming Classes: An Experience Report}, 
  year={2022},
  volume={},
  number={},
  pages={102-112},
  abstract={Digitization is becoming part of almost everyone’s life, ranging from smartphones and tablets, smart devices automatically collecting information, to tools and scripting languages that are widely available and easy to use. This has recently been reflected in various university curricula, where courses such as computational thinking, and basic programming classes are now included in a broader range of (non-computer-science) programs. However, these programs often face challenges in such courses due to their diverse student body, with students often lacking profound digital competencies and technical background. While gender diversity aspects have been broadly studied in the past, other diversity dimensions such as ethnicity, age, or educational background have largely been neglected thus far. In this paper, we report on our experiences in teaching an introductory programming course to first-year Business Informatics bachelor students. After undergoing fundamental changes in our teaching concepts and the provided learning material, we explore what diversity factors play an important role when teaching programming to non-computer science students, and how diversity is perceived by lecturers and tutors. Our analysis confirms that a collaborative teaching concept positively supports female students and students with language barriers.},
  keywords={Training;Education;Collaboration;Smart devices;Interviews;Informatics;Programming profession;Introductory Programming;Diversity Dimensions},
  doi={10.1145/3510456.3514155},
  ISSN={},
  month={May},}
@INPROCEEDINGS{7140058,
  author={Sanneman, Lindsay and Ajilo, Deborah and DelPreto, Joseph and Mehta, Ankur and Miyashita, Shuhei and Poorheravi, Negin Abdolrahim and Ramirez, Cami and Sehyuk Yim and Kim, Sangbae and Rus, Daniela},
  booktitle={2015 IEEE International Conference on Robotics and Automation (ICRA)}, 
  title={A Distributed Robot Garden System}, 
  year={2015},
  volume={},
  number={},
  pages={6120-6127},
  abstract={Computational thinking is an important part of a modern education, and robotics provides a powerful tool for teaching programming logic in an interactive and engaging way. The robot garden presented in this paper is a distributed multi-robot system capable of running autonomously or under user control from a simple graphical interface. Over 100 origami flowers are actuated with LEDs and printed pouch motors, and are deployed in a modular array around additional swimming and crawling folded robots. The garden integrates state-of-the-art rapid design and fabrication technologies with distributed systems software techniques to create a scalable swarm in which robots can be controlled individually or as a group. The garden can be used to teach basic algorithmic concepts through its distributed algorithm demonstration capabilities and can teach programming concepts through its education-oriented user interface.},
  keywords={Robots;Light emitting diodes;Graphical user interfaces;Insects;Fabrication;Cranes;Bluetooth},
  doi={10.1109/ICRA.2015.7140058},
  ISSN={1050-4729},
  month={May},}
@INPROCEEDINGS{7017829,
  author={Cápay, Martin},
  booktitle={2014 International Conference on Interactive Collaborative Learning (ICL)}, 
  title={Algorithmic thinking observation: How students of applied informatics break the mystery of black box applications}, 
  year={2014},
  volume={},
  number={},
  pages={535-540},
  abstract={The Black Box is a system with the internal organization and behavior about which the observer has no information. However, it is possible to impact the whole system via its inputs and observe its reactions via its outputs. The paper is concerned with the implementation of “black box” type of activities to teach computational thinking. The main idea is to give the students the puzzles and ask them to “play” with the inputs and observe the outputs enough to determine the internal mechanisms or principles that produce particular outputs from given inputs. First year students were asked to define a formula or describe a principle, based on which the input transforms itself into the output. There were four different types of answers: the student could be able (1) to state a formal proof, (2) to state a verbal proof, (3) to state a basic concept of algorithms, or (4) not to state any type of correct solution. We found out that a lot of the students were not able to think about the concept of the application functioning and were not able to create any formal description of algorithms.},
  keywords={Programming;Informatics;Educational institutions;Mathematics;Problem-solving;teaching methods;black box;scientific approach;algorithm;reverse engineering},
  doi={10.1109/ICL.2014.7017829},
  ISSN={},
  month={Dec},}
@INPROCEEDINGS{7943092,
  author={Knobelsdorf, Maria and Otto, Jonathan and Sprenger, Sandra},
  booktitle={2017 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={A computing education approach for geography students in context of GIS}, 
  year={2017},
  volume={},
  number={},
  pages={1790-1796},
  abstract={We present an educational design for an undergraduate university course meant to engage Geography majors with computing and computational thinking. For that matter, we use the pedagogical principle of contextualization, relating computing topics to the discipline of Geography using climate change modeling with geographic information systems as a context. Following a design-based research approach, we first present considerations and arguments that form the basis for our educational design, and then discuss initial results of implementing and teaching a corresponding course to Geography Education majors.},
  keywords={Handheld computers;Engineering education;Geographic information systems;Geography;Computing Education;non-CS students;contextualization;design based research;Geographic Information System},
  doi={10.1109/EDUCON.2017.7943092},
  ISSN={2165-9567},
  month={April},}
@INPROCEEDINGS{9766768,
  author={Zarkadoula, Kallirroi and Xenos, Michalis},
  booktitle={2022 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Evaluating Usability and Educational Effectiveness of a Serious Game for Programmers Using Alternative Interfaces and Types of Activities}, 
  year={2022},
  volume={},
  number={},
  pages={644-651},
  abstract={This paper presents a serious game that has been developed for programmers aiming to analyze and examine the effectiveness and the perceived usability of two different game interfaces. This game presents a drag-and-drop interface and a classical typing interface and towards this approach, four different versions of the same game were developed. Each version of the game focuses on either creating a part of code or debugging (finding the errors in the code provided). The game enables the players to advance their programming skills and computational thinking by engaging them in problem-solving activities during the gameplay. This paper provides insight and focuses on the evaluation of different interfaces in a serious game that is developed for programmers and targets fundamental programming concepts.},
  keywords={Codes;Conferences;Games;Debugging;Serious games;Problem-solving;Usability;serious games;programming;game-based learning;human-computer interaction},
  doi={10.1109/EDUCON52537.2022.9766768},
  ISSN={2165-9567},
  month={March},}
@ARTICLE{9969519,
  author={Paredes-Velasco, Maximiliano and Lozano-Osorio, Isaac and Pérez-Marín, Diana and Santacruz-Valencia, Liliana Patricia},
  journal={IEEE Transactions on Learning Technologies}, 
  title={A Case Study on Learning Visual Programming With TutoApp for Composition of Tutorials: An Approach for Learning by Teaching}, 
  year={2024},
  volume={17},
  number={},
  pages={498-513},
  abstract={Teaching programming is a topic that has generated a high level of interest among researchers in recent decades. In particular, multiple approaches to teaching visual programming have been explored, from the use of tools such as Scratch, robots, unplugged programming, or activities for the development of computational thinking. Despite the wide range of resources used, students generally tend to perform poorly academically and perceive learning visual programming as a complex and demotivating task. In this article, the TutoApp system is proposed together with a new methodology based on “Learning by Teaching,” where students create tutorials on their mobile devices to explain programming concepts to their peers. The hypothesis of this article is that the use of this tool improves learning outcomes and the level of student satisfaction. An experiment with a pre–posttest design has been carried out with 57 university students in an introductory programming course, 30 belonging to a control group (did not use TutoApp) and 27 belonging to the experimental group (used TutoApp). The findings indicate that the creation of tutorials with TutoApp significantly improved students' academic performance over those who did not use it, specifically in learning the loops and conditional control structures. However, it was observed that anxiety increased in all students while learning visual programming. The results of this study open the door to the validation of the use of systems and methodologies for creating tutorials for teaching visual programming to university students.},
  keywords={Education;Visualization;Programming profession;Writing;Tutorials;Anxiety disorders;Task analysis;Emotions;learning by teaching;mobile devices;visual programming;written composition},
  doi={10.1109/TLT.2022.3226122},
  ISSN={1939-1382},
  month={},}
@INPROCEEDINGS{6974114,
  author={Liu, Dongning and Teng, Shaohua and Zhu, Haibin and Tang, Yong},
  booktitle={2014 IEEE International Conference on Systems, Man, and Cybernetics (SMC)}, 
  title={Minimal role playing logic in Role-Based Collaboration}, 
  year={2014},
  volume={},
  number={},
  pages={1420-1425},
  abstract={Role-Based Collaboration (RBC) is a computational thinking methodology where roles provide an underlying mechanism to facilitate abstraction, classification, separation of concerns, dynamics, and interactions. From a meta theoretical perspective, the specification of groups, roles and agents is a critical element of RBC. In consideration of the relationships and hierarchies faced by groups, roles and agents, we propose a minimal role playing logic system (MRPL) through substructural logic, which is polynomial in complexity, in support of RBC. From MRPL and RPLs extending from it, there are three levels of application, i.e., the global level governing how people organize agents to form a group; the concatenative level for role assignment with respect to logic and algebra, and the operational level governing properties, relations and structures that should appear in collaborative system design. From MRPL to RPLs, one can extend it to suit other appropriate applications.},
  keywords={Conferences;Cybernetics;Role-Based Collaboration (RBC);group;role;agent;role playing logic},
  doi={10.1109/SMC.2014.6974114},
  ISSN={1062-922X},
  month={Oct},}
@INPROCEEDINGS{10342942,
  author={Choi, Wan-Chong and Lei, Huey and Mendes, António José},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Motivating the New Generation: Using Flipped Classroom and ARCS Model to Enhance Block-Based Programming Education}, 
  year={2023},
  volume={},
  number={},
  pages={1-8},
  abstract={This Research-to-Practice full paper presents an explorative study investigating the effects of flipped learning on the learning motivation of primary school students enrolled in a block-based programming course. Technology development has increased the importance of information technology-related competencies for the new generation. Programming skills are essential in various industries nowadays. Thus, programming education has become necessary to cultivate students' relevant abilities to meet the rapid pace of development. Programming learning encourages students to think logically and systematically, solve problems effectively, and develop computational thinking skills. However, learning programming is challenging for many students for different reasons, such as its inherent complexity, inadequate study methods, and pedagogical approaches unsuited to promote programming learning. Traditional teaching methods are often impersonalized and only suitable for some learning styles present in class. Moreover, the challenges encountered by the students as novice programmers are attributed to their low learning motivation. To learn to program, students must comprehend different syntactic conventions, complex instructions, and logical operators and actively engage in practical learning activities, often facing difficulties. This may reduce their learning motivation leading to failure and dropout. To accommodate different learning styles and increase students' motivation, this study employed the ARCS motivation model to design various innovative activities in a flipped classroom setting to increase students' motivation and improve teachers' teaching effectiveness. The study utilized a pretest-posttest method with two groups of grade five students to compare the effectiveness of teaching and learning between the flipped and traditional classroom students. The study's findings revealed that the flipped classroom experimental group showed significantly higher learning motivation than the students in the control group. Moreover, it was found that different flipped classroom activities, including the use of gamification, flipped videos, self-study, self-questioning, self-assessment, split programming tasks, group cooperation, and demonstration activities, had a positive influence on various sub-dimensions of the ARCS model, such as attention, relevance, confidence, and satisfaction.},
  keywords={Industries;Electronic learning;Education;Syntactics;Complexity theory;Online services;Task analysis;Flipped classroom;Computer science;Motivation;ARCS Model;Block-based programming education},
  doi={10.1109/FIE58773.2023.10342942},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{9453965,
  author={Plaza, Pedro and Castro, Manuel and Sancristobal, Elio and García-Loro, Félix and Gil, Rosario and Menacho, Antonio and Blázquez, Manuel and Quintana, Blanca and Martin, Sergio and Mur, Francisco and Macho, Alejandro and Baizán, Pablo and Carrasco, Ramón and Carro, German and López-Rey, África and Pérez, Clara and Meier, Russ and Tovar, Edmundo},
  booktitle={2021 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Build your own robot}, 
  year={2021},
  volume={},
  number={},
  pages={543-551},
  abstract={This Research to Practice Full Paper presents a pilot test framed in educational robotics where parents and child work together during the same session. In recent years, an educational movement has emerged that is related to the introduction of computational thinking, programming, and robotics in schools. Educational robotics is presented as one more resource that serves as a support in the different curricular subjects and facilitates the emergence of skills such as socialization, creative spirit and personal initiative, allowing participants to find answers to the problems that may arise in their reality. It is for this reason that a pilot test was carried out where we included the participants' parents in a session. To do this we used the Crumble controller, a platform that is programmed using block programming language. This platform also allows making electrical connections in an amazingly simple way. From the mechanical point of view, we use materials that can be easily machined, both by children and by inexperienced people. At the end of the experience, the assistants completed the assembly of their own robot. The article contains a study of the state of the art of using educational robotics. It also includes an analysis of the different tools mostly used in educational robotics. Also, throughout the article the learning methodology used, the different educational resources and the results obtained from the experience are described.},
  keywords={Robotic assembly;Computer languages;Conferences;Tools;Collaborative work;Teamwork;Engineering education;Collaboration;Education;Educational Robotics;Learning technology},
  doi={10.1109/EDUCON46332.2021.9453965},
  ISSN={2165-9567},
  month={April},}
@INPROCEEDINGS{9018582,
  author={Pancieri, Jussara and Siqueira, Fábio Ventorim and Oliveira, Márcia Gonçalves de and Santos, Marcelo Cardoso Lima dos},
  booktitle={2019 Latin American Robotics Symposium (LARS), 2019 Brazilian Symposium on Robotics (SBR) and 2019 Workshop on Robotics in Education (WRE)}, 
  title={Robotics in the Resocialization of Youngsters and Teenagers in Socio-Educational Measures}, 
  year={2019},
  volume={},
  number={},
  pages={429-434},
  abstract={This paper presents a proposal and an experience report of an educational robotics course integrated to the process of resocialization of youngsters and teenagers in socio-educational measures. This proposal adopts a teaching approach oriented to the development of comprehension, analysis, logical reasoning, creativity and collaboration skills in order to develop in these young people real world problemsolving skills. The main challenge of this proposal is to favor the assimilation of the contents and the development of robotics practice outside the classroom, since, in accommodation, no course material is accessible from paper and pencil to robotics practice instruments. Thus, the main differential of this work is literally working the computational thinking in spaces of deprivation of liberty in order to develop ideas for problem solving tasks. The results of this developed experience point to excellent opportunities for resocialization and professional orientation of young people in socio-educational measures through the teaching of robotics.},
  keywords={Robots;Education;Electronic components;Proposals;Programming profession;Problem-solving;resocialization, educational robotics, youngsters and teenagers in socio-educational measures},
  doi={10.1109/LARS-SBR-WRE48964.2019.00082},
  ISSN={2643-685X},
  month={Oct},}
@INPROCEEDINGS{9973573,
  author={Jeong, Hyun and Payton, Jamie and Julien, Christine and Castelli, Darla},
  booktitle={2022 IEEE 19th International Conference on Mobile Ad Hoc and Smart Systems (MASS)}, 
  title={Integrating Computer Science and Physical Education in Elementary Schools with Data Science Learning Modules Using Wearable Microcontrollers}, 
  year={2022},
  volume={},
  number={},
  pages={710-715},
  abstract={With limited time in the school day to meet required state-level objectives across subjects, it is challenging to meet the need to address declining physical activity levels and to incorporate additional computer science instruction in elementary schools. Project moveSMART uses a web-based platform to integrate opportunities for physical education with computer science and computational thinking (CS/CT) learning activities. Fourth grade students who underwent a single-day intervention experienced a significant improvement in their interest in coding and their perceptions of coders. This paper presents a series of three new lessons in the fifth grade moveSMART curriculum that allow students to create and improve a physical activity monitor. We employ a project-based learning approach to expose students to data analysis and machine learning in the framework of classification and pattern recognition.},
  keywords={Computer science;Microcontrollers;Wearable computers;Education;Machine learning;Data science;Encoding;integrative curriculum;gamification;elementary school;physical activity;pervasive computing;BBC micro;bit},
  doi={10.1109/MASS56207.2022.00105},
  ISSN={2155-6814},
  month={Oct},}
@INPROCEEDINGS{9028486,
  author={Oomori, Yasumasa and Tsukamoto, Hidekuni and Nagumo, Hideo and Takemura, Yasuhiro and Iida, Kouki and Monden, Akito and Matsumoto, Ken-ichi},
  booktitle={2019 IEEE Frontiers in Education Conference (FIE)}, 
  title={Algorithmic Expressions for Assessing Algorithmic Thinking Ability of Elementary School Children}, 
  year={2019},
  volume={},
  number={},
  pages={1-8},
  abstract={This Research to Practice Full Paper presents the development of the algorithmic expressions for the assessment tools for assessing algorithmic thinking ability of elementary school children. In Japan, elementary school children will be required to learn computer programming as an interdisciplinary element appearing throughout the curriculum in 2020. The purpose of this programming education is to nurture Computational Thinking (CT) for elementary school children in Japan. However, almost no discussion has been conducted in Japan on how to measure the level of CT an elementary school child has acquired. Since the definition of CT is not very firm, it is not easy to measure the levels of CT. Therefore, several organizations have issued operational definitions of CT. Among the concepts of CT in those operational definitions, Algorithmic Thinking was chosen as a representative of CT, and the assessment tools for evaluating Algorithmic Thinking ability have been developed in this research. The assessment tool was conducted in the experimental Computer Science Unplugged classes and in the control classes in two elementary schools in Japan. There were in total 152 children in the classes, and all of them were 5th grade children. By answering the questions in the assessment tool, each child got a score between 0 and 15. The scores were statistically analyzed.},
  keywords={Programming profession;Tools;Education;Visualization;Computational modeling;algorithmic thinking;algorithmic expression;assessment;elementary school children},
  doi={10.1109/FIE43999.2019.9028486},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{9962664,
  author={Jain, Garima and Martin, Fred and Feliciano, Bernardo and Hsu, Hsien-Yuan and Fauvel-Campbell, Barbara and Bausch, Gillian and Ni, Lijun and Thomas-Cappello, Elizabeth},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={CS Pathways: A Culturally Responsive Computer Science Curriculum for Middle School}, 
  year={2022},
  volume={},
  number={},
  pages={1-9},
  abstract={In this Research-to-Practice Full Paper, we report on CS Pathways, a middle school computer science (CS) curriculum developed as part of a researcher-practitioner partnership among two public universities and three urban school districts in the Northeast USA. The curriculum serves middle school students to develop apps for social impact. The partnership focuses on bridging the gap between STEM (Science, Technology, Engineering, and Mathematics) and community and gender gap within STEM. The project is based on Culturally Responsive Pedagogy (CRP), which includes the importance of recognizing students’ culture in all facets of learning. The project employs a researcher-practitioner partnership (RPP) model, which recognizes that transformational change can occur in educational ecosystems that connect research, policy, practice, and community work.The project curriculum was collaboratively developed by CS researchers, teacher-practitioners, and school administrators. Middle school students develop their own apps that support socially relevant activities in their communities. Using the RPP process, continuous feedback from researchers, teacher-practitioners, and students shaped the curriculum design. Key feedback was collected via one-on-one meetings with the teacher-practitioners, which bridged the visions and knowledge among different groups of the project partners.The curriculum includes the areas of computing and society, digital tools and collaboration, computing systems, and computational thinking. The curriculum helps students develop a critical consciousness of the role they can play in affecting their communities through computing, and empower them to move beyond simply learning to code [1]. The curriculum strives to demonstrate how to integrate computing across middle school subjects in a culturally-responsive way and spread a powerful message of Computer Science for All. This paper advocates for the need for culturally-responsive computing, describes how it is integrated into teachers’ instruction, and presents the CS Pathways curriculum design.},
  keywords={Computer science;Codes;Face recognition;Ecosystems;Collaboration;Mathematical models;STEM},
  doi={10.1109/FIE56618.2022.9962664},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{8190707,
  author={Bremgartner, Vitor and de Magalhães Netto, J. F. and de Menezes, Crediné Silva},
  booktitle={2017 IEEE Frontiers in Education Conference (FIE)}, 
  title={Conceptual framework of educational resources adaptation for improve collaborative learning in virtual learning environments}, 
  year={2017},
  volume={},
  number={},
  pages={1-9},
  abstract={Frequently, the existing resources in Virtual Learning Environments (VLEs), used in distance education courses and blended, are presented in the same way for all students. This may complicate the effective learning process of each student. In order to solve this problem, one of the original goals of intelligent educational systems is to guide every student to the most appropriate educational contents. So, the approach adopted in this paper is based on a framework called ArCARE (Conceptual Framework of Educational Resources Adaptation in Virtual Learning Environments), which allows adaptation of resources for students in VLEs, allowing the construction of their knowledge, using multi-agent system technology that handles an open learner model ontology. These ArCARE resources are recommendation and adaptation of collaborative activities such as Pedagogical Architectures for the students have a more effective learning of particular course content. Results obtained from some tests in a flexible curriculum course of Computational Thinking show the feasibility of the proposal.},
  keywords={Adaptation models;Collaboration;Collaborative work;Ontologies;Proposals;Data models;Tools;Collaborative Learning;Virtual Learning Environments;Adaptation of Resources;Software Agents;Open Learner Model},
  doi={10.1109/FIE.2017.8190707},
  ISSN={},
  month={Oct},}
@INPROCEEDINGS{9620713,
  author={Fancsali, Cheri and Klevan, Sarah and Mirakhur, Zitsi},
  booktitle={2021 Conference on Research in Equitable and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Making Research Practice Partnerships Work: An Assessment of The Maker Partnership}, 
  year={2021},
  volume={},
  number={},
  pages={1-6},
  abstract={Strong, equitable research practice partnerships (RPPs) center both researcher and practitioner perspectives and priorities. These RPPs facilitate rigorous, relevant research that practitioners can use to improve program implementation. Our project, The Maker Partnership, is an RPP focused on building knowledge about how to help elementary level teachers integrate computer science (CS) and computational thinking (CT) into their regular science classes using maker pedagogy. In this experience report, we use the Henrich et al. framework to assess the Maker Partnership's effectiveness along five dimensions and share practical advice and lessons learned. This paper contributes to the CS and RPP literature by providing insight into how an RPP can address critical problems of practice in computer science education.},
  keywords={Computer science;Shape;Buildings;Education;Tools;Writing;Computer science education;Research Practice Partnership;teacher capacity building;elementary level;CS/CT integration;maker pedagogy},
  doi={10.1109/RESPECT51740.2021.9620713},
  ISSN={},
  month={May},}
@INPROCEEDINGS{10148382,
  author={Duong, Ta Nguyen Binh and Shar, Lwin Khin and Shankararaman, Venky},
  booktitle={2022 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={AP-Coach: formative feedback generation for learning introductory programming concepts}, 
  year={2022},
  volume={},
  number={},
  pages={323-330},
  abstract={In this work, we aim to improve code writing skill in Python-based introductory programming courses for first-year university students. In such courses, students as novice programmers would benefit from personalised and formative feedback to: 1) quickly identify issues in their computational thinking process or coding techniques, and 2) know how to proceed when facing a certain problem. Due to the large number of students, it is impractical for instructors to manually assess all the work of each student to provide tailored feedback. We design and implement Automatic Programming Coach (AP-Coach), a web-based tool for automatically generating formative feedback for exercises on basic programming concepts. AP-Coach combines software engineering techniques (code similarity measures based on abstract syntax trees, and unit testing), and AI techniques (machine translation) in a novel manner to provide relevant feedback. We report promising results for AP-Coach in the following aspects: 1) quantitative evaluation of code similarity computation and machine translation, 2) qualitative evaluation of the perceived quality and usability of auto-generated feedback, and 3) experience of a selected group of computing students using the system.},
  keywords={Codes;Education;Writing;Syntactics;Machine translation;Software measurement;Usability;learning programming;formative feedback;machine translation;code similarity},
  doi={10.1109/TALE54877.2022.00060},
  ISSN={2470-6698},
  month={Dec},}
@INPROCEEDINGS{10585562,
  author={Maxim, Raluca Ionela and Arnedo-Moreno, Joan},
  booktitle={2024 IEEE Gaming, Entertainment, and Media Conference (GEM)}, 
  title={Programming Games as Learning Tools: Using Empathic Design Principles for Engaging Experiences}, 
  year={2024},
  volume={},
  number={},
  pages={1-6},
  abstract={As computational thinking (CT) emerges as a required skill in the modern educational and professional landscape, the use of games for learning programming has gained prominence. However, consideration for the user's needs and experiences is as important as the educational content itself, in order to ensure that the learner has an engaging experience. For this reason, this paper explores the integration of Empathic Design principles into the user experience (UX) evaluation of several popular programming genre games aimed at cultivating CT. The findings indicate a partial positive alignment with these principles, particularly in user-centric design, learning journey, and visual aspects. Learner-players feedback emphasized engaging experiences and visual appeal, while improvement suggestions centered on enhancing interface depth, providing clearer instructions, and addressing challenges for beginners and scalability issues.},
  keywords={Visualization;Scalability;Refining;Focusing;Games;Media;User experience;Empathic Design Principles;Programming game Design;Serious Game Design;User-Centred Design},
  doi={10.1109/GEM61861.2024.10585562},
  ISSN={2766-6530},
  month={June},}
@INPROCEEDINGS{9569421,
  author={Gou, Pingzhang and Han, Yuyue and Zhang, WenXuan},
  booktitle={2021 16th International Conference on Computer Science & Education (ICCSE)}, 
  title={Diversified Teaching Evaluation of Python Programming Based on OBE Concept}, 
  year={2021},
  volume={},
  number={},
  pages={402-406},
  abstract={Python language programming is a general education course for college students, which cultivates students' computational thinking ability and the ability to use computers to solve problems. Teaching design based on OBE concept for different majors, using diversified teaching evaluation methods based on process evaluation. Effectively combine the Python curriculum framework system designed based on the OBE concept with a diversified teaching evaluation system, and use fuzzy clustering to process and analyze evaluation data. It is expected to provide a certain reference for the OBE-based curriculum system and evaluation system.},
  keywords={Computers;Education;Data collection;Time measurement;Educational courses;Continuous improvement;Synchronization;OBE;Python language programming;diversified teaching evaluation;Bloom educational goal classification;fuzzy clustering},
  doi={10.1109/ICCSE51940.2021.9569421},
  ISSN={2473-9464},
  month={Aug},}
@INPROCEEDINGS{10343210,
  author={Ambros, Roland and Dolezal, Dominik and Motschnig, Renate},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Towards Digital Skills for All Pre-service Teachers: Collecting Good Curricular Practices}, 
  year={2023},
  volume={},
  number={},
  pages={01-09},
  abstract={The goal of this research full paper is to provide insight into most recent findings of interviews with faculty members teaching digital skills in an integrated and innovative way embedded into courses on subject didactics of a teacher education program. Pre-studies analyzing students' perspectives regarding the inclusion of digital competences in the teacher education program of a large Central-European university revealed that less than half of the students who were at an advanced stage in their studies felt sufficiently prepared to impart digital competences in their daily teaching. Given the importance of being digitally competent in the modern, digital era, the question arises, how digital competences can be sustainably included in the curriculum of a teacher education program. This paper analyzes interviews with five faculty members successfully teaching digital skills in concert with subject didactics of Geography in order to identify best practices for the integration of digital competences. The first author asked our Interview Partners to provide insight into the content they mediated, the integration of digital competences and tools in their courses, how their teaching could be further improved, and what challenges they encounter. Eventually, we looked for best practices and collected instructors' thoughts on improvements on a curricular level and examples of transferring the good practices to other subjects, such that future students could benefit from a better integration of digital competences. For this paper, we analyzed the data with a mixture of narrative analysis and thematic analysis. Improving the mediating of digital skills and competences in a wider range of subjects at the university level should eventually help students, and ultimately their students, to implement digital know-how such as modern teaching tools into their courses, making teaching more effective and computational thinking as well as related fields of computing more accessible to academic as well as secondary and younger students. The research so far has shown promising results considering examples of tools that can be used on a broad spectrum of subjects and lead to a factor of learned new digital competences if used properly. On the other hand, lecturers also warned about relying too much on technology in specific tasks such as orientation on a map or analyzing statistical data. We conclude that combining existing approaches with new, more modern didactics can be the key to transferring the competencies required for our students' future.},
  keywords={Geography;Digital transformation;Education;Open Educational Resources;Behavioral sciences;Interviews;Task analysis;digital skills;teacher education;pre-service teachers;basic digital education;interviews},
  doi={10.1109/FIE58773.2023.10343210},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{9307023,
  author={Melo, Julio and Fidelis, Melquiades and Alves, Sidney and Freitas, Ulisses and Dantas, Rummenigge},
  booktitle={2020 Latin American Robotics Symposium (LARS), 2020 Brazilian Symposium on Robotics (SBR) and 2020 Workshop on Robotics in Education (WRE)}, 
  title={A comprheensive review of Visual Programming Tools for Arduino}, 
  year={2020},
  volume={},
  number={},
  pages={1-6},
  abstract={This document presents a systematic review of Visual Programming Tools for the Arduino Board. The Arduino board is an embedded platform that focus on enabling an easy way to teach embedded systems, but, due to its success, it ended up being used in different teaching levels, ranging from primary to university. The board was also applied in the teaching of robotics and other contexts since it is relatively cheap, easy to program and its community has produced a considerable amount of free educational material. Even though Arduino is a success it is still maturing in terms of educational purposes, aside the electronic knowledge that needs to be explored, the board is programmed, by default, with c++, which is considered not friendly to Computer Thinking beginners. Trying to solve this problem, many solutions apply Visual Programming, which is proven to make it easy for unexperienced and even children to learn the basis of Computational Thinking, in the educational context with Arduino. Even though there are many solutions applying visual programming for Arduino, there are no systematic review or survey on this subject, meaning that it is hard to identify where are the gaps and which are the problems that are already solved. Therefore, on this paper, it was performed a systematic review on the subject, the method found 372 papers, which 31 were selected for full review. The reviewed solutions where discussed and categorized, we expect that the presented results could be used as guideline for new research in the area and by educators and companies that are looking for visual programming tools for the Arduino board.},
  keywords={Tools;Programming profession;Visualization;Education;Protocols;Visual databases;Systematics;Arduino;Visual Programming Tools;Systematic Review;Survey},
  doi={10.1109/LARS/SBR/WRE51543.2020.9307023},
  ISSN={2643-685X},
  month={Nov},}
@INPROCEEDINGS{9040012,
  author={Kireš, M. and Šveda, D. and Ješková, Z. and Lukáč, S. and Ganajová, M. and Lešková, A. and Csachová, S.},
  booktitle={2019 17th International Conference on Emerging eLearning Technologies and Applications (ICETA)}, 
  title={Key innovation concepts of STEM education driven by IT Academy project}, 
  year={2019},
  volume={},
  number={},
  pages={378-382},
  abstract={The information society places requirements on the profile of graduates, what is unreachable in the inertial education system. We aim for key changes in STEM education at primary and secondary schools through a national wide-impact project IT Academy. Active learning focusing on conceptual understanding and development of selected inquiry skills, together with formative assessment, form our didactic basis for innovation. The development of scientific literacy and computational thinking are also stimulated by changes in the content of science and mathematics curricula. We create a strong link to informatics concepts and practical use of informatics in everyday life, study, work and research. We expect the interest of young people to study computer science and STEM will increase. In this paper, we introduce key concepts of STEM education innovation, with examples of educational activities. The results of the pilot verification are formulated in recommendations to the educational professionals.},
  keywords={Education;Pupils;Mathematics;Technological innovation;Informatics;Computational modeling;Geography},
  doi={10.1109/ICETA48886.2019.9040012},
  ISSN={},
  month={Nov},}
@INPROCEEDINGS{9962686,
  author={Souza, Isabelle M. L. and Andrade, Wilkerson L. and Sampaio, Lívia M. R.},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={A Framework for teaching programming in High School through Educational Robotics}, 
  year={2022},
  volume={},
  number={},
  pages={1-9},
  abstract={This Research-to-Practice Full Paper aims to introduce a methodological framework to foster Computational Thinking (CT) skills by teaching programming with Educational Robotics (ER) in High School. Problem-solving is an essential skill for human development, so it is necessary to introduce actions to improve this skill in High School. It is possible to stimulate problem- solving through computer programming teaching with ER. However, as far as we know, there are no methodologies for teaching programming with ER focusing on CT development in High School that went through scientific validation of the proposal. This study is an Educational Design Research that aims to introduce a methodological framework for teaching programming in High School with ER (named CTProgER) and validate two instances of the framework. It was considered consolidated teaching methodologies with ER, combined with the Anthropological Theory of Didactics and evidence from our ER studies. As a result, we present the CTProgER Framework guideline, two instances of the CTProgER Framework, and these instances’ validation through the Delphi method.},
  keywords={Education;Focusing;Proposals;Problem-solving;Programming profession;Robots;Guidelines},
  doi={10.1109/FIE56618.2022.9962686},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{9794152,
  author={Pulimood, S. Monisha and Leigey, Margaret E. and Bates, Diane C. and Pearson, Kim and Mishra, Supriya},
  booktitle={2022 IEEE/ACM 44th International Conference on Software Engineering: Software Engineering Education and Training (ICSE-SEET)}, 
  title={A Project-Based Collaboration between Software Engineering and Criminology Students : Building Applications to Understand Racial Injustice in the Criminal Justice System}, 
  year={2022},
  volume={},
  number={},
  pages={14-24},
  abstract={Undergraduate software engineering courses typically require students to work on team-based projects that reinforce disciplinary content and soft skills. At the same time, these students, particularly those at liberal arts institutions, are required to take courses that focus on civic issues, including on racial and ethnic inequality. Often, students perceive these courses to be outside their disciplinary areas, and may not comprehend how these topics are applicable to computer science and software engineering. This paper reports on the experience of Pulimood and Leigey as they and their students grappled with issues of racial injustice in the criminal justice system, and drew upon their own disciplinary backgrounds to apply computational thinking and software engineering principles to help the community better understand these issues and advocate for reform. The paper also describes the experience of teaching courses from different disciplines in a collaborative model, working closely with a local community partner to support its work on an identified social issue, and the learning outcomes, as well as the benefits and challenges of this approach. Recommendations and future directions are also discussed.},
  keywords={Training;Computer science;Art;Computational modeling;Collaboration;Software;Software engineering;Interdisciplinary collaboration;undergraduate software engineering;software design and implementation;racial justice;community engaged learning;project-based learning},
  doi={10.1145/3510456.3514151},
  ISSN={},
  month={May},}
@ARTICLE{10562294,
  author={Criollo-C, Santiago and Enrique Cerezo Uzcátegui, José and Guerrero-Arias, Andrea and Anita Yánez, T. and Dwinggo Samala, Agariadne and Rawas, Soha and Luján-Mora, Sergio},
  journal={IEEE Access}, 
  title={Use of Virtual Reality as an Educational Tool: A Comparison Between Engineering Students and Teachers}, 
  year={2024},
  volume={12},
  number={},
  pages={86662-86674},
  abstract={Today, teaching faces several challenges, including students’ difficulty in understanding abstract concepts and lack of motivation. To address these problems, the use of virtual reality (VR) has been explored as an innovative and potentially effective educational tool. However, so far, the effectiveness of VR applications and the perception of their use lack a clear and effective approach to be used to support education. The importance of addressing this problem lies in the need to improve the quality of teaching using emerging technologies. It is for this reason that it is important to find new strategies to improve the effectiveness of teaching using VR. In this context, this research presents the results of the FreeDev application, previously validated with 20 teachers and with 80 engineering students from a private university. FreeDev is a VR application designed to support the teaching of basic programming, it is aimed as an educational tool to provide an immersive experience to students on how to get started in programming and computational thinking. FreeDev has been well accepted, and both teachers and engineering students see it as a tool that can be used to support education. It is hoped that this research will contribute to the advancement of knowledge in the field of education.},
  keywords={Education;Usability;Training data;Programming profession;Games;Visualization;Video games;Learning systems;Authentication;Virtual reality;active learning;VR application;VR developer;authentic learning;active learning},
  doi={10.1109/ACCESS.2024.3416673},
  ISSN={2169-3536},
  month={},}
@INPROCEEDINGS{7344115,
  author={Park, Chan Jung and Hyun, Jung Suk and Heuilan, Jin},
  booktitle={2015 IEEE Frontiers in Education Conference (FIE)}, 
  title={Effects of gender and abstract thinking factors on adolescents' computer program learning}, 
  year={2015},
  volume={},
  number={},
  pages={1-7},
  abstract={Computational thinking ability is important in computer science education. It emphasizes abstraction and automation. For automation, programming has become a key ability in digital society recently. As a result, the increase in the importance of coding education in many countries has brought various educational methods to improve teenagers' programming abilities. Among programming abilities, reading ability is important especially to programming novices. This paper focuses on the effects of gender and abstract thinking abilities of adolescents on understanding computer programs. Also, we examine if there is any difference in teaching between adolescents and college students. In order to achieve our research goals, we surveyed on the abstract thinking level, and then measured program understanding ability for 300 academic high school students who had learned C language. From this research, we found that the abstract thinking affects more complex program understanding positively. Also, we found that the language experience before learning brought the difference in program understanding. However, we could not find statistical differences in program understanding between two genders. From this research, we can provide a new point of view to improve adolescents' programming ability with abstract thinking and gender factors.},
  keywords={Programming profession;Computers;Education;Software metrics;Software;Computer languages;computer science education;computer programming understanding;abstract thinking;gender difference;software metric},
  doi={10.1109/FIE.2015.7344115},
  ISSN={},
  month={Oct},}
@ARTICLE{9094300,
  author={Lathrop, Scott A. and Cahill, Katharine and Gordon, Steven I. and Houchins, Jennifer and Panoff, Robert M. and Weeden, Aaron},
  journal={Computing in Science & Engineering}, 
  title={Preparing a Computationally Literate Workforce}, 
  year={2020},
  volume={22},
  number={4},
  pages={7-16},
  abstract={There is a saying, “Everything changes, but nothing changes.” We are realizing a rapid technological revolution in the development, deployment, and application of computing technologies within every discipline and every sector of society. Yet, our ability to respond to the well-documented need for a large, diverse, computationally literate workforce remains a challenge. We summarize our 35 years of lessons learned for preparing the workforce that can inform efforts to address this challenge. We have pursued a multiprong approach to reach instructors, researchers, professionals, and students on a national scale. Our efforts in scaling up and sustaining activities range from teaching computational thinking through imparting HPC skills. We have been able to scale up these activities through community efforts to share, cooperate, and collaborate. The potential for providing life-long learning to everyone wishing to expand their computational knowledge and skills is greater than any organization can achieve on its own.},
  keywords={Scientific computing;Computational modeling;Computer science education;Program processors;Software tools},
  doi={10.1109/MCSE.2020.2994763},
  ISSN={1558-366X},
  month={July},}
@ARTICLE{10568376,
  author={Santhi, Thulasi M. and Srinivasan, K.},
  journal={IEEE Transactions on Learning Technologies}, 
  title={ChatGPT-Based Learning Platform for Creation of Different Attack Model Signatures and Development of Defense Algorithm for Cyberattack Detection}, 
  year={2024},
  volume={17},
  number={},
  pages={1829-1842},
  abstract={Cloud adoption in industrial sectors, such as process, manufacturing, health care, and finance, is steadily rising, but as it grows, the risk of targeted cyberattacks has increased. Hence, effectively defending against such attacks necessitates skilled cybersecurity professionals. Traditional human-based cyber-physical education is resource intensive and faces challenges in keeping pace with rapidly evolving technologies. This research focuses on the main advantages of incorporating large language models into cyber-physical education. The ChatGPT platform serves as an online tool to educate students on fundamentals, cyberattacks, and defense concepts, fostering the development of a new generation cybersecurity experts. The proposed learning approach adheres to the ChatGPT-assisted learn–apply–create model. Responding to prompts provided by the learners, the learning phase engages in conceptual learning, the applying phase involves mathematical modeling of various cyberattacks, and the creating phase develops MATLAB program to incorporate attacks into sensor measurements for the experiment and entails developing the necessary attack detection approaches. The effectiveness of the detection method developed by ChatGPT is assessed in both the simulation and real-time scenarios using a J-type thermocouple. The impact of the proposed learning platform over traditional learning methods is evaluated through an extensive comparative feedback analysis on the learner's foundational concepts, computational thinking, programming efficacy, and motivation. The study proved that integrating ChatGPT into engineering education enables students to swiftly learn cyber-physical fundamentals, comprehend and model cyberattacks, create new attack signatures, and contribute to developing detection algorithms. Such integration provides the learners with essential industrial skills crucial in modern industries.},
  keywords={Cyberattack;Computer security;Cloud computing;Training;Security;Mathematical models;Task analysis;ChatGPT;cyberattack;cyber-physical education;Industry 4.0 skill;large language models (LLMs)},
  doi={10.1109/TLT.2024.3417252},
  ISSN={1939-1382},
  month={},}
@INPROCEEDINGS{8632815,
  author={Müller, Matthias and Schindler, Christian and Luhana, Kirshan Kumar and Slany, Wolfgang},
  booktitle={2018 IEEE Conference on Open Systems (ICOS)}, 
  title={Enabling Teenagers to Create and Share Apps}, 
  year={2018},
  volume={},
  number={},
  pages={25-30},
  abstract={Visual coding frameworks and block-based languages became an essential resource for computer science education. Applied in different courses and subjects they foster computational thinking, collaboration, and knowledge-sharing. Furthermore, sharing the outcomes promote the development of an open mindset and teaches the principles of open source. In our work, we present Pocket Code, a mobile open source visual coding framework. We describe how this integrated development environment enables young users to program apps in a block-based manner directly on their mobile devices. We discuss how teenagers can share their projects via the app's sharing platform or as an Android application package file. The presented case illustrates how teenagers can collaboratively drive co-creative communities and foster open source and innovation by creating and sharing mobile apps.},
  keywords={Encoding;Visualization;Smart phones;Tools;Programming profession;Internet;Mobile Applications;Open Source Development;FLOSS;Visual Programming;Block Based Programming;Computer Science Education;Catrobat;Pocket Code},
  doi={10.1109/ICOS.2018.8632815},
  ISSN={2473-3660},
  month={Nov},}
@INPROCEEDINGS{9659152,
  author={Li, Bin and He, Yuqing and Li, Wenfeng},
  booktitle={2021 IEEE International Conference on Systems, Man, and Cybernetics (SMC)}, 
  title={Neural-Physical Fusion Computation for Container Terminal Handling Systems by Computational Logistics and Deep Learning}, 
  year={2021},
  volume={},
  number={},
  pages={2828-2833},
  abstract={The emerging information technology and the rising computational thinking make it possible to establish new theoretical methods and engineering practices for planning, scheduling, control and decision-making of complex logistics systems. Consequently, the complex logistics systems oriented neural-physical fusion computation (CLSO-NPFC) is proposed initially to discuss and explore the decision issues of complex logistics systems at all the strategic, tactical and operational levels. By CLSO-NPFC, the container terminal oriented logistics generalized computing mechanization, automation and intelligence are constructed uniformly and tentatively, and the typical deep learning model neural computing architecture (DLM-NCA) in CLSO-NPFC is designed for the prediction of calling liner handling volume that is measured by container units rather than twenty-feet equivalent unit. A typical regional container terminal along the coast of China is selected to implement, execute and evaluate the DLM-NCA, and the DLM-NCA shows the agile, efficient and robust performance for forecasting with the low and stable computation consumption. It demonstrates the feasibility, credibility and practicality of the abstract principles, design paradigms and computing architecture in CLSO-NPFC preliminarily.},
  keywords={Deep learning;Solid modeling;Automation;Processor scheduling;Volume measurement;Computer architecture;Containers},
  doi={10.1109/SMC52423.2021.9659152},
  ISSN={2577-1655},
  month={Oct},}
@INPROCEEDINGS{9274215,
  author={Almujally, Nouf and Joy, Mike},
  booktitle={2020 IEEE Frontiers in Education Conference (FIE)}, 
  title={Design and Evaluation of a Teaching-Related Knowledge Sharing System to Meet the Needs of Computer Science Instructors}, 
  year={2020},
  volume={},
  number={},
  pages={1-9},
  abstract={This full research paper focuses on the design of a Teaching Practices Management System (TPMS) which supports the sharing of teaching practices (TPs) amongst computer science instructors. Many years of valuable TPs can be lost due to academic retirement when no competent knowledge management system is available for recording these TPs. Consequently, novice teachers are currently facing critical challenges when delivering subject knowledge that relates to algorithms, programming and the development of computational thinking skills without the benefit of others' experience. After a study of the relevant literature, it could be seen that far too little attention has been paid to the capturing and sharing of TPs which are not easily expressed or communicated in visual or verbal terms. Thus, we design and then demonstrate a Teaching Practices Management System (TPMS) which supports the capturing of TPs. A quantitative and a qualitative evaluation of users' experiences of employing the system shows that instructors are satisfied with it and are mostly positive about its features. The findings of this study hold considerable promise in relation to developing engaging and effective knowledge sharing systems for use by academic instructors.},
  keywords={Education;Tools;Knowledge management;Programming profession;Measurement;Visualization;Technical requirements;knowledge management system;knowledge sharing;higher education institutions;instructors;teaching practices;design science research},
  doi={10.1109/FIE44824.2020.9274215},
  ISSN={2377-634X},
  month={Oct},}
@ARTICLE{10419197,
  author={Wu, Zengqing and Liu, Huizhong and Xiao, Chuan},
  journal={IEEE Transactions on Education}, 
  title={Utilization of Information Entropy in Training and Evaluation of Students’ Abstraction Performance and Algorithm Efficiency in Programming}, 
  year={2024},
  volume={67},
  number={2},
  pages={266-281},
  abstract={Contribution: This research illuminates information entropy’s efficacy as a pivotal educational tool in programming, enabling the precise quantification of algorithmic complexity and student abstraction levels for solving P problems. This approach can provide students quantitative, comparative insights into the differences between optimal and student implemented solution, and allowing educators to offer targeted feedback, thereby optimizing the learning and abstraction processes in algorithm design through deliberate practice. Background: Abstraction is considered one of the most impor11 tant skills in problem solving. Many studies in programming have shown that higher abstraction capability can significantly simplify problems, reduce program complexity and improve efficiency. However, it is difficult to develop criteria to measure the level of abstraction, and there is still a lack of relevant systematic research. Research Questions: 1) How can students’ abstraction ability in programming be effectively measured? 2) How to develop programming education and training methods based on the measurement of abstraction ability? Methodology: Forty-six grade 10 students participated in the experiment, divided into two groups for programming train23 ing using information-entropy-based assessment and traditional learning methods. Their level of computational thinking, algo25 rithmic efficiency improvements, and test scores were used to measure performance and to analyze the effectiveness of the training methods. Findings: Through empirical research, this article finds that information-entropy-based assessment can reflect the differences in problem solving among students possessing varying capa31 bilities. Information entropy can be crucial for evaluating and improving students’ abstraction performance and algorithm efficiency.},
  keywords={Programming;Programming profession;Training;Complexity theory;Information entropy;Software algorithms;Systematics;Abstraction;complexity;information entropy;programming;software engineering (SE) education},
  doi={10.1109/TE.2024.3354297},
  ISSN={1557-9638},
  month={April},}
@INPROCEEDINGS{10825411,
  author={Perine, Lori A.},
  booktitle={2024 IEEE International Conference on Big Data (BigData)}, 
  title={Historic Black Lives Matter: Recovering Hidden Knowledge in Archives through Interactive Data Visualization}, 
  year={2024},
  volume={},
  number={},
  pages={2496-2505},
  abstract={This paper presents the Historical Black Lives Matter (HBLM) case study, an exploratory application of interactive data visualization to a collection of manumissions documents in the Legacy of Slavery (LoS) project at the Maryland State Archives, with the goal of enhancing discovery and recovering hidden knowledge. The case study extends prior interdisciplinary research on applying computational treatments to LoS collections and contributes to research in Computational Archival Science (CAS), computational thinking, and data visualization to enhance access to archival collections. Three design objectives are addressed: representation of people, user experience, and facilitation of knowledge discovery. The paper is organized to demonstrate a customizable workflow for the process of formulating design based on data visualization principles, implementing designs with open-source tools, and incorporating user evaluation in service to successfully fulfilling the design objectives and related functionality in the final implemented design. Examples of hidden knowledge recovered using the visualizations are presented, providing new insights into Maryland’s antebellum Black population. The data visualization design methods and practices permitted investigation at a more granular level, and enabled communication of a richer narrative. Use of open-source software makes these methods accessible to archivists, information professionals, and researchers, and supports creation of artifacts for research, teaching and learning. Future extensions could incorporate advanced computational techniques to enable map features, network and textual analysis, and dynamic query-based composition of visualizations.},
  keywords={Design methodology;Education;Data visualization;Big Data;Knowledge discovery;User experience;Open source software;Computational Archival Science (CAS);Data Visualization;African American Collections;Sociocultural Context;Recover Hidden Knowledge},
  doi={10.1109/BigData62323.2024.10825411},
  ISSN={2573-2978},
  month={Dec},}
@INPROCEEDINGS{10959988,
  author={Xiong, Feng and Yu, Xinguo and Leong, Hon Wai},
  booktitle={2024 International Conference on Intelligent Education and Intelligent Research (IEIR)}, 
  title={Critical Review of AI-Driven Human Research Intelligence: Integrating 3C Theory of Cognition, Emotion, and Thinking in Human-AI Interaction}, 
  year={2024},
  volume={},
  number={},
  pages={1-6},
  abstract={This paper offers a short summary and critical review of the forthcoming book "AI-Driven Research Intelligence: Integrating 3C Theory from Foundational Abilities to Advanced Research Thinking". The rapid development of artificial intelligence (AI) technology has transformed scientific research, prompting the need for theories on human-AI collaboration. This book introduces the 3C Theory, which integrates AI with human cognition, emotion, and research thinking (critical thinking, creative thinking, and computational thinking). Within the 3C theoretical model, AI not only as a research tool but as an enhancer of human cognitive abilities, emotional regulation, and research thinking. By comparing 3C Theory with existing models, the book highlights its potential to transform research processes and support the design of intelligent Human-AI research systems. Additionally, this paper explores the prospects of intelligent research system design, proposing new avenues for research innovation through interdisciplinary collaboration and Human-AI interaction.},
  keywords={Technological innovation;Reviews;Computational modeling;Education;Collaboration;Transforms;Solids;Cognition;Artificial intelligence;System analysis and design;AI-Driven research;research thinking;3C Theory;human-AI interaction;intelligent research system},
  doi={10.1109/IEIR62538.2024.10959988},
  ISSN={},
  month={Nov},}
@INPROCEEDINGS{10578908,
  author={Possaghi, Isabella and Papavlasopoulou, Sofia},
  booktitle={2024 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Challenges in Digital STEM Education Delivery: A Case Study from the Teachers' Perspective}, 
  year={2024},
  volume={},
  number={},
  pages={1-10},
  abstract={In the last decade, educational reforms introduced technologies and digital tools to a higher degree, serving as powerful catalysts in educational innovation for creating, managing, and delivering content in STEM education with a focus on computational and engineering subjects. However, in the small reality of the classroom, some discrepancies arise between policy objectives and everyday practice. The research community emphasises the importance of providing technology infusions based on educators' pedagogical beliefs as well as needs rooted in the authentic scholarly environment. Considering this perspective when orchestrating in-classroom technology can support educators in their daily experiences and enhance their digital competencies. To contribute to this aim, we propose a case study carried out via interviews with fellow primary and secondary teachers, tackling challenges in STEM (Science, Technology, Engineering, and Mathematics), including Computer Science (CS) and Computational thinking (CT) education delivery. Along with the teachers' perspectives, our study aims to obtain a detailed account of the classroom's internal dynamics as perceived by the teachers. The most prominent findings concern the disparity among educators' proficiency in technology endorsement, impacting the consistency in content delivery, the complexity of the assessment of students' learning process if it is digital-based, and the inclusivity and trustworthiness of online content. Finally, we suggest guidance for a further mindful in-school uptake of technology to support teachers in orchestrating content delivery with educational technologies and enhance their confidence in this aspect.},
  keywords={Computer science;Technological innovation;Catalysts;Educational technology;Complexity theory;Stakeholders;Interviews;Digital Literacy;STEM;Digital Education;Learning;Educational Technology;Teachers},
  doi={10.1109/EDUCON60312.2024.10578908},
  ISSN={2165-9567},
  month={May},}
@INPROCEEDINGS{10850942,
  author={Riztha, Fathima and Wickramarachchi, Ruwan and Asanka, Dinesh and Disssanayke, Mathishi},
  booktitle={2024 6th International Conference on Advancements in Computing (ICAC)}, 
  title={Assessing the Impact of Large Language Models on Problem-Solving Skills of Undergraduates - A Systematic Literature Review}, 
  year={2024},
  volume={},
  number={},
  pages={408-413},
  abstract={The integration of Large Language Models (LLMs) such as GPT-3 and GPT-4 in educational environments is rapidly transforming how undergraduate students approach problem solving tasks. This systematic literature review (SLR) aims to investigate the 32 studies that were published between 2021 and 2024 in order to assess the impact of LLMs on problem solving skills. The review identifies the significant improvements in undergraduates' problem-solving effectiveness, creativity, and computational thinking. It also emphasizes the need for careful implementation of these tools to avoid potential overreliance, which may impact the student's ability to develop independent problem-solving skills. The review identifies the importance of a well-balanced integration of LLMs in education to maximize their benefits while addressing the challenges they present. Recommendations for future research directions are suggested to further explore the long-term impacts of LLMs on the development of problem-solving skills and their applicability across diverse academic environments.},
  keywords={Adaptation models;Large language models;Computational modeling;Education;Chatbots;Problem-solving;Creativity;Systematic literature review;Large Language Models;Problem-solving skills;Undergraduate education},
  doi={10.1109/ICAC64487.2024.10850942},
  ISSN={2837-5424},
  month={Dec},}
@INPROCEEDINGS{9962658,
  author={Kjällander, Susanne and Åkerfeldt, Anna and Mannila, Linda and Heintz, Fredrik},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={Signs of learning in middle school computing education}, 
  year={2022},
  volume={},
  number={},
  pages={1-9},
  abstract={Programming has been part of Swedish elementary school curriculum for six years and the aim of this full paper is to find out how teachers can design programming activities so that students engage and learn. A mix-methods research project with a social semiotic, multimodal theoretical framework – Designs for learning – is used to investigate teaching and learning in a class during three years. The results in this small-scale study indicate that collaboration is a successful didactic design for programming lessons in school. Computational thinking is prevalent and both digital skills (such as coding) and digital competencies (such as understanding the impact of technology in society) are practiced and met in programming lessons merging Science, Technology, Engineering, Arts, and Mathematics.},
  keywords={Art;Merging;Education;Collaboration;Mathematics;Encoding;Semiotics;programming;coding;digital;K12 education;designs for learning;multimodal},
  doi={10.1109/FIE56618.2022.9962658},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{9974671,
  author={Havlaskova, T. and Javorcik, T.},
  booktitle={2022 20th International Conference on Emerging eLearning Technologies and Applications (ICETA)}, 
  title={Future Lower Primary School Teachers Taking an Online Algorithmization and Programming Course and Self-Assessing their Performance}, 
  year={2022},
  volume={},
  number={},
  pages={202-208},
  abstract={Computational thinking, problem-solving and the ability to apply knowledge; these and a plethora of other skills are essential for success in both personal and professional life. In order to be able to develop those skills in their students, the teachers themselves need to possess them. This paper focuses on female future lower primary school teachers who, in the middle of the Covid-19 pandemic, took an online course on algorithmization and programming, having little or no prior knowledge and skills. The completion rate depended not only on the students' motivation and willingness to learn, but mainly on the content and structure of the course, which was completely modified and made into an online course. The results were more than surprising. The students were able to complete the activities included in the course. Moreover, those activities inspired them to create their own activities, which they may be able to use in their future classes.},
  keywords={Training;COVID-19;Electronic learning;Pandemics;Toy manufacturing industry;Tutorials;Problem-solving},
  doi={10.1109/ICETA57911.2022.9974671},
  ISSN={},
  month={Oct},}