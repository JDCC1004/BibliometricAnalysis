@article{LAI2021104287,
title = {Investigating the impact of a flipped programming course using the DT-CDIO approach},
journal = {Computers & Education},
volume = {173},
pages = {104287},
year = {2021},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2021.104287},
url = {https://www.sciencedirect.com/science/article/pii/S0360131521001640},
author = {Chin-Feng Lai and Hua-Xu Zhong and Po-Sheng Chiu},
keywords = {Flipped classroom, Design thinking, Teaching/learning strategies, 21st-century abilities, Computational thinking},
abstract = {Currently, flipped learning requires a framework that will give novices and students the ability to face the complex problems encountered in programming courses. It is necessary to design a design thinking learning framework that addresses independent learning and specific processes that will improve students' 21st-century skills. The existing literature has not implemented flipped programming courses from a design thinking perspective (Cook & Bush, 2018), which would thus be an innovative approach to designing teaching methods and investigating the effects of this framework. The purpose of this study was to develop analyze, observe, reflect, conceive, design, implement, and operate (Crawley et al., 2007) a DT-CDIO model and to investigate the relationship of the flow experience to computational thinking and cognitive load in order to understand the impact of the flow experience on a flipped programming course. The participants in this study comprised 40 pre-service education students (Male = 17; Female = 23). The partial least squares (PLS) method was used for the data analysis to test the model. This study was intended to obtain and evaluate significant differences between the students' flow experience and their computational thinking ability and cognitive load. The results indicated that the DT-CDIO pedagogy filled a long-standing gap related to a lack of reflective pedagogy and design thinking problems. The flow experience negatively impacted creativity and problem solving ability. Meanwhile, intrinsic cognitive load negatively impacted the flow experience. Germane cognitive load positively impacted the flow experience. In particular, the flow experience is a crucial factor that can be used to predict various computational thinking skills in a programming curriculum. More importantly, this study provides important insights into the implications of the DT-CDIO approach and other related factors.}
}
@article{PEREZMARIN2020105849,
title = {Can computational thinking be improved by using a methodology based on metaphors and scratch to teach computer programming to children?},
journal = {Computers in Human Behavior},
volume = {105},
pages = {105849},
year = {2020},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2018.12.027},
url = {https://www.sciencedirect.com/science/article/pii/S0747563218306137},
author = {Diana Pérez-Marín and Raquel Hijón-Neira and Adrián Bacelo and Celeste Pizarro},
keywords = {Computational thinking, Primary education, Programming, Methodology, Metaphor},
abstract = {Computational thinking (CT) is a key skill in the 21st century. However, it is not clear which is the most effective way to acquire and improve CT. Big research efforts are made to determine which pedagogical means should be used. One research trend is based on the idea that teaching programming since Primary Education suffices to improve CT. In our previous work, we proposed and validated a methodology based on metaphors and used of Scratch (MECOPROG) to teach basic programming concepts to children. It is our hypothesis H that by applying MECOPROG, students will develop their CT. To check H, we carried out an experiment with 132 Primary Education Students (9–12 years in age). At the beginning of the experiment, all students were asked to fill in a programming concepts test and two tests to measure their CT. During the sessions, all students were taught according to MECOPROG. Finally, they took the three tests again. A significant increase in the results on all the tests has been measured, supporting the use of metaphors and Scratch to teach computer programming concepts to Primary Education students to develop their CT.}
}
@article{BACELO2023101284,
title = {Characterising algorithmic thinking: A university study of unplugged activities✰},
journal = {Thinking Skills and Creativity},
volume = {48},
pages = {101284},
year = {2023},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2023.101284},
url = {https://www.sciencedirect.com/science/article/pii/S1871187123000548},
author = {Adrián Bacelo and Inés M. Gómez-Chacón},
keywords = {Algorithmic thinking, Theory of mathematical working space, Computational thinking, University teaching, Statistical Implicative Analysis (SIA)},
abstract = {Algorithmic thinking is a type of thinking that occurs in the context of computational thinking. Given its importance in the current educational context, it seems pertinent to deepen into its conceptual and operational understanding for teaching. The exploration of research shows us that there are almost no studies at university level where algorithmic thinking is connected to mathematical thinking, and more importantly, to characterise it and be able to analyse and evaluate it better. The aim of this research is to characterise algorithmic thinking in a university context of the Bachelor's Degree in Mathematics by unplugged tasks, offering a model of analysis through categories that establish connections between mathematical and algorithmic working spaces in three dimensions, semiotic, instrumental and discursive. The results confirm the interaction between these dimensions and their predictive value for better programming performance. The study also adds novel considerations related to the role and interaction of mathematical and computational thinking categories involved in algorithmic thinking.}
}
@article{BORREGO2024101948,
title = {DPGraphJ: A Java package for the implementation of dynamic programming algorithms},
journal = {SoftwareX},
volume = {28},
pages = {101948},
year = {2024},
issn = {2352-7110},
doi = {https://doi.org/10.1016/j.softx.2024.101948},
url = {https://www.sciencedirect.com/science/article/pii/S2352711024003182},
author = {Diana Borrego and Irene Barba and Carmelo {Del Valle} and Miguel Toro},
keywords = {Dynamic programming, AND/OR graphs, Design & implementation, Software quality, Computational thinking},
abstract = {This paper introduces the DPGraphJ package, a collection of reusable Java functions to solve optimisation problems using a dynamic programming algorithm. The latter is based on a recursive schema that follows a top-down approach and uses the memoisation technique. This algorithm is a reusable software component that is generic and efficient. Moreover, it has been developed by paying special attention to good practices in the design of software. For using DPGraphJ, the problem to be solved needs to be modelled as an AND/OR graph. In the DPGraphJ package, we provide 5 academic case studies with detailed comments. We strongly believe that our proposal can be helpful for several kinds of users, such as students, researchers, and practitioners.}
}
@article{KONG2022104562,
title = {Validating a computational thinking concepts test for primary education using item response theory: An analysis of students’ responses},
journal = {Computers & Education},
volume = {187},
pages = {104562},
year = {2022},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2022.104562},
url = {https://www.sciencedirect.com/science/article/pii/S0360131522001336},
author = {Siu-Cheung Kong and Ming Lai},
keywords = {Computational thinking concepts, Item response theory, Primary education, Test, Validation},
abstract = {Although instruments for assessing students' computational thinking (CT) concepts in primary education have been developed, they have rarely been validated in terms of item response theory (IRT). We consider IRT to be a rigorous validation tool and apply it to a CT concepts test for primary education involving 13,670 students. A two-parameter logistic model was chosen over other IRT models, as it indicated an acceptable model fit and item fit. The discrimination parameters indicated that the instrument could effectively distinguish between students with various ability levels. Nominal response modelling in IRT was used to retrieve information from the students' responses, and those with a lower ability level were found to only consider one of the conditions provided, had no understanding of the repetition structure, and might have difficulties in associating a sprite with its corresponding codes. Based on ability estimates, we also found that the students’ ability in terms of CT concepts increased with grades and that boys generally performed slightly better than girls. These results suggest that the instrument can be used to examine the learning achievements of students in terms of CT concepts.}
}
@article{KONG2024105016,
title = {The impact of school support for professional development on teachers' adoption of student-centered pedagogy, students’ cognitive learning and abilities: A three-level analysis},
journal = {Computers & Education},
volume = {215},
pages = {105016},
year = {2024},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2024.105016},
url = {https://www.sciencedirect.com/science/article/pii/S0360131524000307},
author = {Siu-Cheung Kong and Yi-Qing Wang},
keywords = {Cognitive learning, Computational thinking, Multilevel analysis, Student-centered pedagogy, Teacher professional development},
abstract = {Student-centered pedagogy (SCP) is highly considered for its potential to facilitate cognitive learning in Computational Thinking (CT) education. However, there is a noticeable gap in understanding its influence on students' cognitive development from a multilevel perspective. This study delves into cognitive learning theories and aims to bridge the existing gap by introducing a three-level conceptual model to illustrate how the influence of SCP on students' cognitive CT abilities is mediated through the cognitive learning processes. This multilevel approach simultaneously explores SCP within the intricate school environment where factors at the school, teacher, and student levels are closely intertwined. Data was collected from 82 programming teachers and their 2433 students across 43 Hong Kong primary schools. Using multilevel modeling, results indicate that the adoption of SCP is significantly anchored by school support on teacher professional development (TPD), which in turn enhances students’ cognitive learning (i.e., active, interactive, constructive, and reflective learning) in class, further contributing to their enhanced cognitive CT abilities. The findings underscore the nuances of SCP adoption in school scenarios, advocating for strategic approaches to maximize student achievements in CT education. Recommendations for future research are discussed.}
}
@article{ROWE2021106707,
title = {Assessing implicit computational thinking in Zoombinis puzzle gameplay},
journal = {Computers in Human Behavior},
volume = {120},
pages = {106707},
year = {2021},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2021.106707},
url = {https://www.sciencedirect.com/science/article/pii/S0747563221000297},
author = {Elizabeth Rowe and Ma Victoria Almeda and Jodi Asbell-Clarke and Richard Scruggs and Ryan Baker and Erin Bardar and Santiago Gasca},
keywords = {Implicit learning, Computational thinking, Learning games, Classification algorithms},
abstract = {There has been growing interest in assessing computational thinking (CT) across diverse learners beyond the traditional forms of tests and assignments. Learning games offer the potential for innovative, stealth assessments of students' implicit learning from gameplay behaviors. This paper reports on the measurement of implicit CT practices demonstrated by upper elementary- and middle-school students as they play the CT learning game Zoombinis. The process of using the gameplay log data to build valid automated detectors of students' implicit CT practices is discussed. Findings from this study provide implications for analyzing gameplay behaviors at scale, leading to the development of models for the assessment of implicit STEM learning.}
}
@article{KONG2023104707,
title = {Scaling up a teacher development programme for sustainable computational thinking education: TPACK surveys, concept tests and primary school visits},
journal = {Computers & Education},
volume = {194},
pages = {104707},
year = {2023},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2022.104707},
url = {https://www.sciencedirect.com/science/article/pii/S0360131522002780},
author = {Siu-Cheung Kong and Ming Lai and Yugen Li},
keywords = {Computational thinking, Primary schools, Scaling up, School visits, Teacher development},
abstract = {Computational thinking (CT) education in K-12 requires extensive teacher development. This research investigates the effectiveness of a scalable and sustainable teacher development programme in promoting CT in primary education. This report presents two studies. Study 1 reports on the effectiveness of two 12-h courses using Scratch and App Inventor programming environments for CT development of teachers respectively, which involved 245 teachers from 47 primary schools. With teaching practices embedded, the programme, which used the framework of technological pedagogical content knowledge (TPACK), significantly enhanced teachers' content-related knowledge dimensions. The results indicate that the programme helped teachers develop advanced CT concepts such as data structures and procedures. Study 2, using thematic analysis, reports on CT strategies implemented in 47 schools through 94 school visits. The most mentioned strategies were the formation of teaching teams, lesson co-planning, and the integration of CT with subject teaching. The most mentioned challenges were teacher readiness, lesson time, and diversity – learners' abilities, interests, and approaches. Four types of support, including teacher development support, continuous and communal support, teaching materials support, and financial support were identified. The results suggest that a course-based programme with mixed programming environments and embedded teaching experience effectively develops teachers’ capabilities. However, continuous support for teachers in implementing the initiative after completing the programme is important, especially in addressing learner diversity and integrating CT with subject teaching.}
}
@article{SHAHIN2022111107,
title = {How secondary school girls perceive Computational Thinking practices through collaborative programming with the micro:bit},
journal = {Journal of Systems and Software},
volume = {183},
pages = {111107},
year = {2022},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2021.111107},
url = {https://www.sciencedirect.com/science/article/pii/S0164121221002041},
author = {Mojtaba Shahin and Christabel Gonsalvez and Jon Whittle and Chunyang Chen and Li Li and Xin Xia},
keywords = {Computational thinking practices, Girls, Education, K-12, Programming},
abstract = {Computational Thinking (CT) has been investigated from different perspectives. This research aims to investigate how secondary school girls perceive CT practices – the problem-solving practices that students apply while they are engaged in programming – when using the micro:bit device in a collaborative setting. This study also explores the collaborative programming process of secondary school girls with the micro:bit device. We conducted mixed-methods research with 203 secondary school girls (in the state of Victoria, Australia) and 31 mentors attending a girls-only CT program (OzGirlsCT program). The girls were grouped into 52 teams and collaboratively developed computational solutions around realistic, important problems to them and their communities. We distributed two surveys (with 193 responses each) to the girls. Further, we surveyed the mentors (with 31 responses) who monitored the girls, and collected their observation reports on their teams Our study indicates that the girls found “debugging” the most difficult type of CT practice to apply, while collaborative practices of CT were the easiest. We found that prior coding experience significantly reduced the difficulty level of only one CT practice - “debugging”. Our study also identified six challenges the girls faced and six best practices they adopted when working on their computational solutions.}
}
@article{SONG2021106746,
title = {Applying computational analysis of novice learners' computer programming patterns to reveal self-regulated learning, computational thinking, and learning performance},
journal = {Computers in Human Behavior},
volume = {120},
pages = {106746},
year = {2021},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2021.106746},
url = {https://www.sciencedirect.com/science/article/pii/S0747563221000686},
author = {Donggil Song and Hyeonmi Hong and Eun Young Oh},
keywords = {Self-regulated learning, Computational thinking skills, Computer education, Computational analysis, Computer programming},
abstract = {Educational research on predicting learners’ computer programming performance has yielded practical implications that guide task designs in computer education. There have been attempts to investigate learners’ computer programming patterns using high-frequency and automated data collection. This approach can be considered as process-based analysis as opposed to outcome-based analysis (i.e., the use of test or exam scores). In this process-based approach to investigate learners’ computer programming process, we included two critical constructs in our research, self-regulated learning and computational thinking skills. We aimed to identify learners’ computer programming patterns in the context that novice students learn a computer programming language, Python, in an online coding environment. We examined the relationships between the learners’ coding patterns, self-regulated learning, and computational thinking skills. Initially, we adopted a traditional approach with the aggregate data of learners’ computer programming behaviors. We then utilized a computational analytics approach to learner performance, self-regulated learning, and computational thinking skills, with ever-changing computer programming patterns. In our initial approach, the indicators of aggregate computer programming data were not associated with learners' learning performance and computational thinking skills. In the computational analysis approach, many indicators revealed significant differences between the identified patterns regarding computational thinking skills and self-regulated learning. Recommendations about the use of programming log data analysis methods and future scaffolding for computer programming learners are addressed.}
}
@article{SHAMIR2022100415,
title = {Teaching machine learning in elementary school},
journal = {International Journal of Child-Computer Interaction},
volume = {31},
pages = {100415},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100415},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921000994},
author = {Gilad Shamir and Ilya Levin},
keywords = {Computational thinking, Constructionism, Artificial intelligence, Machine learning, Elementary school, Programming},
abstract = {The emergence and ubiquity of Artificial Intelligence in the form of Machine Learning (ML) systems have revolutionized daily life. However, scant if any attention has been paid to ML in computing education, which continues to teach rule-based programming. A new, promising research field in education consists of acquainting children with ML to foster this much-needed shift from traditional rule-driven thinking to ML-based data-driven thinking. This article presents the development of computational thinking competencies in 12-year-old students who participated in a learning-by-design or a learning-by-teaching ML course. The results, based on a qualitative and quantitative evaluation of the students’ achievements, indicate that they demonstrated computational thinking competencies at various levels. The learning by design group evidenced greater development in computational skills, whereas the learning by teaching group improved in terms of computational perspective. These findings are discussed with respect to promoting children’s problem-solving competencies within a constructionist approach to ML.}
}
@article{JOHNSON2025101757,
title = {Shifting pedagogically: Incorporating the social, cultural, and emotional dimensions of student learning to develop STEM-identities in computer science},
journal = {Journal of Applied Developmental Psychology},
volume = {97},
pages = {101757},
year = {2025},
issn = {0193-3973},
doi = {https://doi.org/10.1016/j.appdev.2025.101757},
url = {https://www.sciencedirect.com/science/article/pii/S0193397325000048},
author = {Stanley L. Johnson and Joseph P. Bishop and Kirk D. Rogers},
keywords = {Stem-identity development, Social and emotional learning, Learning sciences, Pedagogy, Computational thinking, Educational equity},
abstract = {Through qualitative inquiry of a 9th-grade computer science (CS) classroom, this paper examines how teachers' pedagogical approaches can help prioritize the social and emotional dimensions of student learning to foster STEM identity and development. Findings from an ethnographic study of the delivery of the Exploring Computer Science curriculum in a high school setting of majority of students of color, and low-income youth identify five high-leverage instructional strategies. These strategies include 1) teacher mindsets towards specific subject areas like computer science; 2) creating conditions for affirming students culturally; 3) intentionally prioritizing student autonomy for social and emotional development; 4) co-constructing knowledge to increase student engagement; and 5) helping students create their own STEM identity by exposing them to STEM professionals of similar racial and cultural characteristics as students. Collectively, these practices offer critical windows into how educators can act as intermediaries in helping students see themselves in the CS field and STEM/CS career pathways. Findings from this study can inform strategies for teacher education and policy efforts seeking to close learning gaps for historically marginalized groups and to improve racial and gender diversity in opportunities for growing STEM fields.}
}
@article{HOU2020100720,
title = {Computational thinking training with technology for non-information undergraduates},
journal = {Thinking Skills and Creativity},
volume = {38},
pages = {100720},
year = {2020},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2020.100720},
url = {https://www.sciencedirect.com/science/article/pii/S1871187120301942},
author = {Hsing-Yu Hou and Somya Agrawal and Chin-Feng Lee},
keywords = {Computational thinking, Technology acceptance model, Visualization, Scratch, Tableau},
abstract = {Technology not only allows us to (co-)create, collect, store, and use knowledge and information, but it also enables us to connect with people and resources all over the world, to collaborate in the creation of knowledge, and to distribute and benefit from knowledge products. In this study, two visual and interactive pedagogies in information technology are used to train non-technical students and evaluate the performance and feedback of students in a programming course in the Department of Beauty Science. Computational thinking was integrated into the design and application of the programming subject. At the end of the semester, data were collected from 40 sophomore students in the Department of Beauty Science who answered the technology acceptance model (TAM) questionnaire and Learning Satisfactory Questionnaire after the training. An analysis was conducted using basic statistical and correlation methods, and the items demonstrated good reliability for Scratch and Tableau. The mean of 14 items in the TAM questionnaire was above 3.5 for Scratch, and that of four items was lower than 3.5 for Tableau. The mean of all the items was above 4.40 for the Learning Satisfactory Questionnaire. In the correlation analysis, the variables of perceived usefulness and perceived ease of use were positively related to the attitude and behavior in Scratch and Tableau. The use of visual and interactive programming pedagogies enhanced the interest of novice and non-technical students in learning technology. The learners were satisfied with the interactive pedagogies on computational and spatial intelligence.}
}
@article{LEI2020105439,
title = {Computational thinking and academic achievement: A meta-analysis among students},
journal = {Children and Youth Services Review},
volume = {118},
pages = {105439},
year = {2020},
issn = {0190-7409},
doi = {https://doi.org/10.1016/j.childyouth.2020.105439},
url = {https://www.sciencedirect.com/science/article/pii/S0190740920311725},
author = {Hao Lei and Ming Ming Chiu and Feng Li and Xi Wang and Ya-jing Geng},
keywords = {Computational thinking, Academic achievement, Meta-analysis, Students},
abstract = {This meta-analysis examines whether greater computational thinking is linked to greater academic achievement among students from 1st graders in primary school to 4th year seniors at university. Results from 34 studies showed that computational thinking and academic achievement were positively correlated (0.288). Moderator analysis showed that this correlation was (a) stronger among students in Eastern cultures than Western cultures; (b) strongest among primary school students, less strong among secondary school students, and weakest among undergraduates; (c) stronger among females than males; and (d) strongest when assessing assignment scores; less strong with GPA, course grade, or tests; and weakest with quizzes. Neither subject content (e.g., math, science) nor sampling strategy (e.g., randomized, convenience) moderated the link between computational thinking and academic achievement. In sum, the positive link between computational thinking and academic achievement is moderated by culture, grade, achievement indicators, and gender.}
}
@article{PLOOG2024100653,
title = {The intentions of the designers of digital educational tools in early childhood education},
journal = {International Journal of Child-Computer Interaction},
volume = {40},
pages = {100653},
year = {2024},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2024.100653},
url = {https://www.sciencedirect.com/science/article/pii/S2212868924000217},
author = {Maria Ploog and Tomasz Wiktorski},
keywords = {Educational robots, Early childhood education, Designers' intention, Future competencies, Coding and computational thinking},
abstract = {The popularity of programmable robots in early childhood education is growing. Such robots are discussed in the literature from the points of view of teachers, parents and children. We add the role of robot designers to this list. Focusing on designers and specifically their intentions is beneficial in two settings: in teacher training and whenever using the robots in playing activities in ECE. We present a qualitative study on robot designer intentions, conducted by group interviews with designers of two common but significantly different programmable robots, the Kubo robot and the Rugged robot. Using Activity Theory as the underlying framework for the thematic analysis of the interviews, our data reveal a large overlap of the intentions of both groups. They express the common goal of preparing children for the future although through slightly different competencies: enhancing computational thinking and 21st century skills, respectively. Both groups highlight the relevance of subjects outside computer science, specifically beyond coding. Our data also show a design process difference the Rugged robot was developed with a teacher-oriented approach whereas the Kubo robot with an object-oriented approach.}
}
@article{BENVENUTI2023107903,
title = {Artificial intelligence and human behavioral development: A perspective on new skills and competences acquisition for the educational context},
journal = {Computers in Human Behavior},
volume = {148},
pages = {107903},
year = {2023},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2023.107903},
url = {https://www.sciencedirect.com/science/article/pii/S0747563223002546},
author = {Martina Benvenuti and Angelo Cangelosi and Armin Weinberger and Elvis Mazzoni and Mariagrazia Benassi and Mattia Barbaresi and Matteo Orsoni},
keywords = {Artificial intelligence, Education, Competencies, Robot tutors},
abstract = {Despite the significant emphasis placed on incorporating 21st century skills into the educational framework, particularly at the primary level, recent scholarly works indicate considerable variation in the implementation of these skills across different countries and regions, suggesting a demand for further research specifically focusing on primary education. The indications of the Digicomp framework and 21st-century skills in Europe have outlined the key competences for lifelong learning needed for all citizens, including teachers and students. In this perspective, Education plays a fundamental role in ensuring that citizens acquire the required skills. The objective in the common European framework is clear: to initiate a transition from the culture of knowledge to the culture of competence. Nowadays, technological advancement allows the researchers to create and combine different frameworks with the perspective of an even more tailored, and engaged education, some examples derived from the implementation of Virtual Reality (VR) and Augmented Reality (AR), in the combination of Gamification and AI, or the development of Intelligent Tutoring Systems (ITS) to foster and create an even more personalized learning and teaching. Following these premises, in this paper, we want to point out new research reflections and perspectives that could help researchers, teachers, educators (and consequently students) to reflect on the introduction of new technologies (e.g., artificial intelligence, robot tutors) and on how these can affect on human behavioral development and on the acquisition of new skills and competences (Specifically: Creativity, Critical Thinking, Problem Solving, and Computational Thinking) for the educational context. The analysis carried on, suggests a perspective on how creativity, critical thinking, and problem-solving can be effective in promoting computational thinking, and how Artificial Intelligence (AI) could be an aid instrument to teachers in the fostering of creativity, critical thinking, and problem-solving in schools and educational contexts.}
}
@article{HOOSHYAR2021106575,
title = {An adaptive educational computer game: Effects on students' knowledge and learning attitude in computational thinking},
journal = {Computers in Human Behavior},
volume = {114},
pages = {106575},
year = {2021},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2020.106575},
url = {https://www.sciencedirect.com/science/article/pii/S074756322030323X},
author = {Danial Hooshyar and Liina Malva and Yeongwook Yang and Margus Pedaste and Minhong Wang and Heuiseok Lim},
keywords = {Adaptive educational computer game, Computational thinking knowledge and skills, Adaptive learning, Adaptive game-play},
abstract = {Several studies have reported that adaptivity and personalization in educational computer games facilitate reaching their full educational potential. However, there is little effort to develop adaptive educational computer games for promoting students' computational thinking (CT). In this study, an adaptive computer game is introduced, called AutoThinking, that not only promotes both CT skills and conceptual knowledge, but also provides adaptivity in both game-play and learning processes. To evaluate the possible effects of the game, an experimental study was carried out with 79 students in an elementary school in Estonia. AutoThinking and a conventional technology-enhanced learning approach were used for teaching CT to the experimental and control group, respectively. Our results reveal that AutoThinking improved students’ CT skills and conceptual knowledge better than the conventional approach. It was also found that students with a low and high level of prior knowledge made higher improvement in knowledge gain using the adaptive game compared to the traditional approach, especially those students with lower prior knowledge. Finally, our findings show that the adaptive game could also improve students' learning attitude toward CT better than the conventional approach, especially those students with higher prior learning attitudes.}
}
@article{TIKVA2021100849,
title = {A systematic mapping study on teaching and learning Computational Thinking through programming in higher education},
journal = {Thinking Skills and Creativity},
volume = {41},
pages = {100849},
year = {2021},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2021.100849},
url = {https://www.sciencedirect.com/science/article/pii/S187118712100064X},
author = {Christina Tikva and Efthimios Tambouris},
keywords = {Computational Thinking, Programming, Higher education},
abstract = {Computational Thinking (CT) through programming in higher education is considered an important skill for students to become problem solvers and thrive in the new digital workplace. Despite the wide interest, a systematic map of CT through programming in higher education is still missing. The aim of this study is twofold. First, we aim to provide a systematic map of the relevant research by identifying the areas and sub-areas of CT through programming teaching and learning in higher education. Second, we aim to investigate these areas based on two dimensions: their evolution over the years and the branches to which CT is applied. For this purpose, we apply a systematic mapping methodology. Main results include the identification of the CT areas of Knowledge Base, Assessment, Learning Strategies, Tools, Factors and Capacity Building. Of these, Knowledge Base, Assessment and Tools have significantly evolved throughout the years, while Capacity Building has only recently emerged. In addition, the introduction of CT to undergraduate students and preservice teachers differs mainly in the tools used and the CT elements that are assessed. The study contributes to the field by providing a structured type of research conducted and identifying gaps and opportunities for future research.}
}
@article{KONSTANTINIDOU2022104424,
title = {Teaching with technology: A large-scale, international, and multilevel study of the roles of teacher and school characteristics},
journal = {Computers & Education},
volume = {179},
pages = {104424},
year = {2022},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2021.104424},
url = {https://www.sciencedirect.com/science/article/pii/S0360131521003018},
author = {Evi Konstantinidou and Ronny Scherer},
keywords = {Data science applications in education, Information literacy, Teaching/learning strategies, 21st century abilities},
abstract = {Providing high-quality instruction with technology has become more important than ever before. However, the instructional practices and the degree to which key skills, such as digital literacy and computational thinking, are emphasized in classrooms vary considerably between teachers, schools, and countries. The present study was aimed at explaining this variation in the frequency of teaching practices with technology and teachers' emphasis on developing students' computer and information literacy and computational thinking by key aspects of teacher motivation and expertise, school conditions and priorities, and countries' economy and innovation. Utilizing large-scale, representative data from the International Computer and Information Literacy Study (ICILS) 2018 (15,015 teachers in 1195 schools in eight countries), we performed multilevel structural equation modeling and regression trees and found that teacher motivation and collaboration were positively and consistently linked to teaching practices across countries. Besides, principals' expectations concerning the teaching with technology explained variation in Finnish and German schools. In three countries, teachers' professional development was related to their teaching practices. Finally, countries’ economic development and innovation explained variation in the teacher-level effects. Our study sheds new light on the possible factors related to teaching with technology and advances the field by taking a multilevel and international perspective on these factors.}
}
@article{TIKVA2021104083,
title = {Mapping computational thinking through programming in K-12 education: A conceptual model based on a systematic literature Review},
journal = {Computers & Education},
volume = {162},
pages = {104083},
year = {2021},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2020.104083},
url = {https://www.sciencedirect.com/science/article/pii/S0360131520302815},
author = {Christina Tikva and Efthimios Tambouris},
keywords = {Computational Thinking, Programming, K-12 education},
abstract = {Computational Thinking (CT) through programming attracts increased attention as it is considered an ideal medium for the development of 21st century skills. This intense attention leads to K-12 initiatives around the world and a rapid increase in relevant research studies. However, studies show challenges in CT research and educational practice. In addition, the domain has not been mapped to facilitate comprehensive understanding of the domain challenges and development of CT curricula. The purpose of this study is to develop a conceptual model based on a systematic literature review that maps the CT through programming in K-12 education domain. The proposed Computational Thinking through Programming in K-12 education (CTPK-12) conceptual model emerges from the synthesis of 101 studies and the identification of CT Areas. The proposed model consists of six CT Areas (namely Knowledge Base, Learning Strategies, Assessment, Tools, Factors and Capacity Building) and their relationships. The model could aid domain understanding and serve as a basis for future research studies. In addition, it could support the integration of CT into K-12 educational practices, providing evidence to educational stakeholders and researchers as well as bringing closer research, practice and policy.}
}
@article{ZHONG2025105230,
title = {Evaluating AI literacy of secondary students: Framework and scale development},
journal = {Computers & Education},
volume = {227},
pages = {105230},
year = {2025},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2024.105230},
url = {https://www.sciencedirect.com/science/article/pii/S0360131524002446},
author = {Baichang Zhong and Xiaofan Liu},
keywords = {Evaluation methodologies, Information literacy, Secondary education, 21st century abilities},
abstract = {K-12 AI education not only equips students with AI literacy but also encourages underrepresented groups to pursue further studies or careers in this field. Secondary students were particularly well-suited for comprehensive AI education due to their cognitive characteristics and developmental readiness. While most studies have focused on developing pedagogy, curriculum, and tools for secondary AI education, they have prioritized measuring students' learning outcomes over literacy development. Referring to the empirical research on secondary AI education as well as Piaget's Epistemology and Bloom's Taxonomy, this study figured out a KAT framework that constitutes AI literacy: (1) AI Knowledge (AI fundamentals, elements of AI technology, application of AI technology), (2) AI Affectivity (AI and human, AI and society), and (3) AI Thinking (engineering design thinking, computational thinking). Based on this, a 57-item AI literacy scale (AILS) was developed, and 56 items were retained after expert judgement. Then, a large sample of Chinese secondary students was surveyed, resulting in 1392 valid samples, which were randomly divided into two sub-samples: 720 samples were used for item reduction through Rasch Analysis and Exploratory Factor Analysis; 672 samples were used for model validation and comparison through Confirmatory Factor Analysis. Results indicated the AILS with three-factor structure of 48 items has a good reliability and validity. Moreover, gender differences in AI literacy among secondary students were examined. Results indicated that boys had significantly higher AI Knowledge than girls, whereas girls had significantly higher AI Affectivity than boys. The implications, limitations and future research were also discussed.}
}
@article{LU2023100154,
title = {Developing a weather prediction project-based machine learning course in facilitating AI learning among high school students},
journal = {Computers and Education: Artificial Intelligence},
volume = {5},
pages = {100154},
year = {2023},
issn = {2666-920X},
doi = {https://doi.org/10.1016/j.caeai.2023.100154},
url = {https://www.sciencedirect.com/science/article/pii/S2666920X23000334},
author = {Wen-Yen Lu and Szu-Chun Fan},
keywords = {Artificial intelligence, Machine learning, Computational thinking, Secondary education},
abstract = {The rapid growth of artificial intelligence (AI) technology has changed lifestyles, work patterns, and educational approaches. However, courses that can guide students through the practical applications of AI technology are still scarce in K-12 education. This study aimed to develop a project-based machine learning (ML) course for the implementation of AI technology. The core idea of this course, which focused on the supervised learning of AI ML technology, was designed based on the project of weather prediction. Furthermore, data collection and status display were realized using various hardware devices such as Arduino and sensors, whereas ML algorithms were implemented in Python programming language. A total of 68 eleventh-grade senior high school students from a public school in Southern Taiwan participated in this study. The main variables included understanding AI concepts, computational thinking (CT), and learning attitude. Data were analyzed using quantitative statistics, including descriptive statistics, t-test, and analysis of covariance, supplemented with qualitative data. Based on the findings, the following conclusions were drawn: (1) the proposed course on the implementation of ML helps students understand the basic concepts of AI; (2) students demonstrate a significant improvement in CT skills after attending this course; (3) although the students’ attitude toward learning AI shows no significant change after attending this course, their overall view for it is positive; (4) contrary to their learning attitude, the CT skills among the students with different capabilities of learning AI are significantly dissimilar. Overall, the machine-learning implementation course developed in this study can serve as a reference for promoting AI education in the future. However, considering learners’ prior knowledge in programming, setting up appropriate learning scaffolding for them, and providing them with more examples of the applications of AI in real-life scenarios is still necessary when conducting the course for improving the students’ attitude toward AI.}
}
@article{FIDAI2020100726,
title = {“Scratch”-ing computational thinking with Arduino: A meta-analysis},
journal = {Thinking Skills and Creativity},
volume = {38},
pages = {100726},
year = {2020},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2020.100726},
url = {https://www.sciencedirect.com/science/article/pii/S1871187120302005},
author = {Aamir Fidai and Mary Margaret Capraro and Robert M. Capraro},
keywords = {Arduino, Scratch, Open source, Internet of things, Computational thinking},
abstract = {Background
Empirical research into the efficacy of Arduino- and Scratch-based interventions in science, technology, engineering, and mathematics (STEM) has greatly increased in the recent years. The purpose of this meta-analysis is to compute the overall effect of these interventions.
Setting
The settings for the interventions being meta-analyzed are K–12 and post-secondary classrooms.
Research design
This study uses a meta-analytic methodology to aggregate the effects of 11 quantitative studies with 29 unique effect sizes to produce a cumulative effect size along with relevant visual presentations of the effectiveness of the interventions.
Data collection and analysis
Data for this study were collected through a detailed literature search using the PRISMA guidelines and all analyses were conducted using STATA 16 statistical software.
Results
The results indicate that Arduino- and Scratch-enabled interventions had an overall positive effect (d = 0.67 (CI: 0.40, 0.95) on students’ STEM academic achievement and their perceptions towards STEM.
Conclusion
Hands-on engineering activities that encourage computational thinking and employ a combination of Arduino and Scratch can have profound impacts on students’ problem-solving skills, understanding of computation, and interest towards engineering professions.
Implication
This research informs STEM instructional leaders and policy makers about the positive effects and future promise of open source Arduino hardware and freely available Scratch software in STEM education.}
}
@article{ANGELI2020106185,
title = {Computational thinking education: Issues and challenges},
journal = {Computers in Human Behavior},
volume = {105},
pages = {106185},
year = {2020},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2019.106185},
url = {https://www.sciencedirect.com/science/article/pii/S0747563219303978},
author = {Charoula Angeli and Michail Giannakos},
keywords = {Computational thinking, Digital competences, Coding, Technological fluency, Algorithmic thinking, Robotics},
abstract = {Computational Thinking is a term applied to describe the increasing attention on students' knowledge development about designing computational solutions to problems, algorithmic thinking, and coding. It focuses on skills children develop from practicing programming and algorithms, and enables the development of qualities such as abstract thinking, problem solving, pattern recognition, and logical reasoning. Contemporary educational and infrastructural developments, like “CS for All” (https://www.csforall.org/), ISTE's Standards for Students in Computational Thinking (https://www.iste.org/explore/Solutions/Computational-thinking-for-all?articleid=152), Computer Science Teachers Association's Concepts of Computational Thinking (http://advocate.csteachers.org/2014/09/15/computational-thinking-and-beyond/), and the appearance of tools such as robotics, 3D printing, microprocessors, and intuitive programming languages posit Computational Thinking as a very promising area to support these learning competences. In this special issue of Computers in Human Behavior, the Editors report four studies conducted by interdisciplinary teams. The introduction to the special issue also draws attention to the great potential and need for further research in the area of Computational Thinking Education to engage students in meaningful learning so as to develop useful thinking skills and digital competences. Finally, the Editorspropose directions for future research and practice in Computational Thinking Education.}
}
@incollection{DING202319,
title = {Mathematics in STEM education},
editor = {Robert J Tierney and Fazal Rizvi and Kadriye Ercikan},
booktitle = {International Encyclopedia of Education (Fourth Edition)},
publisher = {Elsevier},
edition = {Fourth Edition},
address = {Oxford},
pages = {19-27},
year = {2023},
isbn = {978-0-12-818629-9},
doi = {https://doi.org/10.1016/B978-0-12-818630-5.13035-0},
url = {https://www.sciencedirect.com/science/article/pii/B9780128186305130350},
author = {Meixia Ding and Jinfa Cai},
keywords = {Computational thinking, Content, Explicit, Integration, K–12, Language tool, Mathematics, Process, Mathematical reasoning, STEM, Thinking tool},
abstract = {In this article, we discuss how mathematics can play a role in STEM activities in K–12 classrooms. From the perspective of content, we argue that mathematics serves as a language tool to help represent/model STEM activities and explain/interpret identified solutions. From the perspective of process, we argue that mathematics serves as a thinking tool because mathematical reasoning is at the core of problem solving. In addition, computational thinking is a critical skill for solving problems in complex systems. We conclude our study with three suggestions that help make mathematics more explicit in K–12 STEM classrooms.}
}
@article{BUCCIARELLI2022100443,
title = {The causes of difficulty in children’s creation of informal programs},
journal = {International Journal of Child-Computer Interaction},
volume = {31},
pages = {100443},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100443},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921001185},
author = {Monica Bucciarelli and Robert Mackiewicz and Sangeet S. Khemlani and P.N. Johnson-Laird},
keywords = {Computational thinking, Deduction, Informal programs, Kinematic simulations, Recursion},
abstract = {We present a theory of the causes of difficulty in children’s creation of informal programs. Ten-year-old children are able to devise such programs to rearrange the order of the cars in trains on a simple railway track with a single siding. According to the theory, they rely on kinematic mental models that simulate the required sequence of steps, and we devised a computer program, mAbducer, which does so too in creating its own programs for such rearrangements. An experiment showed that a simple measure of the complexity of its programs, based on Kolmogorov complexity, predicts ten-year-olds’ difficulty in this task: the measure is the number of words in mAbducer’s programs for solving the rearrangement in a minimal number of moves. Complexity, in turn, reflects the structure of the required programs, which need loops of moves to be repeated, and often moves before and after such a loop. Children’s errors are predictable in both their location and nature. Our results therefore have implications for the assessment and pedagogy of computational thinking.}
}
@article{KONG2021106836,
title = {Item response analysis of computational thinking practices: Test characteristics and students’ learning abilities in visual programming contexts},
journal = {Computers in Human Behavior},
volume = {122},
pages = {106836},
year = {2021},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2021.106836},
url = {https://www.sciencedirect.com/science/article/pii/S074756322100159X},
author = {Siu Cheung Kong and Yi Qing Wang},
keywords = {Computational thinking education, Computational thinking practices, Item response theory, Programming education, Test development and assessment},
abstract = {Computational thinking (CT) practices have gained increasing importance in primary school education. However, there are few tools to measure primary school students' CT practices that are based on rigorous psychometric approaches. This study developed an operational definition for CT practices by exploring the key dimensions of their composition and, more importantly, developed and validated a generic test tool that can effectively assess students’ CT practices. Items to measure CT practices were developed using the evidence-centered design (ECD) approach. These items prompted students to exhibit behaviors that demonstrated their skills in the four dimensions of CT practice, namely testing and debugging, algorithmic thinking, reusing and remixing, and abstracting and modularizing. A test consisting of these items was administered to 13,956 Grade 4–6 primary school students from 56 public schools in Hong Kong. The data were analyzed based on the item response theory (IRT) approach, together with other psychometric tests. A bi-factor three-parameter logistic model was ultimately adopted for test validation, as it fitted the data better than the corresponding two-parameter and one-parameter logistic models. The results validated the four-dimensional structure of the CT practices test. The reliability, test item characteristics, and CT practice abilities of students are also discussed.}
}
@article{SU2022100049,
title = {Artificial intelligence in early childhood education: A scoping review},
journal = {Computers and Education: Artificial Intelligence},
volume = {3},
pages = {100049},
year = {2022},
issn = {2666-920X},
doi = {https://doi.org/10.1016/j.caeai.2022.100049},
url = {https://www.sciencedirect.com/science/article/pii/S2666920X22000042},
author = {Jiahong Su and Weipeng Yang},
keywords = {Artificial intelligence, Early childhood education, Teaching and learning, Machine learning, Computer science},
abstract = {Artificial intelligence (AI) tools are increasingly being used in the field of early childhood education (ECE) to enhance learning and development among young children. Previous proof-of-concept studies have demonstrated that AI can effectively improve teaching and learning in ECE; however, there is a scarcity of knowledge about how these studies are conducted and how AI is used across these studies. We conducted this scoping review to evaluate, synthesize and display the latest literature on AI in ECE. This review analyzed 17 eligible studies conducted in different countries from 1995 to 2021. Although few studies on this critical issue have been found, the existing references provide up-to-date insights into different aspects (knowledge, tools, activities, and impacts) of AI for children. Most studies have shown that AI has significantly improved children's concepts regarding AI, machine learning, computer science, and robotics and other skills such as creativity, emotion control, collaborative inquiry, literacy skills, and computational thinking. Future directions are also discussed for researching AI in ECE.}
}
@article{SUN2023101340,
title = {Does text-based programming improve K-12 students’ CT skills? Evidence from a meta-analysis and synthesis of qualitative data in educational contexts},
journal = {Thinking Skills and Creativity},
volume = {49},
pages = {101340},
year = {2023},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2023.101340},
url = {https://www.sciencedirect.com/science/article/pii/S1871187123001098},
author = {Lihui Sun and Liang Zhou},
keywords = {K-12, Computational thinking (CT) skills, Text-based programming, Instruction design, Meta-analysis},
abstract = {Promoting computational thinking (CT) skills in programming activities has become a key issue in K-12 education, and the shift from visual to text-based programming is an inevitable trend in programming education. Although research on K-12 text-based programming to promote CT skills has been increasing, a literature review that systematically organizes and analyzes it has not yet emerged. Moreover, there are no uniform conclusions on how to design text-based programming activities to effectively promote students’ acquisition of CT skills. The purpose of this study was mainly to determine the effectiveness of using text-based programming to enhance K-12 students’ CT skills, to explore the effects of various text-based programming instructional design factors on CT skill acquisition, and to discuss the key issues and future development of text programming in the K-12 stage. In this study using the quantitative method of meta-analysis and the qualitative method of systematic literature review, 46 studies of text-based programming on K-12 students’ CT skills were retrieved, of which 19 empirical studies including 37 effects size met the inclusion criteria for the meta-analysis and were therefore used as a meta-analysis. The results showed that text-based programming improved the CT skills of K-12 students overall (Hedges’ g = 0.71, 95% CI [0.51, 0.90], p < 0.01). No publication bias was detected. In addition, the results of the moderator analysis revealed that: 1) text programming had the greatest impact on computational thinking development in middle school students (g = 0.833, p = <0.05); 2) the duration of text programming instruction had the most significant positive impact on students' CT at 16–20 weeks (g = 1.038, p <0.05); 3) the moderating effect of different assessment tools on CT skills in text programming instruction The difference was statistically significant, and the test assessment method had a highly significant positive moderating effect on CT skills of students in grades K-12 (g = 1.005, p < 0.05); 4) The moderating effect of different student sample sizes on students' computational thinking development was significantly different, and the implementation of text-based programming instruction had the most significant effect on students' CT improvement among students with sample sizes of 41 ∼ 60 (g = 0.921, p < 0.05); 5) There were no significant differences in the effects of different text-based programming languages and learning environments on students' computational thinking.However, there are still barriers to developing instructional practices for text-based programming to foster CT in K-12 students, such as the highly abstract and complex syntax of text-based programming. This study found that the most critical issues that need to be addressed in current text-based programming to foster CT in K-12 students are the lack of student interest in text-based programming and the misconceptions that arise when students move from visual programming to text-based programming. To address these issues, future research could begin with improving teaching methods and increasing student motivation and interest. To address these issues, future research could begin with improving teaching methods and increasing students' motivation and interest.}
}
@article{YUEYIM2024100319,
title = {A critical review of teaching and learning artificial intelligence (AI) literacy: Developing an intelligence-based AI literacy framework for primary school education},
journal = {Computers and Education: Artificial Intelligence},
volume = {7},
pages = {100319},
year = {2024},
issn = {2666-920X},
doi = {https://doi.org/10.1016/j.caeai.2024.100319},
url = {https://www.sciencedirect.com/science/article/pii/S2666920X2400122X},
author = {Iris Heung {Yue Yim}},
keywords = {Artificial intelligence, AI literacy, Intelligence-based AI literacy framework, AI thinking, Primary school students, Systematic review, AI learning and teaching},
abstract = {Artificial intelligence (AI) literacy education mainly targets secondary and university students, often overlooking the unique needs of younger students. This gap in AI literacy primary school education presents theoretical and pedagogical challenges. Despite the pervasive influence of AI, which can exacerbate inequalities and raise ethical challenges, primary students often lack an understanding of AI principles and mechanisms. Recent developments in age-appropriate AI learning tools have extended AI literacy to primary schools, but AI literacy frameworks for this age group remain underdeveloped. This study aims to conceptualize AI literacy by analyzing existing theoretical frameworks and proposing a new inclusive AI literacy framework for young students. A scoping review is employed using four credible index databases, and 19 articles are selected, with 17 AI literacy frameworks identified across all educational levels, from early childhood to university. This study reveals that the predominant methodologies for developing AI literacy frameworks involve empirical research studies and literature reviews, adhering to national government or institutional standards. These frameworks commonly incorporate 1) Bloom's taxonomy or a similar progression framework, such as Use-Create-Modify, 2) constructionism, and 3) computer science perspectives such as theories of computation. The findings reveal that AI literacy is situated at the intersection of digital literacy, data literacy, computational thinking, and AI ethics, emphasizing the need for a transdisciplinary and interdisciplinary approach that encompasses both technological and societal impacts. However, the study argues that the current paradigms of AI literacy frameworks for young students often emphasize constructionist perspectives without fully considering the interactions between human and technological agents. This gap highlights the necessity for a new conceptual framework that acknowledges both human and non-human agents in AI literacy education for young students. The research contributes by conceptualizing AI literacy and guiding policymakers and curriculum designers to implement holistic AI literacy education for young students.}
}
@article{BILBAO2021e06135,
title = {Study to find out the perception that first year students in engineering have about the Computational Thinking skills, and to identify possible factors related to the ability of Abstraction},
journal = {Heliyon},
volume = {7},
number = {2},
pages = {e06135},
year = {2021},
issn = {2405-8440},
doi = {https://doi.org/10.1016/j.heliyon.2021.e06135},
url = {https://www.sciencedirect.com/science/article/pii/S2405844021002401},
author = {Javier Bilbao and Eugenio Bravo and Olatz García and Carolina Rebollar and Concepción Varela},
keywords = {Computational thinking, Engineering, Computer science, Higher education, Valuation methodologies, Pedagogical issues, Teaching/learning strategies, Structural equation modelling, Mathematics},
abstract = {Since the end of the 20th century, the digitalization of society, including the educational systems, has been growing exponentially. At the same time, education systems have been evolving towards competency-based assessment. Likewise, at the beginning of this century, the idea of Computational Thinking was resurrected by J. Wing, for solving problems and designing systems using concepts of computer science. Today, we can see how all these questions are taking shape in a new competence, called Computational Thinking, related to others that already exist. In this paper, we have studied the skills of Computational Thinking in university students, focusing on abstraction and its possible relationship with other factors. Results conclude that the students fail in relation to abstraction and in algorithmic thinking. Although the ability of abstraction is not easy to measure, a linear regression analysis has been carried out in order to determine its possible study.}
}
@article{LI2023101369,
title = {A study on the relationship between student' learning engagements and higher-order thinking skills in programming learning},
journal = {Thinking Skills and Creativity},
volume = {49},
pages = {101369},
year = {2023},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2023.101369},
url = {https://www.sciencedirect.com/science/article/pii/S1871187123001372},
author = {Wei Li and Ji-Yi Huang and Cheng-Ye Liu and Judy C.R. Tseng and Shu-Pan Wang},
keywords = {Programming learning, Higher-order thinking skills, Learning engagements, K-12},
abstract = {Learning engagements in programming learning activities are critical to developing students' higher-order thinking skills. This study aimed to investigate the relationship between K-12 students' learning engagement levels (i.e., cognitive engagement, emotional engagement, and behavioral engagement) and higher-order thinking skills (i.e., computational thinking, problem solving, creative thinking, and critical thinking) in programming learning, and the moderating effects of behavioral engagement and emotional engagement on this relationship. A total of 714 K-12 students in China's Zhejiang Province participated in this study and completed an online questionnaire, which included the learning engagement scale and the high-order thinking tendency scale. Cross-sectional survey data were analyzed using Pearson's correlation coefficient and hierarchical multiple regression as a way to examine the relationship between the variables. The results showed that cognitive engagement, emotional engagement, and behavioral engagement were all key factors in developing those students' higher-order thinking for programming learning activities in K-12 students during associated activities. Furthermore, when the students' emotional engagements were elevated, the positive relationships between cognitive engagement, computational thinking, and creative thinking were closer. Inversely, when students' behavioral engagement was high, the positive relationship between cognitive engagement and critical thinking, and the positive relationship between emotional engagement and problem-solving and critical thinking became looser. These results can help deepen educators' understanding of the relationship between learning engagement and higher-order thinking skills to facilitate their search for effective strategies to improve programming instruction. Additionally, it can provide a more precise research direction for the broader development of programming education.}
}
@article{PENG20231143,
title = {Design of Data Persistence for Network Resources Recommendation System Based on Hibernate Architecture},
journal = {Procedia Computer Science},
volume = {228},
pages = {1143-1151},
year = {2023},
note = {3rd International Conference on Machine Learning and Big Data Analytics for IoT Security and Privacy},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2023.11.149},
url = {https://www.sciencedirect.com/science/article/pii/S1877050923019804},
author = {Xia Peng and Jun Li and Yongchang Ren},
keywords = {Hibernate, "Python Programming", Network Resources, Recommendation System, Data Persistence},
abstract = {The Python language is more focused on problem solving, which is in line with the era of computational thinking, and the teaching of Python language course requires students to systematically master the basic concepts, programming ideas and programming techniques of Python, and have the idea of object-oriented software design technology. We have developed a recommended system of online resources for "Python Programming" course to solve the problem of students' access to resources and deepen the teaching reform of the Python Programming course. Data persistence is an important task in system development, and Hibernate is the most popular O/R Mapping framework. The data persistence design based on Hibernate solves the key technical problems in the development of the network resource recommendation system for the "Python Programming" course, and improves the efficiency and maintainability of the software system development.}
}
@article{SCHEZSOBRINO2024100648,
title = {MR-LEAP: Mixed-Reality Learning Environment for Aspirational Programmers},
journal = {Software Impacts},
volume = {20},
pages = {100648},
year = {2024},
issn = {2665-9638},
doi = {https://doi.org/10.1016/j.simpa.2024.100648},
url = {https://www.sciencedirect.com/science/article/pii/S2665963824000368},
author = {Santiago Schez-Sobrino and Francisco M. García and Javier A. Albusac and Carlos Glez-Morcillo and Jose J. Castro-Schez and David Vallejo},
keywords = {Programming learning, Mixed reality, Gamification, Computational thinking, Problem solving},
abstract = {This paper presents MR-LEAP (Mixed-Reality Learning Environment for Aspirational Programmers), a framework developed for learning programming through Mixed Reality and gamification mechanics. MR-LEAP’s architecture is designed to facilitate the understanding of basic programming concepts while allowing the gradual incorporation of more complex concepts. The framework provides a simple visual level editor. MR-LEAP is supported by the Mixed Reality Toolkit framework to promote portability to new Mixed Reality devices. Our goal is to facilitate programming education using Mixed Reality technology. MR-LEAP has already been used in both research and educational.}
}
@article{FAGERLUND2022100511,
title = {Fourth grade students’ computational thinking in pair programming with Scratch: A holistic case analysis},
journal = {International Journal of Child-Computer Interaction},
volume = {33},
pages = {100511},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2022.100511},
url = {https://www.sciencedirect.com/science/article/pii/S2212868922000381},
author = {Janne Fagerlund and Mikko Vesisenaho and Päivi Häkkinen},
keywords = {Computational thinking, Scratch, Pair programming, Primary education},
abstract = {This article explores a new but expanding research topic: primary school students’ computational thinking (CT) in the context of programming in pairs. The data comprises four fourth-grade student dyads using Scratch, a block-based programming tool, for two open-ended creative programming sessions. We sought insight into how the dyads put four intertwined CT dimensions – planning; iteration; collaboration, social interactions, and remixing; and debugging – into practice. To examine these dimensions, the data was analysed systematically in three overlapping layers: what happens on the computer screen (design events), who uses the computer (computer control), and what kind of talk is occurring (talk). The temporal viewpoint in the multi-layered analysis revealed and enriched holistic understanding of key computational and social factors, such as initial project planning methods, programming tendencies, and pair programming roles that essentially shaped the dyads’ design processes. Next to opportunities for more focal research in CT education, the results provide especially evidence-based pedagogical knowledge for supporting students’ open-ended programming in the classroom. In particular, concrete suggestions for supporting open-ended project planning, balancing between self-directed design and instructional support during programming, and promoting shared design processes in pair programming are provided based on the findings.}
}
@article{MANNILA2023100132,
title = {Student and teacher co-agency when combining CT with arts and design in a cross-curricular project},
journal = {Computers and Education Open},
volume = {4},
pages = {100132},
year = {2023},
issn = {2666-5573},
doi = {https://doi.org/10.1016/j.caeo.2023.100132},
url = {https://www.sciencedirect.com/science/article/pii/S2666557323000101},
author = {Linda Mannila and Teemu Leinonen and Merja Bauters and Marjaana Veermans},
keywords = {K-12 education, Computational thinking, Cross-curricular projects, Arts and design},
abstract = {The technological development has raised awareness for the importance of digital competence and computational thinking (CT) to understand the digital world and has resulted in revised curricula in many countries. In Finland, a new curriculum for grades 1–9 came into force in 2016 introducing digital competence (including programming) to be integrated in other subjects. Most teachers lack prior experience in programming and there is a need for suitable instructional models. This article presents a cross-curricular teaching sequence and the results from a case study conducted in four Finnish schools. Students in grades 4–6 collaboratively worked on a project combining arts, design and CT with other subjects. The results show that students demonstrated several CT abilities while working on their projects, in particular creativity, tinkering and debugging. The findings also indicate that teachers and students learned together (co-agency) and suggest that models like the teaching sequence can help and encourage teachers to integrate programming and CT in a cross-curricular manner. Still, the teachers’ knowledge, ambition level and understanding of the task at hand, as well as the organizational support appear to play a notable role when planning and carrying out projects of this kind. While CT is commonly seen as developed through programming, the teaching sequence seems to have fostered CT abilities through the project as a whole, with programming playing the role of a tool or a glue depending on the time available, and the students’ skill and ambition level.}
}
@article{LAURENT2022101667,
title = {Impact of programming on primary mathematics learning},
journal = {Learning and Instruction},
volume = {82},
pages = {101667},
year = {2022},
issn = {0959-4752},
doi = {https://doi.org/10.1016/j.learninstruc.2022.101667},
url = {https://www.sciencedirect.com/science/article/pii/S0959475222000883},
author = {Manon Laurent and Rosamaria Crisci and Pascal Bressoux and Hamid Chaachoua and Cécile Nurra and Erica {de Vries} and Pierre Tchounikine},
keywords = {Computational thinking, Programming activity, Mathematics learning, Primary school, Randomized trial, Learning transfer},
abstract = {The aim of this study is to investigate whether a programming activity might serve as a learning vehicle for mathematics acquisition in grades four and five. For this purpose, the effects of a programming activity, an essential component of computational thinking, were evaluated on learning outcomes of three mathematical notions: Euclidean division (N = 1,880), additive decomposition (N = 1,763) and fractions (N = 644). Classes were randomly assigned to the programming (with Scratch) and control conditions. Multilevel analyses indicate negative effects (effect size range −0.16 to −0.21) of the programming condition for the three mathematical notions. A potential explanation of these results is the difficulties in the transfer of learning from programming to mathematics.}
}
@article{MARQUEZ2024107434,
title = {Inclusion of individuals with autism spectrum disorder in Software Engineering},
journal = {Information and Software Technology},
volume = {170},
pages = {107434},
year = {2024},
issn = {0950-5849},
doi = {https://doi.org/10.1016/j.infsof.2024.107434},
url = {https://www.sciencedirect.com/science/article/pii/S0950584924000399},
author = {Gastón Márquez and Michelle Pacheco and Hernán Astudillo and Carla Taramasco and Esteban Calvo},
keywords = {Autism spectrum disorders, Systematic multivocal mapping study, Software engineering},
abstract = {Context:
Software Engineering is dedicated to the systematic and efficient development of software, which necessitates the active participation of all team members and a recognition of their unique skills and abilities, including those with autism spectrum disorders (ASD). The inclusion of individuals with ASD presents new perspectives, yet there is a lack of systematic evidence regarding the primary obstacles and potential benefits associated with their inclusion.
Objective:
This paper aims to identify, characterize, and describe barriers, facilitators, and methodological proposals described by the community to include individuals with ASD in the discipline of Software Engineering.
Methods:
We conducted a comprehensive systematic multivocal mapping study to evaluate the existing evidence on the inclusion of individuals with ASD in Software Engineering.
Results:
We obtained 34 primary studies from which we identified the main facilitators of motivation to learn new skills, attention to detail, and the ability to report and visualize patterns. In contrast, the main barriers detected were communication, a lack of neurodivergent computational thinking, and sensory integration. Additionally, we identified and classified four categories of proposals that allowed the inclusion of individuals with ASD: (i) using virtual reality, (ii) creating more inclusive workspaces, (iii) encouraging neurodivergent computational thinking, and (iv) improving social skills.
Conclusions:
This study identifies the principal elements that ought to be taken into consideration when allocating tasks and roles to individuals with ASD in software development.}
}
@article{MACRIDES2022100396,
title = {Programming in early childhood education: A systematic review},
journal = {International Journal of Child-Computer Interaction},
volume = {32},
pages = {100396},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100396},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921000891},
author = {Elena Macrides and Ourania Miliou and Charoula Angeli},
keywords = {Programming, Early-childhood education, Computational thinking, Robotics},
abstract = {The current study aims to provide a systematic review of the literature about the teaching of programming in early-childhood education, and specifically for the age group of 3–8 years old. The review presents empirical investigations with young learners and reports on relevant frameworks and curriculum programs, effects of teaching approaches and educational tools on learning, and learning outcomes and pedagogical benefits of teaching programming. Based on the empirical studies reviewed in this study, programming can be introduced to young learners as a stand-alone subject matter or can be integrated in the regular kindergarten curriculum with other subject areas such as music, movement and dance, art, science, mathematics, and literacy. In addition, programming can be infused in literacy and storytelling activities as a developmentally appropriate delivery approach. The authors conclude that future research should devote time and effort in the development of educational curricula in which the teaching of programming is fully integrated, as well as teacher training programs so that teachers become competent to teach programming in early childhood education.}
}
@article{HARANGUS2020615,
title = {Computational Thinking in Secondary and Higher Education},
journal = {Procedia Manufacturing},
volume = {46},
pages = {615-622},
year = {2020},
note = {13th International Conference Interdisciplinarity in Engineering, INTER-ENG 2019, 3–4 October 2019, Targu Mures, Romania},
issn = {2351-9789},
doi = {https://doi.org/10.1016/j.promfg.2020.03.088},
url = {https://www.sciencedirect.com/science/article/pii/S2351978920309665},
author = {Katalin Harangus and Zoltán Kátai},
keywords = {Computational thinking, Computer science education, Problem solving, Secondary and higher education, Pedagogical issues},
abstract = {One of the most important challenges of education is the formation of proper computational thinking (CT). In line with K-12 Computer Science Framework (k12cs.org) the term of CT refers to the “thought processes involved in expressing solutions as computational steps or algorithms that can be carried out by a computer”. CT is a problem solving process essential to the development of computer applications, but it is also used in supporting problem solving across many other disciplines. It has gained some grounds in secondary education in the last few years and there are ongoing efforts to introduce it to elementary education as well. Taking into consideration that algorithms play a central role in computational thinking, the aim of our research was to assess the skills of secondary school students and university students in this area, CT, that they faced an apparently computer science – free task but with obvious algorithmic background. According to the aims of our research there were two target populations: secondary school students and university students. In order to measure the level of computational thinking we elaborated a worksheet (test with problems to be solved). The tasks contained algorithms that can be applied on computer, and they did not need any IT knowledge, only structured and logical thinking. The results provide a reliable guide regarding those cognitive skills, among secondary school-children and university students, which need improvement, so transfer of knowledge could work in practical, life-like situations.}
}
@article{HUANG2024100651,
title = {Deepening children’s STEM learning through making and creative writing},
journal = {International Journal of Child-Computer Interaction},
volume = {40},
pages = {100651},
year = {2024},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2024.100651},
url = {https://www.sciencedirect.com/science/article/pii/S2212868924000199},
author = {Joey Huang and Ariel Han and Ana Villanueva and Ziyi Liu and Zhengzhe Zhu and Karthik Ramani and Kylie Peppler},
keywords = {Creative writing, STEAM learning, Internet of things (IoT), Computational thinking, Physical computing, STEAM practices},
abstract = {Current trends demonstrate that researchers and K-12 educators are moving towards integrating computational thinking (CT) concepts outside of the computer science (CS) classroom (Lee et al., 2020). However, one of the present challenges includes a lack of engaging learning content and instruction for translating computational concepts that non-CS instructors can bring into their classrooms. Our research team developed the Grove-Blockly platform, a website that employs block-based programming and physical computing elements with simulations to support CT learning and IoT practices. We designed a 5-day workshop with the National Writing Project for students to engage in STEAM learning through making and creative writing. By examining students’ learning through the processes and outcomes of making, coding, and creative writing, we aim to better understand how learning occurs at the intersections of making, writing, and computing. The findings show students’ positive learning outcomes of CT and physical computing from the workshop. Mainly, students gained a deeper understanding of IoT elements (e.g., sensors, actuators) through the process of making and creative writing. This work provides empirical evidence on how students learn CT and computational practices through making and creative writing. Finally, we discuss how the engagement of STEAM practices supports and empowers students’ learning of CT and physical computing through the creation of e-crafts by students.}
}
@article{HSU2021100012,
title = {Behavioral-pattern exploration and development of an instructional tool for young children to learn AI},
journal = {Computers and Education: Artificial Intelligence},
volume = {2},
pages = {100012},
year = {2021},
issn = {2666-920X},
doi = {https://doi.org/10.1016/j.caeai.2021.100012},
url = {https://www.sciencedirect.com/science/article/pii/S2666920X21000060},
author = {Ting-Chia Hsu and Hal Abelson and Natalie Lao and Yu-Han Tseng and Yi-Ting Lin},
keywords = {Artificial intelligence education, Interdisciplinary instructional tool, Behavioral patterns},
abstract = {This study aimed at developing an instructional tool for the artificial intelligence education of young students, and used learning analytics to identify the sequential learning behavioral patterns of students during the process of learning with the instructional tool. The instructional experiment took 9 weeks. The first stage of the course was 5 weeks spent on individual learning of MIT App Inventor and Personal Image Classifier. The second stage was 4 weeks spent on cooperative learning to make a robot car and play a computational thinking board game. In the second stage, the students worked in pairs to make the robot car. Finally, they played the computational thinking board game with the personal image classification application they developed in the first stage and the robot car they made in the second stage. The innovative studies found meaningful behavioral patterns when the young students learned the application of artificial intelligence with the instructional tool developed and proposed in the study.}
}
@article{CARDENASSAINZ2022100381,
title = {Integration and acceptance of Natural User Interfaces for interactive learning environments},
journal = {International Journal of Child-Computer Interaction},
volume = {31},
pages = {100381},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100381},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921000817},
author = {Brandon Antonio Cárdenas-Sainz and María Lucia Barrón-Estrada and Ramón Zatarain-Cabada and José Mario Ríos-Félix},
keywords = {Natural user interfaces, Gesture recognition, Interactive learning environments, Computational thinking, Secondary education, Technology Acceptance Model},
abstract = {This study focuses on the design of interactive learning environments (ILE) enhanced with Natural User Interfaces (NUI) for educational applications. It presents a 3D virtual environment, namely THINKMOTION which enables students to practice computational thinking skills. THINKMOTION combines a visual programming interface for coding and creating 3D virtual scenes with physics simulations, with a gesture recognition system for interaction over virtual objects. The ILE integrates a NUI called Leap Motion Controller, which recognizes the users’ hand movements and gestures A questionnaire was designed in order to evaluate the perceptions toward experimental learning with students of public and private secondary schools. It applies Technology Acceptance Model (TAM) and enhanced with new constructs such as perceived enjoyment and interface style. Results from our study highlight that: (1) NUI technologies positively impacted enjoyment and perceived ease of use among ILE users; (2) The ease of use provided by NUIs improved the enjoyment of students; (3) The perceived enjoyment considerably increased the intention to use; (4) For public school students, NUI technology has a significant impact on their first impressions and overall interest, followed by a positive attitude toward using ILE; (5) Private school students who are more accustomed to and familiar with using natural interfaces presented a positive attitude and enjoyment when using the ILE.}
}
@article{LIN2020101011,
title = {Enhancing Computational Thinking Capability of Preschool Children by Game-based Smart Toys},
journal = {Electronic Commerce Research and Applications},
volume = {44},
pages = {101011},
year = {2020},
issn = {1567-4223},
doi = {https://doi.org/10.1016/j.elerap.2020.101011},
url = {https://www.sciencedirect.com/science/article/pii/S1567422320300880},
author = {Szu-Yin Lin and Shih-Yi Chien and Chia-Lin Hsiao and Chih-Hsien Hsia and Kuo-Ming Chao},
keywords = {Cognitive development of children, Computational thinking, Game-based learning, Tangible user interface, Smart toys},
abstract = {Computational thinking has become an important issue in the field of education. Because preschool and kindergarten learners are capable of exercising their cognitive abilities to resolve basic computational logic, this demographic has raised significant interest in studying their learning intentions and behaviors. However, prior research fails to examine the effects of teaching computational logic to kindergarten children. Therefore, this study aims to investigate the influences of teaching approaches in guiding preschool children to learn computational logic and programming concepts to enhance their problem-solving skills as well as computational thinking abilities. A novel teaching framework is designed to develop the learner’s cognitive abilities, which adopts the smart toy game-based learning approach along with a tangible user interface (TUI) to enhance children’s learning performance and interests. The proposed teaching approach integrates the game-based learning concepts into the TUI system, where the learning processes allow the learners to effectively practice the conceptual knowledge and efficiently advance their problem-solving skills. The results suggest using the developed game-based TUI system can increase preschool children’s learning behaviors as well as enhance their learning interests and computational thinking abilities.}
}
@article{MATTHEWS2025100725,
title = {Social and curious: Lessons in designing digital manipulatives for young children},
journal = {International Journal of Child-Computer Interaction},
volume = {44},
pages = {100725},
year = {2025},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2025.100725},
url = {https://www.sciencedirect.com/science/article/pii/S2212868925000054},
author = {Sarah Matthews and Maria Nicholas and Louise Paatsch and Lisa Kervin and Peta Wyeth},
keywords = {Preschool, Interaction design, Digital literacy, Child-led play, Embodied cognition},
abstract = {Introducing Digital Literacy (DL), including Computational Thinking (CT), to young children develops foundational skills in computer science, problem-solving, and critical thinking. However, current digital toys for demonstrating computational thinking strategies are not always designed for early-year environments or specifically for young (preschool) children. Digital manipulatives incorporating embedded computation can offer developmentally appropriate tools to introduce foundational programming strategies and dynamic system knowledge before children become developmentally ready for more formalised programming activities. This paper presents an empirical study in a preschool environment with children (aged 3–5 years) using novel digital manipulatives, Embeddables, in child-led free and guided play activities in a preschool (Fig. 1). From our analysis of the types of activities the children engaged in, we identified underexplored design features of digital manipulatives that can build early exposure to CT skills through ludic and epistemic play. These are designed-in behaviour, distributed interactivity, conditional and proximal relations between artefacts, and abstracted multisensorial reactions.}
}
@article{MONGEROFFARELLO2025100937,
title = {Supporting teachers, engaging students: A collaborative model for K-12 computing education},
journal = {Entertainment Computing},
volume = {54},
pages = {100937},
year = {2025},
issn = {1875-9521},
doi = {https://doi.org/10.1016/j.entcom.2025.100937},
url = {https://www.sciencedirect.com/science/article/pii/S1875952125000175},
author = {Alberto {Monge Roffarello} and Juan Pablo Sáenz},
keywords = {4th-grade computing education, Project-based learning, Group work, Cross-age tutoring, Observational study, Co-design},
abstract = {Although the importance of Computational Thinking (CT) for children is increasingly recognized, its adoption in computing education curricula in primary schools is limited by several open challenges, including teachers’ training and curricula development. Seeking to systematize a process that enables primary school teachers to teach CT through computing education in primary schools, we present the design, evaluation, and analysis of an introductory coding course for 4th-grade classes in a large Italian city, utilizing the Scratch platform. The course followed a project-based learning approach, empowering groups of children in designing and implementing simple video games, and explored the adoption of a collaborative strategy through which computing experts, class teachers, and high-school tutors proactively supported the project work. We evaluated and refined the course educational strategies by conducting an observational study and co-designing activities with the involved teachers. Then, we derived an educational model that may allow K-12 teachers and experts to collaborate in designing and implementing computing education courses that are engaging, inclusive, and supportive.}
}
@article{KUCUK2020100167,
title = {Students’ attitudes towards robotics and STEM: Differences based on gender and robotics experience},
journal = {International Journal of Child-Computer Interaction},
volume = {23-24},
pages = {100167},
year = {2020},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2020.100167},
url = {https://www.sciencedirect.com/science/article/pii/S2212868920300039},
author = {Sevda Kucuk and Burak Sisman},
keywords = {Secondary education, Gender studies, Educational robotics, STEM},
abstract = {In this study, Turkish secondary school students’ attitudes towards robotics and STEM were examined in terms of gender and robotics experience. Sample consisted of 240 secondary school students (98 females and 142 males; grades 5–7). Two scales were used to collect data: STEM Attitude Scale and Robotics Attitude Scale. The data were analyzed using a One-way MANOVA and through correlational methods. Results show that the students’ attitudes towards robotics and STEM were positive. Gender had no effect on STEM attitudes. However, in terms of robotics attitudes, female students had significantly less desire and less confidence to learn robotics than male students. There was no gender effect on computational thinking and teamwork. Implications were discussed in terms of theoretical insights, practices for educational robotics in STEM, and directions for further research.}
}
@article{WOO2022101193,
title = {Problem solved, but how? An exploratory study into students’ problem solving processes in creative coding tasks},
journal = {Thinking Skills and Creativity},
volume = {46},
pages = {101193},
year = {2022},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2022.101193},
url = {https://www.sciencedirect.com/science/article/pii/S1871187122001948},
author = {Karen Woo and Garry Falloon},
keywords = {Problem solving, Computational thinking, Tinkering, Coding, Middle-school},
abstract = {Problem solving capabilities have often been reported by teachers as a key benefit from creative coding activities in school-age children. However, few studies to date have defined problem solving, and investigated how it is operationalised in interdisciplinary creative coding tasks. This study aims to build knowledge about students’ use of computational thinking and computer science concepts for problem solving when coding animated narratives. The research investigated students’ coding processes using data gathered from audio and device display recordings and semi-structured interviews. Results suggest limitations to the use of creative coding tasks if the expectation is to develop computational thinking and systematic problem solving strategies, or learn basic computer science concepts. They revealed that novice students rarely solved coding problems using optimal technically-based strategies despite being given explicit instruction on their use, opting instead to bypass problems by adjusting intended outcomes, or by using low level code translation strategies. Results demonstrate that engaging computational thinking or even demonstrating understanding of basic computer science concepts was not a requirement to produce a viable creative coding outcome. This study contributes new understanding of students’ coding practices when engaged in creative coding tasks in regular, non-specialist classrooms. Its findings challenge the commonly-held assumption that coding is a natural ‘vehicle’ to develop computational thinking and systematic approaches to problem solving. It also questions the learning that results from the non-technical, inefficient and often ineffective problem solving practices students employ during ‘creative coding’ tasks, that are frequently used by non-specialist teachers in response to curriculum requirements.}
}
@article{THEODOROPOULOS2021100335,
title = {Augmented Reality and programming education: A systematic review},
journal = {International Journal of Child-Computer Interaction},
volume = {30},
pages = {100335},
year = {2021},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100335},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921000544},
author = {Anastasios Theodoropoulos and George Lepouras},
keywords = {Augmented Reality (AR), Programming learning, Coding learning, CS education, Review study},
abstract = {In recent years, Augmented Reality (AR) usage in the learning process has been growing. AR tools and environments lead to a variety of positive outcomes and impacts for educational purposes. Similarly, AR is changing the learning process in the Computer Science (CS) Education domain. There are numerous studies that adopt the immersive AR technology in order to improve Computational Thinking (CT) or programming skills, in several contexts. However, there are not sufficient studies that analyze the meaningful characteristics or the advantages and disadvantages of AR in the field. In order to better understand the impact of AR in programming education we performed a systematic literature review. This review analyzes 31 studies in the field. It explores the evolution of this developing technology, the challenges and issues that AR offers and discusses how this work can benefit student learning and further research.}
}
@article{WOLFENGAGEN2024101183,
title = {Building a cognitive system based on process interaction},
journal = {Cognitive Systems Research},
volume = {83},
pages = {101183},
year = {2024},
issn = {1389-0417},
doi = {https://doi.org/10.1016/j.cogsys.2023.101183},
url = {https://www.sciencedirect.com/science/article/pii/S1389041723001171},
author = {Viacheslav E. Wolfengagen and Larisa Ismailova and Sergey Kosikov},
keywords = {Computational thinking, Applicative prestructure, Theory of combinators, Cognitive modeling, Computation process, Interaction, Semantic modeling},
abstract = {According to modern notions, computing is not separable from cognitive modeling and activity. This paper continues the tradition of the uniform approach and proposes a small number of general mechanisms that cope with the main known effects of computing as a science — the interaction of objects-as-processes, the interaction of processes with the environment, generalized interaction. As shown, the applicative prestructure (objects-as-processes, application) generates an applicative structure (processes, application, values), which ensures the generation of the result — the value of interactions, enabling the process of evaluation. The theory of combinators is used as the main (meta)mathematical means. A diagram mechanism has been developed that implements the emerging applicative computational system of object interaction and reflects the arity of accompanying the induced information processes. The processes are bidirectional in nature, both with a decrease in arity – reduction, and with an increase in arity – expansion.}
}
@article{OUYANG2023104721,
title = {Effect of augmented reality-based virtual educational robotics on programming students’ enjoyment of learning, computational thinking skills, and academic achievement},
journal = {Computers & Education},
volume = {195},
pages = {104721},
year = {2023},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2022.104721},
url = {https://www.sciencedirect.com/science/article/pii/S0360131522002925},
author = {Fang-Chuan {Ou Yang} and Hui-Min Lai and Yen-Wen Wang},
keywords = {Augmented and virtual reality, Improving classroom teaching, Teaching strategies, Learning strategies},
abstract = {The use of educational robotics for programming education has been shown to be effective in fostering students’ computational thinking (CT) skills. However, physical educational robots are expensive, which may limit their wide use in the classroom. This study used augmented reality technology to develop a virtual educational robotic system (AR Bot for short), which offers 3D visual learning feedback to strengthen spatial ability, as well as delayed feedback and auto-scoring feedback to promote students’ deeper CT processes. To examine the impact of AR Bot on programming learning, this study used a quasi-experimental design to compare an experimental group of 41 first-year university students who used AR Bot and a control group of 34 first-year university students who used Scratch. We assessed the impact of the two CT tools on students’ internal learning processes (enjoyment of learning), CT skills (problem decomposition, algorithm design, and algorithm efficiency skills), and academic achievement. The results showed that students who used AR Bot had higher enjoyment of learning, algorithm design skills, and algorithm efficiency skills but not higher problem decomposition skills and academic achievement than students who used Scratch. Enjoyment of learning led to higher problem decomposition, algorithm design, and algorithm efficiency skills but not academic achievement. Problem decomposition and algorithm design skills, but not algorithm efficiency skills, led to academic achievement. The theoretical and practical implications of the proposed tool and other CT tools in programming education are discussed.}
}
@article{KIM2025103508,
title = {Playful design for AI Literacy: Creating inclusive learning and assessment opportunities},
journal = {International Journal of Human-Computer Studies},
volume = {199},
pages = {103508},
year = {2025},
issn = {1071-5819},
doi = {https://doi.org/10.1016/j.ijhcs.2025.103508},
url = {https://www.sciencedirect.com/science/article/pii/S1071581925000655},
author = {Yoon Jeon Kim and Gyeongri Kim and Andy Stoiber},
keywords = {Playful learning, Playful design, Asset-based learning, AI Literacy},
abstract = {Artificial Intelligence is reshaping human interactions with technology and society at large, yet public awareness of its prevalence remains limited, fostering misconceptions and raising concerns about its potential to perpetuate societal inequities. In this paper, we argue that AI literacy is a foundational skill akin to reading and numeracy, and advocate for its broad integration into educational curricula beyond traditional STEM domains. Despite various initiatives promoting AI literacy in K-12 education, existing efforts predominantly focus on computational skills, excluding many underrepresented students. The paper proposes inclusive learning opportunities that decouple AI literacy from computational thinking by centering on playful activities. By investigating the implementation of a playful AI curriculum, we provide qualitative evidence that demonstrates how playful design features can offer authentic and engaging learning opportunities, even for students who might face barriers.}
}
@article{ARFE2020103807,
title = {The effects of coding on children's planning and inhibition skills},
journal = {Computers & Education},
volume = {148},
pages = {103807},
year = {2020},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2020.103807},
url = {https://www.sciencedirect.com/science/article/pii/S0360131520300099},
author = {Barbara Arfé and Tullio Vardanega and Lucia Ronconi},
keywords = {Coding, Computational thinking, Executive function, Primary school children, Problem-solving},
abstract = {Computational thinking (CT) and the coding element of it are progressively entering in the primary school curriculum worldwide. Yet, little is known about the effects of these skills on children's cognitive development. In a cluster-randomized controlled trial, we examined how 1st-grade children's gains in coding skills that follow instructional intervention transfer to two important executive functions (EFs): planning and response inhibition. One-hundred seventy-nine (179) first graders from 5 schools and 10 class groups, with no prior experience of coding, were randomly assigned to an experimental (coding, 5 classes) or control (standard STEM, 5 classes) instructional condition. The experimental intervention involved 8 h of coding activities (two weekly lessons for 4 weeks), through the Code.org platform. Children in the control group were exposed to standard STEM instruction. Four coding tasks drawn from Code.org, two standardized planning tasks (Elithorn maze test and Tower of London, ToL, test) and two standardized response inhibition tasks (NEPSY-II inhibition subtest and numerical Stroop), were used to assess children's skills at the pretest and posttest (after the instructional intervention). To measure retention, the same skills were also assessed for 44 children from the experimental group 5 weeks from the posttest (follow up). The results show that practice with coding through Code.org not only improved measurably children's ability to solve coding problems, but also their EFs, increasing the time children spent planning, their ability to solve standardized planning tasks, and to inhibit prepotent responses. Such findings add to the still limited literature on the cognitive effects of coding, deepening our understanding of the positive implications of introducing Computational Thinking early in the school curriculum.}
}
@article{SILVIS2022100491,
title = {Children caring for robots: Expanding computational thinking frameworks to include a technological ethic of care},
journal = {International Journal of Child-Computer Interaction},
volume = {33},
pages = {100491},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2022.100491},
url = {https://www.sciencedirect.com/science/article/pii/S2212868922000241},
author = {Deborah Silvis and Jody Clarke-Midura and Jessica F. Shumway and Victor R. Lee and Selendra Mullen},
keywords = {Educational robotics, Child–robot interaction, Ethic of care, Classroom learning, Relationships, Feminist theory},
abstract = {Computational thinking (CT) is receiving growing attention in educational contexts, where robot coding toys are becoming a widely available means of teaching and learning early computing. As the field of child–computer interaction continues to define what it means for young children to think computationally, much is unknown about the affective dimensions of children’s interactions with computers, for example how children care for materials like coding robots and how they establish social responsibility in computational environments. This paper examines these questions in the context of an early childhood coding curriculum designed to support CT in Kindergarten. Children’s talk and interactions with robots provide insight into how they were learning to care for and maintain robots when they malfunctioned. Drawing together feminist perspectives on computing, constructionism, and care, we develop a notion of a technological ethic of care and locate this in children’s early coding experiences. Through critical discourse analysis, we present two cases where groups of children interacted with each other, their teachers, and a robot called Cubetto, establishing forms of responsibility for technology. We argue that an ethic of care must be part of computational discourses in an era of climate change, where caring for technologies and keeping them in working order is key to sustainable socio-ecological relations.}
}
@article{BAYAGA2024100491,
title = {Enhancing M Enhancing mathematics problem-solving skills in AI-driven environment: Integrated SEM-neural network approach},
journal = {Computers in Human Behavior Reports},
volume = {16},
pages = {100491},
year = {2024},
issn = {2451-9588},
doi = {https://doi.org/10.1016/j.chbr.2024.100491},
url = {https://www.sciencedirect.com/science/article/pii/S2451958824001246},
author = {Anass Bayaga},
keywords = {Gamification, AI, Digitisation, Education, Higher-order thinking, Game-based learning},
abstract = {This study explores the nexus of gamification, artificial intelligence (AI), and mathematics cognition. Sample size of 71 responded in an intervention using game-based learning (GBL) approach. The purpose of designing the GBL was to enhance computational thinking and mathematical skills. The research employed multigroup partial least squares structural equation modelling (MGA-PLS-SEM) and artificial neural networks (ANN) through multilayer perceptron (MLP) as data analysis technique. The findings showed significant positive influence on class engagement, attitudes toward mathematics, as well as student performance. The analysis also revealed gender-related variations, which affirmed the model's consistency across diverse groups. The study validated the hypothesis and consequently advocated for the transformative potential of gamification, in preparation of 21st-century learners for AI-driven digital landscape. The implications are to ensure the integration of gamified elements into educational strategies, benefiting educators, curriculum developers, and policymakers resonating strongly for educators, curriculum developers, and policymakers.}
}
@article{SUN2022104457,
title = {Programming attitudes predict computational thinking: Analysis of differences in gender and programming experience},
journal = {Computers & Education},
volume = {181},
pages = {104457},
year = {2022},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2022.104457},
url = {https://www.sciencedirect.com/science/article/pii/S0360131522000288},
author = {Lihui Sun and Linlin Hu and Danhua Zhou},
keywords = {Computational thinking, Programming attitudes, Programming experience, Gender, Students, Junior high school},
abstract = {Programming attitude has received increasing attention in programming and computational thinking (CT) education. However, at present, analysis remains scant on the correlation between students' programming attitudes and their CT skills, and less attention is paid to the influencing effects of gender and programming experience. This study first validated a newly developed programming attitudes scale (χ2/df = 2.308, RMSEA = 0.073, CFI = 0.925, TLI = 0.912) among 1180 seventh-grade students (12–13 years old). It then analyzed the relationship between students' programming attitudes and CT skills considering gender differences. Students' programming attitudes significantly predicted their CT skills. Girls have higher CT skills than boys, but their more negative programming attitudes may affect their continued skill development. Third, the relationship among programming experience, programming attitudes, and CT skills was discussed among the sample (N = 175) with programming experience, revealing that programming attitudes played an intermediary role between programming experience and CT skills. Two specific factors of programming experience (first time learning programming and programming learning duration) had differing effects on students' programming attitudes and CT skills. For programming attitudes, the grade in which students got started with programming had no effect on their programming attitudes, but programming attitudes rose with increased programming learning time. For CT, students who learned programming starting in second grade possessed the highest CT level. In addition, there is an inverted U-shaped curve between students' programming learning duration and CT skills, peaked at the fourth year of programming learning career. Implications for promoting junior high school students’ CT skills and their positive attitudes toward programming are also discussed.}
}
@article{SIMONSMEIER2025102699,
title = {The effects of programming interventions in early childhood: A meta-analysis},
journal = {Learning and Individual Differences},
volume = {120},
pages = {102699},
year = {2025},
issn = {1041-6080},
doi = {https://doi.org/10.1016/j.lindif.2025.102699},
url = {https://www.sciencedirect.com/science/article/pii/S1041608025000755},
author = {Bianca A. Simonsmeier and Kristin Kampmann and Jacqueline Staub and Ronny Scherer},
keywords = {Computational thinking, Early childhood education, Meta-analysis, Programming intervention, Robotics},
abstract = {While recent meta-analyses confirm the positive effects of programming interventions in school and university students, it is still unclear whether teaching programming in early childhood settings is similarly effective. Our meta-analysis clarifies this issue by synthesizing the effects of programming interventions for 3- to 7-year-old children. Moreover, we propose and employ a taxonomy for instructional approaches commonly used in programming interventions to systematically analyze the relevance of instructional design. The results from 25 early childhood studies and 82 effect sizes showed a medium overall effect of d = +0.73, 95 % CI [0.51, 0.96]. Programming interventions effectively enhanced programming knowledge, computational thinking, mathematics knowledge, and cognitive skills. Our findings highlight the effectiveness of unplugged over screen-based activities and interventions, including robotics, over those using other program outputs. The results provide educators with valuable information about instructional methods. The taxonomy can guide researchers and educators in implementing instructional strategies when teaching programming.
Educational relevance statement
The current meta-analysis extends the current understanding of programming interventions by summarizing the existing body of literature on the effectiveness of programming interventions in young children. Since there exists a growing interest in teaching programming to young children, the results make a useful contribution to determine its effectiveness and to identify effective instructional characteristics. The found results indicate that programming interventions are indeed significantly effective in early childhood to enhance a variety of outcomes. Further, the analyses provide information that allow educators to implement age-appropriate programming interventions in educational settings (e.g., by using unplugged programming activities or including robotics).}
}
@incollection{HWU2023433,
title = {Chapter 19 - Parallel programming and computational thinking},
editor = {Wen-mei W. Hwu and David B. Kirk and Izzat {El Hajj}},
booktitle = {Programming Massively Parallel Processors (Fourth Edition)},
publisher = {Morgan Kaufmann},
edition = {Fourth Edition},
pages = {433-446},
year = {2023},
isbn = {978-0-323-91231-0},
doi = {https://doi.org/10.1016/B978-0-323-91231-0.00002-1},
url = {https://www.sciencedirect.com/science/article/pii/B9780323912310000021},
author = {Wen-mei W. Hwu and David B. Kirk and Izzat {El Hajj}},
keywords = {Strong scaling, weak scaling, Amdahl’s law, algorithm selection, algorithmic complexity, problem decomposition, output-centric decomposition, input-centric decomposition, gather, scatter, approximation},
abstract = {This chapter introduces the concept of computational thinking. It first reviews the main goals of parallel programming. It then discusses the thinking process of algorithm selection and problem decomposition. For a given problem the programmer will typically have to select from a variety of algorithms. Some of these algorithms achieve different tradeoffs while maintaining the same numerical accuracy. Others involve sacrificing some level of accuracy to achieve much more scalable running times. For the selected algorithm, different choices of problem decomposition can result in different levels of interference between threads, parallelism exposed, load imbalance, and other performance considerations during parallel execution. Computational thinking skills allow an algorithm designer to work around the roadblocks and reach a good solution.}
}
@article{SUN2021100926,
title = {Improving 7th-graders’ computational thinking skills through unplugged programming activities: A study on the influence of multiple factors},
journal = {Thinking Skills and Creativity},
volume = {42},
pages = {100926},
year = {2021},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2021.100926},
url = {https://www.sciencedirect.com/science/article/pii/S1871187121001413},
author = {Lihui Sun and Linlin Hu and Danhua Zhou},
keywords = {Computational thinking, Unplugged programming, Influencing factors, Students, Junior high school},
abstract = {Programming is an important way to cultivate students’ computational thinking (CT) skills, which is the essential ability of students in the 21st century. As one of the mainstream forms of programming education activities, unplugged programming activities are mainly implemented in the early stage of basic education. However, considering the lack of programming experience among Chinese junior high schoolers and the uneven distribution of programming education resources, an 8-week quasi-experimental study was conducted to verify the effectiveness of unplugged activities in improving junior high schoolers’ CT skills, and to identify the influence of multiple factors. A total of 93 7th-graders volunteered to participate in the experiment: 62 students were divided into two experimental groups, which were intervened by unplugged activities to repeat the results’ reliability, and 31 students were used as the control group without any unplugged programming activities. The results of the intra-group and inter-group comparison show that unplugged programming is a more effective way to improve 7th-graders’ CT skills. Students’ mathematic performance and previous programming experience had a significant impact on their CT skills, but this impact is not reflected in the process of unplugged programming activities. It can be said that all students can develop their CT skills through unplugged programming activities, regardless of their learning background. In the current context, unplugged programming activities can be used as an effective way for junior high schoolers to improve and develop their CT skills. In addition, this paper also discusses the enlightenment to improve students’ CT skills.}
}
@article{CHAN2021e07922,
title = {Learning number patterns through computational thinking activities: A Rasch model analysis},
journal = {Heliyon},
volume = {7},
number = {9},
pages = {e07922},
year = {2021},
issn = {2405-8440},
doi = {https://doi.org/10.1016/j.heliyon.2021.e07922},
url = {https://www.sciencedirect.com/science/article/pii/S2405844021020259},
author = {Shiau-Wei Chan and Chee-Kit Looi and Weng Kin Ho and Wendy Huang and Peter Seow and Longkai Wu},
keywords = {Number patterns, Computational thinking, Rasch model, Quasi-experiment, Mathematics education},
abstract = {Despite the increasing presence of computational thinking (CT) in the mathematics context, the connection between CT and mathematics in a practical classroom context is an important area for further research. This study intends to investigate the impact of CT activities in the topic of number patterns on the learning performance of secondary students in Singapore. The Rasch model analysis was employed to assess differences of ability between students from the experimental group and control group. 106 Secondary One students (age 13 years old) from a secondary school in Singapore took part in this study. A quasi-experimental non-equivalent groups design was utilized where 70 students were assigned into the experimental group, and 36 students were assigned into the control group. The experimental group was given intervention with CT-infused activities both on- and off-computer, while the control group received no such intervention. Both groups were administered the pretest before the intervention and the posttest after the intervention. The data gathered were analyzed using the partial credit version of the Rasch model. Analysis of pretest and posttest results revealed that the performance of the experimental group was similar to the control group. The findings did not support the hypothesis that integrating CT in lessons can result in improved mathematics learning. However, the drastic improvement was observed in individual students from the experimental group, while there is no obvious or extreme improvement for the students from the control group. This study provides some new empirical evidence and practical contributions to the infusion of CT practices in the mathematics classroom.}
}
@article{RELKIN2021104222,
title = {Learning to code and the acquisition of computational thinking by young children},
journal = {Computers & Education},
volume = {169},
pages = {104222},
year = {2021},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2021.104222},
url = {https://www.sciencedirect.com/science/article/pii/S0360131521000993},
author = {E. Relkin and L.E. {de Ruiter} and M.U. Bers},
keywords = {Computational thinking, Coding, Early childhood education, Unplugged assessment, Curriculum},
abstract = {This longitudinal study examined changes in Computational Thinking (CT) skills in first and second grade students exposed to a developmentally appropriate coding curriculum. The “Coding as Another Language” (CAL) curriculum spans seven weeks and uses the KIBO robot to engage students in learning that integrates programming and literacy concepts. We compared children receiving CAL (N = 667) to a control group (N = 181) who participated in typical classroom activities without coding (No-CAL). TechCheck, a validated “unplugged” CT assessment suitable for young children regardless of their coding experience, was used to measure CT. Over the course of the study, children who received CAL-KIBO improved on TechCheck (Mchange = 0.94, p < .001) whereas the No-CAL group did not change significantly (Mchange = 0.27, p = .07). Accounting for demographic factors, baseline performance and classroom (teacher) effects, CAL exposure was a significant predictor of post-test CT scores (p < .01). Improvements in CT measured by TechCheck over seven weeks of the CAL-KIBO curriculum were consistent with approximately six months of development without coding instruction. Secondary analysis stratified by grade revealed decisive evidence that CAL exposure improved scores in first grade and anecdotal evidence that second grade scores improved. The CT domains that showed improvement in children who received CAL-KIBO included algorithms, modularity, and representation. Young children who learned to code improved in solving unplugged problems that were not explicitly taught in the coding curriculum. This provides evidence that a developmentally appropriate curriculum for teaching young children to code can accelerate their acquisition of CT skills.}
}
@article{KONG2020106230,
title = {Formation of computational identity through computational thinking perspectives development in programming learning: A mediation analysis among primary school students},
journal = {Computers in Human Behavior},
volume = {106},
pages = {106230},
year = {2020},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2019.106230},
url = {https://www.sciencedirect.com/science/article/pii/S0747563219304492},
author = {Siu Cheung Kong and Yi Qing Wang},
keywords = {Computational identity, Computational thinking perspectives, Identity formation, Programming education, Situated learning theory, Structural equation modeling},
abstract = {This study aimed at investigating whether Computational Thinking (CT) Perspectives can foster Computational Identity (CI) among primary school students in programming learning from the perspective of situated learning theory. This study conceptualized CT perspectives as a multidimensional construct that comprises (1) ability to connect, (2) ability to question, and (3) ability to express, and CI with four subcomponents including (1) programming affiliation, (2) programming engagement, (3) programming actualization, and (4) programming goal setting. Students who received at least 6-month programming training for computational thinking development were invited to participate in this study. Results of Confirmatory Factor Analysis (CFA) suggested that the CT perspectives instrument (n = 100) and CI instrument (n = 241) reached good fit and therefore were validated in the pilot study. In the main study, survey answers (N = 215) including CT perspectives and CI were collected. Results of Structural Equation Modeling (SEM) showed positive relationships between CT perspectives and CI formation among primary school students. Mediation results further revealed that ability to question can foster CI formation through ability to express, while ability to connect can directly foster CI formation. Implications were discussed at the end of the study.}
}
@article{STUPURIENE2024104939,
title = {Teachers’ perceptions of the barriers and drivers for the integration of Informatics in primary education},
journal = {Computers & Education},
volume = {208},
pages = {104939},
year = {2024},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2023.104939},
url = {https://www.sciencedirect.com/science/article/pii/S0360131523002166},
author = {Gabrielė Stupurienė and Margarida Lucas and Pedro Bem-Haja},
keywords = {Primary education, Teacher professional development, Thematic analysis, Network analysis, Informatics education},
abstract = {A growing trend of integrating and teaching Informatics and Computational Thinking (CT) skills at primary education levels poses different challenges for teachers. Research demonstrates that it is challenging to introduce Informatics in schools without well-prepared teachers. In this paper, we examine Lithuanian teachers' perceptions of the barriers and drivers to integrate the renewed Informatics curricula in primary education and the relation between them. Fifteen semi-structured interviews were conducted with primary school teachers, and a mixed-methods approach was employed to analyze them. The results show that explicit guidelines for renewed curricula and motivation to learn Informatics are both identified as the main barriers and drivers for integrating Informatics. The study further highlights the critical role of resources, appropriate tools, and guidelines in facilitating the successful implementation of Informatics. The study provides knowledge that could, for instance, benefit teacher training programmes and help better understand how teachers can be better supported to meet current and future challenges.}
}
@article{SALEEM2024100124,
title = {Understanding 21st century skills needed in response to industry 4.0: Exploring scholarly insights using bibliometric analysis},
journal = {Telematics and Informatics Reports},
volume = {13},
pages = {100124},
year = {2024},
issn = {2772-5030},
doi = {https://doi.org/10.1016/j.teler.2024.100124},
url = {https://www.sciencedirect.com/science/article/pii/S2772503024000100},
author = {Sumayya Saleem and Elizabeth Dhuey and Linda White and Michal Perlman},
keywords = {21st century skills, Industry 4.0, Bibliometric analysis, Co-citation, Bibliographic coupling},
abstract = {International policy agendas are increasingly focusing on the 21st century skills needed by future workers in response to Industry 4.0. In this study, we conduct a bibliometric analysis of 2662 articles published by 6579 authors in the last two decades to understand the structure of the scholarly knowledge in this field. We first identify influential articles, documents, journals and trends in this literature. We use co-citation analysis to identify foundational themes in the development of 21st century skills literature, then using bibliometric coupling, we identify communities in the current research front. We then use co-word analysis to identify future directions in the field. Overall, we find that research on 21st century skills has grown exponentially in the past two decades, however, few researchers focus primarily on this topic. The existing research is primarily dominated by psychologists, education researchers and technology researchers. We also find that specific disciplines such as industrial engineering and nursing are prominent contributors in the field, and that critical thinking and computational thinking are key areas of focus.}
}
@article{PAPAVLASOPOULOU2020105939,
title = {Coding activities for children: Coupling eye-tracking with qualitative data to investigate gender differences},
journal = {Computers in Human Behavior},
volume = {105},
pages = {105939},
year = {2020},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2019.03.003},
url = {https://www.sciencedirect.com/science/article/pii/S0747563219300950},
author = {Sofia Papavlasopoulou and Kshitij Sharma and Michail N. Giannakos},
keywords = {Coding, Computational thinking, Eye-tracking, Gender differences, Learning strategies},
abstract = {Computational thinking and coding are becoming an integral part of K-12 education, with female students being underrepresented in such subjects. The proliferation of technological tools and programming environments offers the opportunity for creative coding activities for children and increases the need for appropriate instructional practices. In this study, we design and evaluate a coding workshop for children. Our goal is to examine differences between boys and girls using eye-tracking as an objective measure and triangulating the findings with qualitative data coming from children's interviews. The results show no statistically significant difference between female and male gaze and learning gain during the coding activity; interestingly, the qualitative data show differences in the strategies and implemented practices during coding, and in perceptions about those coding activities. Our results highlight that further studies need to utilize objective measures and unveil necessary differences in the design and implementation of coding activities. Furthermore, our results provide objective evidence that female students do not lack in competences compared to boys, but simply that they have a different approach during coding activities and different perspectives about coding, an approach that needs to be cultivated and nurtured.}
}
@article{VOURLETSIS2022100069,
title = {Exploring the effect of remixing stories and games on the development of students' computational thinking},
journal = {Computers and Education Open},
volume = {3},
pages = {100069},
year = {2022},
issn = {2666-5573},
doi = {https://doi.org/10.1016/j.caeo.2021.100069},
url = {https://www.sciencedirect.com/science/article/pii/S2666557321000409},
author = {Ioannis Vourletsis and Panagiotis Politis},
keywords = {Elementary education, Games, Learning communities, 21st century abilities},
abstract = {Computational thinking (CT) is broadly recognised as a set of problem-solving methods that involve expressing problems and their solutions in ways that enable their computer-mediated representation across a variety of fields. Nowadays, it is argued that CT needs to be expanded towards new pathways that establish a less individualistic and more social CT. One of these pathways consists of modifying and sharing versions of projects that other members of the community have created, but few researchers have investigated how it might be applied to primary school pupils. In this study we aimed to address the effect of a CT course on (a) primary school students’ reusing and remixing proficiency level and (b) the CT concepts they modify while they engage in reusing and remixing Scratch projects. Forty pairs of participants worked with Scratch, a block-based visual programming language, remixing projects related to stories and games. Data collection involved semi-structured interviews, a rubric, and an online analytical tool, Dr. Scratch. The results of the analysis suggest that our instructional intervention, and especially game remixing activities, can improve students’ reusing and remixing proficiency; however, students modify different CT concepts when they remix stories and games.}
}
@article{ZHA2022104623,
title = {A mixed-method cluster analysis of physical computing and robotics integration in middle-grade math lesson plans},
journal = {Computers & Education},
volume = {190},
pages = {104623},
year = {2022},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2022.104623},
url = {https://www.sciencedirect.com/science/article/pii/S0360131522001944},
author = {Shenghua Zha and Yi Jin and Rebecca Wheeler and Erin Bosarge},
keywords = {Applications in subject areas, Improving classroom teaching, Secondary education},
abstract = {This study analyzed 281 lesson plans collected from the producers’ websites of 12 educational physical computing and robotics (ePCR) devices. We extracted and coded five variables from each lesson. They were ePCR functionality, coding skills, computational thinking skills, math knowledge, and activity design. First, a two-step cluster analysis was administered to find how three ePCR-related knowledge: ePCR functionality, coding skills, and computational thinking skills, were integrated to teach students ePCR technology in middle-grade math lessons. Results showed three types of lesson plans, including lessons to use basic ePCR functionality to teach students lower-level CT skills, lessons to teach students basic to intermediate coding skills, and lessons to use the technology at the advanced level. Next, we applied the Technological Pedagogical Content Knowledge (TPACK) framework and conducted a second two-step cluster analysis to identify how the technology (ePCR technology), content (math knowledge), and pedagogy (activity design) were integrated into those lesson plans. Results suggested ten clusters of lesson plans with distinct features. We summarized those ten lesson clusters into five categories: 1) ePCR technology lessons, 2) transdisciplinary problem-based learning lessons, 3) technology-assisted lessons, 4) lessons without real-world connections, and 5) lessons integrating middle-grade math learning into ePCR projects. Implications for educators and researchers were discussed at the end of the article.}
}
@article{SJODAHL2023100573,
title = {Abstracting and decomposing in a visual programming environment},
journal = {International Journal of Child-Computer Interaction},
volume = {36},
pages = {100573},
year = {2023},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2023.100573},
url = {https://www.sciencedirect.com/science/article/pii/S2212868923000107},
author = {Anna Sjödahl and Andreas Eckert},
keywords = {21st century abilities, Computational thinking, Abstraction, Decomposition, Elementary education},
abstract = {A growing body of research concerned with computational thinking (CT) has emerged the last couple of years, but there is still a lack of consensus about the definition of CT. There are also gaps in the understanding of how young children manifest CT. With this paper, we contribute to the field by taking an action perspective with the CT of K-3 students. The analysis focus on iterative acts of abstraction and decomposition as a core process that elicits development of CT. We call these iterative acts the Abstraction/Decomposition spiral (AD spiral). By illustrating the AD spiral through the actions of two first grade students, the analysis shows how visual representation of an emerging solution, and the development of a plan are two important elements when young students solve problems in a coding context, developing their CT.}
}
@article{LECORCHICK2020655,
title = {Problem Solving Archetype - Computer Science},
journal = {Procedia Computer Science},
volume = {172},
pages = {655-659},
year = {2020},
note = {9th World Engineering Education Forum (WEEF 2019) Proceedings : Disruptive Engineering Education for Sustainable Development},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2020.05.085},
url = {https://www.sciencedirect.com/science/article/pii/S1877050920314149},
author = {Douglas Lecorchick and Scott Nichols and Lauren Tabor},
keywords = {problem formulation, computational thinking, problem solving archetype},
abstract = {Problems that are carefully formulated lead students to develop more sufficient and realistic solutions. By front-loading the process of problem solving through problem formulation, students are able to reduce the amount of time spent on solution development, and thus increase their efficiency towards meeting their main objective. By teaching students problem formulation, especially in computer science related activities, foundational skills in computational thinking are introduced, used, and refined. Using a problem solving archetype as a means for this formulation is an effective tool for students to leverage. As computational thinking skills are honed, these concepts can translate across barriers into other content areas.}
}
@article{POLLAROLO2024100637,
title = {Play with Coding Toys in Early Childhood Education and Care: Teachers’ Pedagogical Strategies, Views and Impact on Children's Development. A Systematic Literature Review},
journal = {Entertainment Computing},
volume = {50},
pages = {100637},
year = {2024},
issn = {1875-9521},
doi = {https://doi.org/10.1016/j.entcom.2024.100637},
url = {https://www.sciencedirect.com/science/article/pii/S1875952124000053},
author = {Enrico Pollarolo and Sofia Papavlasopoulou and Francesca Granone and Elin Reikerås},
keywords = {Coding toys, Communication skills, Computational thinking, Early childhood education and care, Teachers’ pedagogical strategies, Problem-solving},
abstract = {This paper presents a systematic literature review that aims to portray an overview of pedagogical strategies that Early Childhood Education and Care (ECEC) teachers adopt to support children’s play with coding toys. In addition, the article synthesizes findings about teachers’ views in relation to the use of coding toys in ECEC and describes the outputs that the existing literature identifies as children’s development after play activities with coding toys. The systematic literature search was performed in accordance with the PRISMA-2020 statement, and the initial search across four databases (Eric, Scopus, Web of Science, and Academic Research Ultimate) for papers published between January 2010 and May 2022 yielded 2672 peer-reviewed articles. Following the first evaluation, the application of the inclusion and exclusion criteria resulted in a shortlist of 22 papers. The results show different strategies that the teachers can use during play activities with coding toys, assuming the roles of facilitators and mediators through collaborative work, allowing children to try and fail. Moreover, the results revealed that ECEC teachers largely hold positive and constructive attitudes towards the use of coding toys. Findings also highlight positive outcomes regarding children’s development across various cognitive and socio-emotional skills such as problem solving, computational thinking and communication. As an improvement, future studies should focus on identifying appropriate pedagogies that may be applied in tandem with the technology to maximise the pedagogical benefits for the children as well as adequate training for teachers.}
}
@article{BOCZAR2025102564,
title = {Refining nascent interventions through emergent design evaluation},
journal = {Evaluation and Program Planning},
volume = {111},
pages = {102564},
year = {2025},
issn = {0149-7189},
doi = {https://doi.org/10.1016/j.evalprogplan.2025.102564},
url = {https://www.sciencedirect.com/science/article/pii/S014971892500031X},
author = {Dylan Boczar and Bianca Montrosse-Moorhead and Ido Davidesco},
keywords = {participatory approach, emergent, emergent design evaluation, design-based research, formative evaluation},
abstract = {Evaluating nascent educational interventions requires a specific kind of evaluation theory. This paper provides a case example of the emergent design evaluation approach, one theory created for use with developing interventions, but that has limited examples within published literature for practitioners to learn from. The emergent design evaluation theory was used to evaluate the design and implementation of a high school biology unit integrating computational thinking and neural engineering, including teacher professional development and a web-based application. A contribution of this paper, beyond the case example it provides, is that the emergent design evaluation was combined with design-based research, a complementary approach. Consistent with the practices uniquely characteristic of emergent design evaluation, this paper describes critical points or key occasions in which aspects of the intervention influence the evaluation process, or vice versa, including the nature and direction of influence. By demonstrating the process of combining emergent design evaluation and design-based research, this paper adds to discussions within the field about how to intentionally weave together different knowledge generation approaches that both meet evaluation demands and align with the evaluation context.}
}
@article{FANG2025105264,
title = {Understanding the gender divide in digital literacy in four European countries: A comprehensive decomposition analysis using unconditional quantile regression},
journal = {Computers & Education},
volume = {229},
pages = {105264},
year = {2025},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2025.105264},
url = {https://www.sciencedirect.com/science/article/pii/S0360131525000326},
author = {Guangbao Fang and Jiaxin Wang and Philip Wing Keung Chan and Penelope Kalogeropoulos},
keywords = {Gender divide, Computer and information literacy, Computational thinking, Oaxaca-Blinder decomposition, Unconditional quantile regression decomposition},
abstract = {Digital literacy is crucial for adolescents’ future, yet significant gender divides persist, particularly in Computer and Information Literacy (CIL) and Computational Thinking (CT). This study examines the gender divide in CIL and CT among adolescents in four European countries, highlighting the gender-based disparities in digital literacy development. Based on ICILS 2018 data, this research identifies factors contributing to gender divides in CIL and CT using regression and decomposition methods. Findings indicate that females outperform males in CIL, while males excel in CT. Gender divides decrease as the percentiles of students’ proficiency levels increase. The explained portion of the gender divide in CIL and CT is consistently smaller than the unexplained portion across countries, suggesting that gender divide or unobserved factors may drive these divides. A comparison of OLS regression results with decomposition approaches indicates that the factors influencing digital literacy development differ from those contributing to the gender divide. Variation in the factors contributing to gender divides is greater across countries than within countries for both CIL and CT. These findings highlight the need to consider national digital environments and socio-cultural contexts in addressing gender divides in digital literacy. This study offers insights for policymakers and educators to address the gender divide in digital literacy.}
}
@article{KONG2020103872,
title = {Teacher development in computational thinking: Design and learning outcomes of programming concepts, practices and pedagogy},
journal = {Computers & Education},
volume = {151},
pages = {103872},
year = {2020},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2020.103872},
url = {https://www.sciencedirect.com/science/article/pii/S0360131520300713},
author = {Siu-Cheung Kong and Ming Lai and Daner Sun},
keywords = {Computational thinking, CT concepts, CT practices, Teacher development, TPACK},
abstract = {The implementation of effective professional development courses for K-12 teachers on computational thinking (CT) in relation to programming remains a challenge. There is a lack of high-quality empirical research on teacher development in CT in relation to programming. This study addressed that situation by providing empirical evidence of the design and evaluation of such a teacher development program in primary schools. Seventy-six in-service teachers participated in a program comprising two 39-h courses. One course focused on the fundamental subject knowledge of programming for CT development together with pedagogy. The other focused on the development of advanced knowledge while providing opportunities to practice teaching in the classroom and to reflect on the practice. The results indicate that the participants developed a better understanding of CT concepts and practices and improved in three of the four content knowledge related dimensions of technological pedagogical content knowledge (TPACK) across the two courses. The three dimensions were content knowledge of programming for CT development, technological content knowledge of the use of block-based programming environments for programming for CT development, and use of the environment to teach programming for CT development with the appropriate pedagogy in context. Analysis of the participants' self-reported reflections suggested that the two courses and the teaching experience acquired during the prolonged second course were the two main sources of improvement. This study demonstrates the importance of providing an effective teacher development program with a focus on CT concepts and practices. The program offers teachers a sustained period in which to practice in the classroom and reflect on their teaching while developing their capacity to implement CT in relation to programming.}
}
@article{KASPERSEN2021100302,
title = {Towards a model of progression in computational empowerment in education},
journal = {International Journal of Child-Computer Interaction},
volume = {29},
pages = {100302},
year = {2021},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100302},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921000325},
author = {Magnus Høholt Kaspersen and Daniel Graungaard and Niels Olof Bouvin and Marianne Graves Petersen and Eva Eriksson},
keywords = {Computational thinking, Computational empowerment, Education},
abstract = {In this paper, we present a model for progression in computational empowerment in education. Computational empowerment (CE) expands computational thinking (CT) by adding a focus on empowering citizens to critically engage with technology, but currently lacks an articulation of what characterises progression towards CE. Through combining aims from computational thinking with computational empowerment, and structure progression using the SOLO taxonomy, we take the first steps towards a model for understanding and articulating progression in computational empowerment. The model has been applied in the analysis of four CE-focused research projects. Based on the analysis, we propose that computational empowerment is a matter of reaching a high competency level regarding computational concepts, computational practices and reflexivity regarding the effect of technology in one’s own life and in society. Finally, by formulating examples of learning goals, we illustrate how the model can be used by teachers and researchers to articulate, determine and compare CE learning goals, so that learning goals are aligned and complement each other from one stage to the next.}
}
@article{RICH2021104196,
title = {Measuring the effect of continuous professional development on elementary teachers’ self-efficacy to teach coding and computational thinking},
journal = {Computers & Education},
volume = {168},
pages = {104196},
year = {2021},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2021.104196},
url = {https://www.sciencedirect.com/science/article/pii/S0360131521000737},
author = {Peter J. Rich and Stacie L. Mason and Jared O'Leary},
keywords = {Professional development, Computational thinking, Coding, Self-efficacy, Elementary education},
abstract = {Interest in coding education has exploded in the past five years, especially in elementary and early secondary education. Teachers who are largely new to coding are expected to guide entire student bodies through the fundamentals of coding and computational thinking. But little is known about which coding and computational thinking (CT) concepts teachers feel most comfortable with and which concepts they struggle with. This study describes 127 elementary coding teachers’ changes in their beliefs about teaching coding and CT as they participated in year-long continuous professional development. Novice elementary coding teachers demonstrated most growth in their self-efficacy for teaching sequences, algorithms and loops. They were less secure in their knowledge of conditionals, variables, and functions. For computational thinking, teachers were most confident in their ability to identify patterns, think algorithmically, understand logic, and evaluate outcomes, showing less growth with decomposition and abstraction.}
}
@article{WEI2021104023,
title = {The effectiveness of partial pair programming on elementary school students’ Computational Thinking skills and self-efficacy},
journal = {Computers & Education},
volume = {160},
pages = {104023},
year = {2021},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2020.104023},
url = {https://www.sciencedirect.com/science/article/pii/S0360131520302219},
author = {Xuefeng Wei and Lin Lin and Nanxi Meng and Wei Tan and Siu-Cheung Kong and  Kinshuk},
keywords = {Elementary education, Classroom teaching, Computational thinking, Partial pair programming, Self-efficacy, Pair collaborative learning},
abstract = {Computational thinking (CT) skills are becoming essential in all aspects of work and life, and CT has become part of the K-12 curriculum around the world. Yet, more research is needed to better understand how to help elementary school students acquire CT skills effectively. The purpose of this study was to examine the effectiveness of partial pair programming (PPP) on elementary school students' CT skills and self-efficacy (SE). The study included four 4th grade classes, with a total of 171 students, who were taking the course entitled “Computational Thinking with Scratch” with the same teacher for one semester. Two classes (84 students) were in the Experimental Group (EG, 44 boys and 40 girls) while two other classes (87 students) were in the Control Group (CG, 45 boys and 42 girls). The students in the EG were paired up for the programming assignments while the students in the CG did the assignments on their own. The results showed that the students in the EG improved their CT skills and SE more significantly than those in the CG group. There was a low correlation between CT and SE in the post-test of both groups. The interviews with the teacher and the students afterwards provided insights in understanding the results. The findings suggest that in K-12 programming teachers could use PPP as an effective approach to improve students’ CT skills, programming SE, and beyond.}
}
@article{OCAK2023100146,
title = {An AI-enhanced pattern recognition approach to temporal and spatial analysis of children's embodied interactions},
journal = {Computers and Education: Artificial Intelligence},
volume = {5},
pages = {100146},
year = {2023},
issn = {2666-920X},
doi = {https://doi.org/10.1016/j.caeai.2023.100146},
url = {https://www.sciencedirect.com/science/article/pii/S2666920X23000255},
author = {Ceren Ocak and Theodore J. Kopcha and Raunak Dey},
keywords = {Computational thinking (CT), Multimodality, Embodied interactions, Artificial Intelligence (AI), Machine learning},
abstract = {Multimodal video analysis is a complex and time-consuming process for a researcher; it entails capturing, watching, and re-watching video data to identify which segments best inform or address the questions that drive the research. Modern AI applications can alleviate the challenges that arise during the fine-grained analysis of learners' multimodal interactions captured through video. In this study, we present a supervised approach to training a deep neural network to analyze children's computational thinking (CT) captured through multimodal video data. The approach first uses a set of images extracted from video data to train the AI to map them to labels generated using a priori theory. Confusion matrices were used to establish the performance of the AI by comparing AI predictions to human analysis on a validation set of data. The findings suggested that the AI classified several aspects of children's CT in a way that was highly consistent with human analysis, demonstrating how the AI could serve as an additional team member during multimodal analysis. Implications for using AI to ease the challenges of multimodal analysis of video data are discussed.}
}
@incollection{PIERREROBERTSON2025695,
title = {Literacies},
editor = {David Baker and Lucy Ellis},
booktitle = {Encyclopedia of Libraries, Librarianship, and Information Science (First Edition)},
publisher = {Academic Press},
edition = {First Edition},
address = {Oxford},
pages = {695-702},
year = {2025},
isbn = {978-0-323-95690-1},
doi = {https://doi.org/10.1016/B978-0-323-95689-5.00116-4},
url = {https://www.sciencedirect.com/science/article/pii/B9780323956895001164},
author = {Petronetta Pierre-Robertson},
keywords = {Algorithmic literacy, Artificial intelligence, Computational thinking, Computer literacy, Critical literacy, Digital literacy, Information literacy, Internet literacy, Librarians and literacy, Libraries and literacy, Literacy, Media literacy, New literacies, Technology literacy, Transliteracy.},
abstract = {This entry provides the definition, etymology and history of literacy. It comments on the expansion of literacy in the technological age to embrace new literacies. It then defines ten literacies that can be incorporated under the concept of new literacies. These are information literacy and associated literacies like digital literacy, digital media literacy, internet literacy, technology literacy, computer literacy, computational thinking, critical literacy, algorithmic literacy, and transliteracy. It touches on the importance of new literacies in today’s continuously evolving digital world and gives trends for the future, with specific reference to Artificial Intelligence (AI). The relevance of libraries and librarians concerning each of the literacies is included.}
}
@article{HSU2023104657,
title = {Effects of voice assistant creation using different learning approaches on performance of computational thinking},
journal = {Computers & Education},
volume = {192},
pages = {104657},
year = {2023},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2022.104657},
url = {https://www.sciencedirect.com/science/article/pii/S0360131522002287},
author = {Ting-Chia Hsu and Ching Chang and Yi-Wei Lin},
keywords = {Artificial intelligence, Computational thinking, Experiential learning, Student learning behaviour, Voice assistant},
abstract = {Designing artificial intelligence (AI) artefact learning has gone beyond command-line-based instruction, to include a low-barrier threshold with block-based programming. Such instructional design must not solely emphasise AI workings. Rather, it must offer students computational thinking (CT) practice to support their AI-related artefact creation while reducing their AI anxiety about future job replacement or sociotechnical blindness. In this study, this research explored an experiential learning approach to improve CT along with AI application capabilities when engaging undergraduate students in creating a voice assistant application (VA app). A total of 56 students participated in the study. The control group (CG) of 26 students used a conventional subject-based learning method, while the experimental group (EG) of 30 students adopted an experiential learning method. This study aimed to examine the differences in the learning achievement of CT and AI concept, as well as the perspectives of AI anxiety, and CT; in the meanwhile, this study analysed the students' learning behaviours using sequential behavioural analysis to discuss the learning process. Results showed that the CT ability of the EG was better than that of the CG, although no significant difference was found between the two groups’ AI concepts and anxiety. The behaviour analysis also revealed that the EG students were willing to ask more questions, and conducted their VA evaluation, whereas the CG students were inclined to focus on the input and output of knowledge, and replicated what the teacher presented. Suggestions and implications are given for future research.}
}
@article{CHEVALIER2022104431,
title = {The role of feedback and guidance as intervention methods to foster computational thinking in educational robotics learning activities for primary school},
journal = {Computers & Education},
volume = {180},
pages = {104431},
year = {2022},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2022.104431},
url = {https://www.sciencedirect.com/science/article/pii/S0360131522000021},
author = {Morgane Chevalier and Christian Giang and Laila El-Hamamsy and Evgeniia Bonnet and Vaios Papaspyros and Jean-Philippe Pellet and Catherine Audrin and Margarida Romero and Bernard Baumberger and Francesco Mondada},
keywords = {Collaborative learning, Elementary education, Improving classroom teaching, Teaching/learning strategies, 21st-century abilities},
abstract = {Computational thinking (CT) is considered an emerging competence domain linked to 21st-century competences, and educational robotics (ER) is increasingly recognised as a tool to develop CT competences. This is why researchers recommend developing intervention methods adapted to classroom practice and providing explicit guidelines to teachers on integrating ER activities. The present study thus addresses this challenge. Guidance and feedback were considered as critical intervention methods to foster CT competences in ER settings. A between-subjects experiment was conducted with 66 students aged 8 to 9 in the context of a remote collaborative robot programming mission, with four experimental conditions. A two-step strategy was employed to report students' CT competence (their performance and learning process). Firstly, the students' CT learning gains were measured through a pre-post-test design. Secondly, video analysis was used to identify the creative computational problem-solving patterns involved in the experimental condition that had the most favourable impact on the students’ CT scores. Results show that delayed feedback is an effective intervention method for CT development in ER activities. Subject to delayed feedback, students are better at formulating the robot behaviour to be programmed, and, thus, such a strategy reinforces the anticipation process underlying the CT.}
}
@article{RAPTI2025101849,
title = {A bibliometric and content analysis of educational robotics’ impact on communication, collaboration, critical thinking, and creativity in kindergarten},
journal = {Thinking Skills and Creativity},
volume = {57},
pages = {101849},
year = {2025},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2025.101849},
url = {https://www.sciencedirect.com/science/article/pii/S1871187125000987},
author = {Sophia Rapti and Sokratis Tselegkaridis and Theodosios Sapounidis and Serafeim A. Triantafyllou},
keywords = {Kindergarten, Communication, Collaboration, Critical thinking, Creativity, Bibliometric analysis, Content analysis},
abstract = {Communication, collaboration, critical thinking, and creativity are 21st-century skills required to be developed in educational settings from an early age. Robotics seems to contribute to that. Therefore, this study focuses on kindergarten and explores the current research trends regarding children’s development of these skills via robotics. It aims to a) construct links between the main factors in the existing research, b) map the related field, and identify gaps to enhance our understanding. In this context, a bibliometric analysis using the Bibliometrix package and CiteSpace and a content analysis utilizing the Atlas.ti Software is employed covering 203 of 3822 studies conducted between 2014 and December 2024. Based on the findings, the most frequently examined topics are social-anthropomorphic robots, human-robot interaction, and computational thinking under the umbrella of educational robotics and skills development. The highest publication performance belongs to the USA, Italy, Japan, China, and Greece. The strongest sources are ACM, IEEE International Conference on Human-Robot Interaction, the Education and Information Technologies Journal, the International Journal of Child-Computer Interaction, and the Computers and Education Journal. Besides, Papert, Wing, and Bers arise as the most influential authors. Furthermore, most studies explore one or two C-skills, examining critical thinking the most and creativity the least during interventions focused on several domains but rarely on skills promotion. Moreover, most researchers choose the qualitative method, using small sample sizes, wheeled, floor robots, and various learning theories in short-term interventions. Finally, robots are utilized as assistive instruction kits, teammates, and educators’ assistants while children act as researchers-constructors.}
}
@article{KWON2025100253,
title = {Gender disparities in K-12 computer science education: Status, contributing factors, and instructional approaches},
journal = {Computers and Education Open},
volume = {8},
pages = {100253},
year = {2025},
issn = {2666-5573},
doi = {https://doi.org/10.1016/j.caeo.2025.100253},
url = {https://www.sciencedirect.com/science/article/pii/S2666557325000126},
author = {Kyungbin Kwon and Sang Joon Lee and Keunjae Kim},
keywords = {Gender disparity, CS education, Systematic review, Computational thinking, K-12 education},
abstract = {This study conducts a systematic review of the literature to investigate gender disparities in K-12 computer science (CS) education. We selected articles published in peer-reviewed journals that focused on both cognitive and affective aspects of computational thinking and CS education at the primary and secondary levels. A total of 29 studies were reviewed, and their findings were synthesized to assess the status of gender disparities, contributing factors, and instructional approaches. The results indicated that gender differences in cognitive and affective dimensions of CS education become more evident as students advance through school, with a greater negative impact on girls. The review identified three interconnected factors contributing to these disparities: socio-cultural influences, educational environments, and individual psychological factors. Additionally, the study proposed instructional approaches to address these issues and recommended future research to fill the current gaps in CS education research.}
}
@article{TANG2020103798,
title = {Assessing computational thinking: A systematic review of empirical studies},
journal = {Computers & Education},
volume = {148},
pages = {103798},
year = {2020},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2019.103798},
url = {https://www.sciencedirect.com/science/article/pii/S0360131519303483},
author = {Xiaodan Tang and Yue Yin and Qiao Lin and Roxana Hadad and Xiaoming Zhai},
keywords = {Evaluation methodologies, Teaching/learning strategies, Information literacy, Applications in subject areas, 21st century abilities, Computational thinking},
abstract = {With the increasing attention to Computational Thinking (CT) in education, there has been a concomitant rise of needs and interest in investigating how to assess CT skills. This study systematically reviewed how CT has been assessed in the literature. We reviewed 96 journal articles to analyze specific CT assessments from four perspectives: educational context, assessment construct, assessment type, and reliability and validity evidence. Our review results indicate that (a) more CT assessments are needed for high school, college students, and teacher professional development programs, (b) most CT assessments focus on students' programming or computing skills, (c) traditional tests and performance assessments are often used to assess CT skills, and surveys are used to measure students’ CT dispositions, and (d) more reliability and validity evidence needs to be collected and reported in future studies. This review identifies current research gaps and future directions to conceptualize and assess CT skills, and the findings are expected to be beneficial for researchers, curriculum designers, and instructors.}
}
@article{ARNEDOMORENO2025100850,
title = {Programming Fun(damentals): Using commercial video games to teach basic coding to adult learners},
journal = {Entertainment Computing},
volume = {52},
pages = {100850},
year = {2025},
issn = {1875-9521},
doi = {https://doi.org/10.1016/j.entcom.2024.100850},
url = {https://www.sciencedirect.com/science/article/pii/S1875952124002180},
author = {Joan Arnedo-Moreno and David García-Solórzano},
keywords = {e-learning, Game based learning, Video games, Programming games, Computational thinking, Self-efficacy},
abstract = {The acquisition of computational thinking and coding skills is of special significance in helping adult learners keep pace with a new context where those skills are required for many parts of the workforce. However, there is an agreement in the scientific literature that important challenges exist, such as keeping student engagement and the requirement of developing problem-solving skills, and not just learning the code syntax. The inclusion of digital Game-Based Learning (GBL) has shown great potential. To better understand how it can be helpful to adult learners in STEM degrees, a study was conducted on the application of two very popular commercial video games in different introductory programming courses at an online university, during the introduction of basic programming topics (CS1). The methods combined a descriptive qualitative and a quantitative approach, using a reflective journals and questionnaires, which helped students consider and express their experiences, how they interacted with the games, how the games helped them better understand the topics, and realize their personal progress and potential. Results showed that the use of these games as educational resources had a positive impact in their engagement and sense of self-efficacy, but only if some important instructional considerations are taken into account.}
}
@article{DIAGO2022100388,
title = {Exploring the development of mental rotation and computational skills in elementary students through educational robotics},
journal = {International Journal of Child-Computer Interaction},
volume = {32},
pages = {100388},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100388},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921000854},
author = {Pascual D. Diago and José A. González-Calero and Dionisio F. Yáñez},
keywords = {Educational robotics, Computational thinking, Mental rotation, Bee-bot, Elementary education, Tangible user interface},
abstract = {Interest in educational robotics has increased over the last decade. Through various approaches, robots are being used in the teaching and learning of different subjects at distinct education levels. The present study investigates the effects of an educational robotic intervention on the mental rotation and computational thinking assessment in a 3rd grade classroom. To this end, we carried out a quasi-experimental study involving 24 third-grade students. From an embodied approach, we have designed a two-hour intervention providing students with a physical environment to perform tangible programming on Bee-bot. The results revealed that this educational robotic proposal aimed at map-reading tasks leads to statistically significant gains in computational thinking. Moreover, students who followed the Bee-bot-based intervention achieved greater CT level compared to students following a traditional instruction approach, after controlling student’s prior level. No conclusive results were found in relation to mental rotation.}
}
@article{DELOLMOMUNOZ2020103832,
title = {Computational thinking through unplugged activities in early years of Primary Education},
journal = {Computers & Education},
volume = {150},
pages = {103832},
year = {2020},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2020.103832},
url = {https://www.sciencedirect.com/science/article/pii/S0360131520300348},
author = {Javier {del Olmo-Muñoz} and Ramón Cózar-Gutiérrez and José Antonio González-Calero},
keywords = {Computational thinking, Elementary education, Evaluation methodologies, Gender studies, Teaching/learning strategies},
abstract = {The inclusion of computational thinking (CT) in the classroom is something that the present and future society is demanding. However, this domain remains largely unexplored, especially in the first years of Primary Education. The purpose of this study is to evaluate whether the inclusion of the so-called unplugged activities favours the development of CT in the students of the early years of Primary Education. To this end, a quasi-experimental study has been carried out to explore the eventual benefit of a mixed approach that combines both unplugged and plugged-in activities. In particular, 84 second-grade students took part in the experiment. Three questions were evaluated: the development of their CT skills, their motivation towards the proposed instruction, and the influence of students' gender in the two previous areas. The intervention was designed on a selection of activities extracted from Code.org courses, and was divided into two phases, one in which one group worked with unplugged activities and the other with plugged-in activities, and a second where both groups worked with plugged-in activities. Analysing the three proposed questions through tests performed before, in between and after the instruction, it is concluded that the inclusion of unplugged activities in the instruction seems beneficial taking into account CT, motivation and gender.}
}
@article{LUO2020103759,
title = {Exploring the evolution of two girls’ conceptions and practices in computational thinking in science},
journal = {Computers & Education},
volume = {146},
pages = {103759},
year = {2020},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2019.103759},
url = {https://www.sciencedirect.com/science/article/pii/S0360131519303124},
author = {Feiya Luo and Pavlo D. Antonenko and E. Christine Davis},
keywords = {Computational thinking integration, Elementary education, Science education, Robotics, Girls in STEM},
abstract = {As the definition of computational thinking (CT) in education continues to evolve, researchers have investigated the integration of CT in K-12 learning contexts and students' perceptions and development of CT in these integrated learning experiences. Drawing on prior work, this study explored the evolution of two elementary school girls’ conceptions and practices of CT in science as they participated in a four-week CT-integrated science unit at a summer camp using the Dash robot and the Blockly app. Three CT concepts: loops, sequences, and conditionals, were integrated into a unit on the reproduction cycle of flowerless plants. Observations, participant drawings, and analysis of Blockly code revealed that the children improved in their CT practices. In addition, the CT-integrated science unit developed for this study successfully engaged both participants, even when one expressed a low interest in science. The study suggested that defining computing vocabulary, using checkpoint activities with immediate and corrective feedback, and scaffolding of coding concepts with unplugged activities were particularly necessary in promoting CT and the integration of CT and science education in an elementary-level informal learning context.}
}
@article{KERT2020100714,
title = {The effect of robotics on six graders’ academic achievement, computational thinking skills and conceptual knowledge levels},
journal = {Thinking Skills and Creativity},
volume = {38},
pages = {100714},
year = {2020},
issn = {1871-1871},
doi = {https://doi.org/10.1016/j.tsc.2020.100714},
url = {https://www.sciencedirect.com/science/article/pii/S1871187120301887},
author = {Serhat Bahadır Kert and Mehmet Fatih Erkoç and Sabiha Yeni},
keywords = {Programming education, Robotics, Block-based programming, Computational thinking, Conceptual knowledge level},
abstract = {This study compared the pedagogical effects of educational robot development and the block-based programming perspectives, which are used in programming education, on middle school students. Its participants were 78 sixth graders. Considering the students’ preferences, 38 students were assigned to the experimental group, which studied with robotics (Lego EV3) sets, and 40 students were assigned to the control group, which studied with block-based programming environment (Scratch). All the topics of the programming unit, which are shown in the methods section, were taught to both groups for 10 weeks using the two different approaches. The change created by the implementation between the groups was tested for academic achievement, computational thinking skill efficacy perceptions, and conceptual knowledge levels. The results indicate that educational robotics develop middle school students’ academic achievement and computational thinking skill efficacy perceptions more effectively than block-based programming environments. The connections between the concepts of the students who did robotics were also found to be more solid than those who worked with block-based software.}
}
@article{ANGELI2020105954,
title = {Developing young children's computational thinking with educational robotics: An interaction effect between gender and scaffolding strategy},
journal = {Computers in Human Behavior},
volume = {105},
pages = {105954},
year = {2020},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2019.03.018},
url = {https://www.sciencedirect.com/science/article/pii/S0747563219301104},
author = {Charoula Angeli and Nicos Valanides},
keywords = {Computational thinking, Spatial relations, Scaffolding, Pre-primary school children, Educational robotics, Bee-Bot},
abstract = {The study examined the effects of learning with the Bee-Bot on young boys' and girls' computational thinking within the context of two scaffolding techniques. The study reports statistically significant learning gains between the initial and final assessment of children's computational thinking skills. Also, according to the findings, while both boys and girls benefited from the scaffolding techniques, a statistically significant interaction effect was detected between gender and scaffolding strategy showing that boys benefited more from the individualistic, kinesthetic, spatially-oriented, and manipulative-based activity with the cards, while girls benefited more from the collaborative writing activity. In regards to the children's problem-solving strategies during debugging, the results showed that the majority of them used decomposition as a strategy to deal with the complexity of the task. These results are important, because they show that children at this very young age are able to cope with the complexity of a learning task by decomposing it into a number of subtasks that are easier for them to tackle. The research contributes to the body of knowledge about the teaching of computational thinking. In addition, the study has practical significance for curriculum developers, instructional leaders, and classroom teachers, as they can use the results of this study to design curricula and classroom activities with a focus on the broader set of computational thinking skills, and not only coding.}
}
@article{JIN2024104114,
title = {DVRT: Design and evaluation of a virtual reality drone programming teaching system},
journal = {Computers & Graphics},
volume = {125},
pages = {104114},
year = {2024},
issn = {0097-8493},
doi = {https://doi.org/10.1016/j.cag.2024.104114},
url = {https://www.sciencedirect.com/science/article/pii/S0097849324002498},
author = {Zean Jin and Yulong Bai and Wei Song and Qinghe Yu and Xiaoxin Yue and Xiang Jia},
keywords = {Virtual reality, STEM, Graphical programming, Drones},
abstract = {Virtual Reality (VR) is an immersive virtual environment generated through computer technology. VR teaching, by utilizing an immersive learning model, offers innovative learning methods for Science, Technology, Engineering and Mathematics (STEM) education as well as programming education. This study developed a Drone Virtual Reality Teaching (DVRT) system aimed at beginners in drone operation and programming, with the goal of addressing the challenges in traditional drone and programming education, such as difficulty in engaging students and lack of practicality. Through the system's curriculum, students learn basic drone operation skills and advanced programming techniques. We conducted a course experiment primarily targeting undergraduate students who are beginners in drone operation. The test results showed that most students achieved scores above 4 out of 5, indicating that DVRT can effectively promote the development of users' comprehensive STEM literacy and computational thinking, thereby demonstrating the great potential of VR technology in STEM education. Through this innovative teaching method, students not only gain knowledge but also enjoy the fun of immersive learning.}
}
@article{KASPERSEN2022100539,
title = {High school students exploring machine learning and its societal implications: Opportunities and challenges},
journal = {International Journal of Child-Computer Interaction},
volume = {34},
pages = {100539},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2022.100539},
url = {https://www.sciencedirect.com/science/article/pii/S2212868922000575},
author = {Magnus Høholt Kaspersen and Karl-Emil Kjær Bilstrup and Maarten {Van Mechelen} and Arthur Hjort and Niels Olof Bouvin and Marianne Graves Petersen},
keywords = {Computational empowerment, Computational thinking, Machine learning, Learning tools, AI literacy},
abstract = {The increased use of AI and machine learning (ML) calls for a general AI literacy, in particular regarding understanding how ML works, the process behind creating ML models, and reflecting on its implications. Where existing learning tools focus on the first two, we explore opportunities and challenges for meaningfully engaging students in understanding and reflecting on ML in their everyday life. We designed VotestratesML, following a Constructive Design Research approach, as an ethics-first learning tool that allow students to explore implications of ML for democratic elections. Based on deployments of VotestratesML in two high school social studies classrooms, we found that safely exploring ML from a concrete starting point helped students reflect and form opinions about its use, that promoting iterative exploration through collaboration and competition motivated them to explore, and that foregrounding ethics in the design and grounding ML in a well-known subject area allowed them to engage with ML on a personal level.}
}
@article{THEODOROPOULOS2022100525,
title = {Participatory design and participatory debugging: Listening to students to improve computational thinking by creating games},
journal = {International Journal of Child-Computer Interaction},
volume = {34},
pages = {100525},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2022.100525},
url = {https://www.sciencedirect.com/science/article/pii/S2212868922000459},
author = {Anastasios Theodoropoulos},
keywords = {Participatory design, Participatory debugging, Computational thinking, Game-design, Game debugging},
abstract = {Computational Thinking (CT) is considered a fundamental ability for the 21st century, since it develops problem-solving skills. Debugging is a key aspect of CT and by its very nature, closely related to the idea of problem-solving since it is the process of finding and resolving bugs within programs. Moreover, participatory methods expect a high degree of activity and personal involvement of participants in the learning process. This study explores Participatory Design (PD) and Participatory Debugging (PDeb) approaches by teaching CT skills in school secondary education level through (a) designing and developing games in App Inventor, following a PD process and (b) identifying bugs/failures in the code of games, following a PDeb approach. The idea in PDeb is to make students identify issues in their code in order to solve a problem, allowing them to discover new ways and ideas for creating mobile games. For this reason, 41 students took part into this study, in a series of 6 weekly workshops. The study provides guidelines for using PD and PDeb approaches to incorporate games into computing education more effectively. We search and discuss aspects of participatory debugging used in game-design for educational purposes, together with methodological limitations and recommendations for further work in this area.}
}
@article{BERS2023394,
title = {Coding as another language: Research-based curriculum for early childhood computer science},
journal = {Early Childhood Research Quarterly},
volume = {64},
pages = {394-404},
year = {2023},
issn = {0885-2006},
doi = {https://doi.org/10.1016/j.ecresq.2023.05.002},
url = {https://www.sciencedirect.com/science/article/pii/S0885200623000571},
author = {Marina Umaschi Bers and Jessica Blake-West and Madhu Govind Kapoor and Tess Levinson and Emily Relkin and Apittha Unahalekhaka and Zhanxia Yang},
keywords = {Design-based research, Coding, Computational Thinking, Powerful Ideas, ScratchJr},
abstract = {This paper describes the iterative research and evaluation of the Coding as Another Language (CAL) curriculum that utilizes the free ScratchJr programming language in kindergarten to second grade. CAL was designed using principles of three theoretical frameworks: Curriculum Research Framework (CRF), which proposes different phases in the creation of research-based curriculum; Constructionism, which presents a computationally-rich project-based methodology based on identifying powerful ideas from a learning domain; and Positive Technological Development, which intentionally integrates socio-emotional and ethical dimensions into curricular experiences. The pedagogical foundation of CAL involves the understanding of coding as a literacy, that is, putting developmentally-appropriate powerful ideas of computer science in conversation with those taught in language arts. The paper first describes CAL and then presents results from both a pilot study and a cluster randomized controlled trial that set to evaluate CAL's feasibility and impact on students’ learning outcomes. Our findings showed that the CAL curriculum was not only feasible to implement, but also effective for improving coding skills. However, CAL's impact on computational thinking is less clear given that in the cluster randomized controlled trial, both the control and the intervention groups improved equally on a measure of computational thinking.}
}
@article{ASBELLCLARKE2021106587,
title = {The development of students’ computational thinking practices in elementary- and middle-school classes using the learning game, Zoombinis},
journal = {Computers in Human Behavior},
volume = {115},
pages = {106587},
year = {2021},
issn = {0747-5632},
doi = {https://doi.org/10.1016/j.chb.2020.106587},
url = {https://www.sciencedirect.com/science/article/pii/S0747563220303344},
author = {J. Asbell-Clarke and E. Rowe and V. Almeda and T. Edwards and E. Bardar and S. Gasca and R.S. Baker and R. Scruggs},
keywords = {Computational thinking, Assessment, Game-based learning},
abstract = {This paper reports on a research study of 45 classes in US schools (grades 3–8) using Zoombinis, a popular Computational Thinking (CT) learning game for ages 8 to adult. The study examined the relationship among student gameplay, related classroom activity, and the development of students’ CT practices in Zoombinis classes. A combination of research methods, including educational data-mining on game data logs, cluster analysis on teacher logs of classroom activity, and multilevel modeling, was used to determine the impact of the duration and nature of student gameplay, as well as the extent and nature of classroom activity, on student CT practices. Automated detectors of gameplay CT practices built for this research were significant predictors of external post-assessment scores, and thus show promise as implicit assessments of CT practices within gameplay. Students with high duration of gameplay and high gameplay CT practices scored highest on external post-assessment of CT practices, when accounting for pre-assessment scores. This research suggests that Zoombinis is an effective CT learning tool and CT assessment tool for elementary- and middle-school students.}
}
@article{LOVE2022100543,
title = {A screen-based or physical computing unit? Examining secondary students’ attitudes toward coding},
journal = {International Journal of Child-Computer Interaction},
volume = {34},
pages = {100543},
year = {2022},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2022.100543},
url = {https://www.sciencedirect.com/science/article/pii/S2212868922000617},
author = {Tyler S. Love and Reuben S. Asempapa},
keywords = {Computational thinking, Physical computing, Integrated STEM education, Design and technology, Technology and engineering education, Tangible interaction},
abstract = {In recent years there has been a growing emphasis placed on access to computational thinking (CT) instruction for every K-12 student in the United States (U.S.). Concurrently, calls for integrating CT concepts within authentic science, technology, engineering, and mathematics (STEM) contexts have also increased. This is reflected by the inclusion of CT in the Next Generation Science Standards and the Standards for Technological and Engineering Literacy. However, methods for teaching CT concepts within secondary level STEM courses vary drastically. Physical computing, the design and programming of physical systems or devices using computational thinking skills, has become increasingly popular in the U.S. in attempts to integrate CT within authentic STEM problem-solving contexts. Despite this rise in popularity, there remains a limited but growing body of research investigating physical computing pedagogy and student learning. A mixed methods design was used in this study to examine 170 middle school students’ attitudes toward coding and after participating in either a screen-based or physical computing unit. The results indicated that students who completed the screen-based unit reported statistically greater attitudes toward the classroom applications and career/future use of computing concepts. Students in the treatment group believed that physical computing made learning computing concepts more difficult, but they preferred the hands-on learning opportunities provided by physical computing. Furthermore, male students reported higher attitudinal ratings than females regarding the influence computing would have on their future academic and career choices. This study provides implications for improving physical computing instruction and integration within STEM education contexts.}
}
@article{TERROBA2021143,
title = {Education intervention using a ground robot with programmed directional controls: observational analysis of the development of computational thinking in early childhood education},
journal = {Revista de Psicodidáctica (English ed.)},
volume = {26},
number = {2},
pages = {143-151},
year = {2021},
issn = {2530-3805},
doi = {https://doi.org/10.1016/j.psicoe.2021.03.002},
url = {https://www.sciencedirect.com/science/article/pii/S2530380521000113},
author = {Marta Terroba and Juan Miguel Ribera and Daniel Lapresa and M. Teresa Anguera},
keywords = {computation, robotics, pre-primary school, observational methodology, T-patterns, computación, robótica, Educación Infantil, metodología observacional, T-patterns},
abstract = {The present work presents an intervention proposal for the development of computational thinking in early childhood education, through the use of a ground robot with programmed directional controls. Within the use of observational methodology, an observation system has been designed that allows the analysis and interpretation of the behavior displayed in the performance of the intervention proposal. The reliability of the observation system has been guaranteed in the form of inter-observer agreement, calculated using Cohen’s (1960) Kappa coefficient. Within the theory of generalizability, the measurement plan [Categories] [Steps]/[Participants], has allowed to verify a high precision reliability of the generalization of the results. The operability of the observation system has been reflected in the regular behavior structures (T-patterns) detected -through the Theme software-, which have allowed characterizing difficulties in the assimilation of an incipient computational language related to the ability of spatial orientation and the sequencing capacity of children -situations involving turning and number of commands used in the sequence-.
Resumen
El presente artículo presenta una propuesta de intervención para el desarrollo del pensamiento computacional en Educación Infantil, mediante un robot de suelo con mandos de direccionalidad programada. En el seno de la metodología observacional, se ha diseñado un sistema de observación que permite el análisis e interpretación de la conducta desplegada en el desempeño de la propuesta de intervención. La fiabilidad del sistema de observación se ha garantizado en forma de concordancia interobservadores, calculada a través del coeficiente Kappa de Cohen (1960). En el seno de la teoría de la generalizabilidad, el plan de medida [Categorías] [Steps]/ [Participantes], han permitido constatar una elevada fiabilidad de precisión de generalización de los resultados. La operatividad del sistema de observación ha quedado reflejada en las estructuras regulares de conducta (T-patterns) detectadas -mediante el software Theme-, que han permitido caracterizar dificultades en la asimilación de un lenguaje computacional incipiente relacionadas con la capacidad de orientación espacial y la capacidad de secuenciación del niño -situaciones que implican giro y número de comandos empleados en la secuencia-.}
}
@article{ARSLANYILMAZ2023100414,
title = {Eye-gaze data to measure students’ attention to and comprehension of computational thinking concepts},
journal = {International Journal of Child-Computer Interaction},
volume = {38},
pages = {100414},
year = {2023},
issn = {2212-8689},
doi = {https://doi.org/10.1016/j.ijcci.2021.100414},
url = {https://www.sciencedirect.com/science/article/pii/S2212868921000982},
author = {Abdurrahman Arslanyilmaz and John Sullins},
keywords = {Eye-gaze, Attention, Assessment, Learning, Computational thinking concepts},
abstract = {There is no agreed-upon assessment to evaluate learning of computational thinking concepts (CTCs), and none of the previous ones analyzed students’ eye-gaze measures over CTCs. This study investigates use of eye-gaze data over various CTCs, and tests the validity of eye-gaze data as an effective assessment instrument to measure learning of CTCs. Students’ eye-gaze data (FD: Fixation Duration, SA: Saccade Amplitude, RF: Regression Frequency) over CTCs were collected and correlated over seven sessions. The eye-gaze data were also correlated with quiz scores to test its validity in evaluating learning of CTCs. There was a statistically significant correlation between RFs on conditionals CTC and sessions showing increased frequency of regression in attention to conditionals, and between FDs and quizzes indicating FDs’ validity in measuring the learning of CTCs. These results implicate that FDs are effective in assessing the learning of CTCs and students are revisiting conditionals more often as compared to other CTCs.}
}
@article{GUGGEMOS2021104060,
title = {On the predictors of computational thinking and its growth at the high-school level},
journal = {Computers & Education},
volume = {161},
pages = {104060},
year = {2021},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2020.104060},
url = {https://www.sciencedirect.com/science/article/pii/S036013152030258X},
author = {Josef Guggemos},
keywords = {Computational thinking level and growth, Gender and home environment, Reasoning skills, Motivation, Longitudinal study},
abstract = {Computational thinking (CT) is a key 21st-century skill. This paper contributes to CT research by investigating CT predictors among upper secondary students in a longitudinal and natural classroom setting. The hypothesized predictors are grouped into three areas: student characteristics, home environment, and learning opportunities. CT is measured with the Computational Thinking Test (CTt), an established performance test. N = 202 high-school students, at three time points over one school year, act as the sample and latent growth curve modeling as the analysis method. CT self-concept, followed by reasoning skills and gender, show the strongest association with the level of CT. Computer literacy, followed by duration of computer use and formal learning opportunities during the school year, have the strongest association with CT growth. Variables from all three areas seem to be important for predicting either CT level or growth. An explained variance of 70.4% for CT level and 61.2% for CT growth might indicate a good trade-off between the comprehensiveness and parsimony of the conceptual framework. The findings contribute to a better understanding of CT as a construct and have implications for CT instruction, e.g., the role of computer science and motivation in CT learning.}
}
@article{XU2024100415,
title = {Measuring mutual engagement in the context of middle-school pair programming: Development and validation of a self-reported questionnaire},
journal = {Computers in Human Behavior Reports},
volume = {14},
pages = {100415},
year = {2024},
issn = {2451-9588},
doi = {https://doi.org/10.1016/j.chbr.2024.100415},
url = {https://www.sciencedirect.com/science/article/pii/S2451958824000484},
author = {Fan Xu and Ana-Paula Correia},
keywords = {Mutual engagement, Engagement questionnaire, Dyadic collaborative learning, Pair programming, Computational thinking, Middle school},
abstract = {With the increasing importance of equipping young learners with computational thinking skills through learning to code, pair programming has emerged as a prevalent collaborative learning strategy in this context. Successful pair programming interventions necessitate mutual engagement between partners within a dyad. However, the measurement of mutual engagement in dyadic collaborative learning remains an under-researched area. This research represents a foundational stage in bridging this gap by developing a comprehensive 20-item Pair-Programming Mutual Engagement Questionnaire (PPME-Q) as a measure of mutual engagement in pair programming at the activity level. The questionnaire was validated through a sample of 86 eighth-grade students. Confirmatory factor analysis confirmed the existence of a four-factor structure comprising of the behavioral, cognitive, emotional, and social engagement factors. The findings demonstrate the validity (χ2/df = 1.32) and reliability (Cronbach's α = 0.888) of the PPME-Q, establishing it as an effective tool for assessing eighth graders' mutual engagement in pair programming activities. As this tool is in the nascent stages of development the measurement, we emphasize the need for further empirical studies to establish criterion validity. We also discuss the implications of these findings for future research and educational practices. This targeted instrument can then potentially be adapted or scaled to other age groups based on the insights gained.}
}
@article{WOLFENGAGEN2024101175,
title = {Computationally inspired cognitive modeling},
journal = {Cognitive Systems Research},
volume = {83},
pages = {101175},
year = {2024},
issn = {1389-0417},
doi = {https://doi.org/10.1016/j.cogsys.2023.101175},
url = {https://www.sciencedirect.com/science/article/pii/S1389041723001092},
author = {Viacheslav Wolfengagen and Larisa Ismailova and Sergey Kosikov},
keywords = {AGI, Cognitive modeling, Information process, Channeling, Computational thinking, Semantic information processing, Computational model, Variable domains},
abstract = {A computational approach to cognitive modeling is proposed. The computational model is a parametric construction that takes into account cognitive stages and transitions between them. The cognitive model enables the idea of information processes, from their birth and appearance in a scope, evolution and canceling out their existence and disappearing from the scope. Process habitats are Lawvere’s variable domains; inter-transition is based on the notion of channeled spreading of processes.}
}