@ARTICLE{9360590,
  author={Cruz Castro, Laura M. and Magana, Alejandra J. and Douglas, Kerrie A. and Boutin, Mireille},
  journal={IEEE Access}, 
  title={Analyzing Students’ Computational Thinking Practices in a First-Year Engineering Course}, 
  year={2021},
  volume={9},
  number={},
  pages={33041-33050},
  abstract={This study investigates the relationship between two related computational thinking practices: data practices and computational problem-solving practices in acquiring related computational thinking practices during a first-year undergraduate engineering course. While computational thinking theory is still developing, empirical studies can help further understand how students demonstrate this knowledge and their progression in attaining the practices. Therefore, with this empirical study, the following questions are addressed. RQ1: What are the differences in students' computational thinking practices at the beginning of an undergraduate introductory programming course? RQ 2: How do these differences correspond to the acquisition of more advanced computational thinking practices? The use of a descriptive non-experimental design that aims to understand the correlation between practices related to data and computational problem-solving is presented. A machine learning technique is employed, utilizing historical data from introductory programming for a problem-solving course with more than 1000 first-year engineering students. After identifying groups of students defining different profiles, data from posterior performance in more advanced programming topics were descriptively analyzed. This study supports the characterization of four different student profiles demonstrating differences in their performance at the beginning of the semester. From these four profiles, two of them show a subsequent differential progression besides their similarity at the beginning of the semester. In this particular case, troubleshooting and debugging appear as a relevant competency when distinguishing these two learners' groups. These findings suggest that previous knowledge or exposure to different practices can result in different progressions of more complex computational practices, emphasizing the relevance of troubleshooting and debugging as a practice required for a successful and timely progression on the acquisition of other computational thinking practices.},
  keywords={Computational modeling;Problem-solving;Data models;Taxonomy;Programming profession;Tools;Mathematical model;Engineering education;engineering students;pattern analysis;statistical learning},
  doi={10.1109/ACCESS.2021.3061277},
  ISSN={2169-3536},
  month={},}
@ARTICLE{8130238,
  author={Denning, Peter J.},
  journal={The Computer Journal}, 
  title={Reflections on a Symposium on Computation}, 
  year={2012},
  volume={55},
  number={7},
  pages={799-802},
  abstract={ACM Ubiquity hosted a symposium in 2010–2011 on Turing's question, ‘What is computation?’ The editor reflects on how the symposium was organized and what conclusions it reached. The authors showed strong consensus around the propositions that computation is a process, computational model matters, many computations are natural, many important computations are continuous, many important computations are nonterminating and computational thinking has emerged as a core practice of computing. They left open the questions of whether the Turing model is the best reference model, is computational necessarily a physical process, what is information and what is an algorithm.},
  keywords={algorithm;computation;computational model;computational process;computational thinking;information;information process;interactive computation;natural computation;nonterminating computation;physical computation;reactive computation;turing;turing computability;turing machines},
  doi={10.1093/comjnl/bxs064},
  ISSN={1460-2067},
  month={July},}
@INPROCEEDINGS{5458802,
  author={Liu, Jinglei and Wang, Lihong},
  booktitle={2010 Second International Workshop on Education Technology and Computer Science}, 
  title={Notice of Retraction: Computational Thinking in Discrete Mathematics}, 
  year={2010},
  volume={1},
  number={},
  pages={413-416},
  abstract={This article has been retracted by the publisher.},
  keywords={},
  doi={10.1109/ETCS.2010.200},
  ISSN={},
  month={March},}
@ARTICLE{10124008,
  author={Xie, Zerong and Wong, Gary K. W. and Chiu, Dickson K. W. and Lei, Junru},
  journal={IT Professional}, 
  title={Bridging K–12 Mathematics and Computational Thinking in the Scratch Community: Implications Drawn From a Creative Learning Context}, 
  year={2023},
  volume={25},
  number={2},
  pages={64-70},
  abstract={This study analyzes 15,453 math topic-based Scratch projects of the online Scratch community to find the relations among K–12 math topics, usage of 13 programming elements, and project popularity. Among the six math topics, only statistics and calculus significantly contribute to projecting popularity. In addition, noncore programming elements, including sound and look, are widely adapted across various math topics and contribute significantly to project popularity. Although some studies discussed the integration of computation thinking (CT) and math in the classrooms, scant research focuses on the effect of math topics on CT element adoption for achieving better integration in the creative learning context. Moreover, few studies involve a large sample size for generalizable findings.},
  keywords={Education;Calculus;Programming profession;Lenses},
  doi={10.1109/MITP.2023.3243393},
  ISSN={1941-045X},
  month={March},}
@INPROCEEDINGS{8424711,
  author={Lee, Chien-Sing and Wong, K. Daniel},
  booktitle={2018 IEEE International Conference on Information Reuse and Integration (IRI)}, 
  title={Design-Computational Thinking, Transfer and Flavors of Reuse: Scaffolds to Information and Data Science for Sustainable Systems in Smart Cities}, 
  year={2018},
  volume={},
  number={},
  pages={225-228},
  abstract={This paper investigates how to increase understanding of design and sustainable systems by scaffolding cognitive access and transfer of learning using eclectic approaches to experiment with networks of design potentials. Cognitive access simulates multi-criteria case indexing, refined from knowledge induction derived from analyses of random but related cases based on search strategies. Randomization of the search space encourages emergence of heuristic solutions, fuzzy though informed transfers and further refinement of schema. We investigate the type of navigational structures/design resulting from creative reuse/refactoring and lean management; and whether there will be evidences of knowledge induction from randomized search scaffolded by Case-based Reasoning (CBR), which leads to heuristic transfer and learning. Examples from two courses carried out August-December 2017 within the participatory design-agile framework for engagement in Smart Cities are assessed for creative reuse regarding: a) people, process and tools; b) domain engineering; c) component mining and d) open source vs. systematic reuse. Findings confirm longitudinal insights: CBR-informed but emergent search leading to more efficient and higher quality heuristic transfer and learning is scaffolded by systemic modelling and design dependent on four factors.},
  keywords={Creativity;Information systems;Tools;Project management;Navigation;Systematics;Smart cities;Technology and Engineering Management;design centering;Project management;creativity;reuse, integration},
  doi={10.1109/IRI.2018.00040},
  ISSN={},
  month={July},}
@INPROCEEDINGS{8992608,
  author={Takahashi, Akiyoshi and Shiina, Hiromitsu and Kobayashi, Nobuyuki},
  booktitle={2019 8th International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={Automatic Generation of Program Comments Based on Problem Statements for Computational Thinking}, 
  year={2019},
  volume={},
  number={},
  pages={629-634},
  abstract={To support the understanding of programs and understanding of procedures, we think need to automatically generate comments from source code. As a method, we learn the source code and comment pair by Encoder-Decoder translation model using LSTM, thereby generating comments of the source code that was the target of learning. Though, since it is difficult to increase the amount of learning data when generating comment for problem description, generated comments have some incorrect word for problem sentence. We use program problem sentence to generate comments for source code more suitable for users.},
  keywords={Programming Learning;Comment Generating;Neural Machine Translation;Encoder-Decoder Translation Model;Seq2Seq;TF-IDF},
  doi={10.1109/IIAI-AAI.2019.00132},
  ISSN={},
  month={July},}
@INPROCEEDINGS{9155556,
  author={Minamide, Akiyuki and Takemata, Kazuya and Yamada, Hirofumi},
  booktitle={2020 IEEE 20th International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Development of Computational Thinking Education System for Elementary School Class}, 
  year={2020},
  volume={},
  number={},
  pages={22-23},
  abstract={This paper describes a new programming education method using stickers and a scanner that combine the features of unplugged programming and physical programming. The new materials developed in this study offer superior features compared to commercial materials, such as low cost, use in lower grades class in elementary school, and no need for teacher's ICT skills.},
  keywords={Programming profession;Education;Autonomous automobiles;Task analysis;Information and communication technology},
  doi={10.1109/ICALT49669.2020.00013},
  ISSN={2161-377X},
  month={July},}
@INPROCEEDINGS{4351356,
  author={Pane, John F. and Rosson, Mary Beth},
  booktitle={IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2007)}, 
  title={Broadening the Audience for Computational Thinking:Graduate Student Consortium}, 
  year={2007},
  volume={},
  number={},
  pages={249-249},
  abstract={The fifth annual graduate consortium at VL/HCC addresses the question: How can researchers and designers of end-user development environments better address the needs of an increasingly diverse population?},
  keywords={Information technology;Information systems;Home computing;Engineering profession;Problem-solving;Usability;Conferences;Programming;Feedback;Software},
  doi={10.1109/VLHCC.2007.47},
  ISSN={1943-6106},
  month={Sep.},}
@INPROCEEDINGS{8725223,
  author={Sharaf, Nada and Ahmed, Ghada and Adel, Ahmed and Abdennadher, Slim and Berkling, Kay},
  booktitle={2019 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Koding4Kinder: Teaching Computational Thinking to Pupils Using a Combination of Programming and Electronics Platforms}, 
  year={2019},
  volume={},
  number={},
  pages={634-638},
  abstract={Programming has become a crucial skill in today’s world. Technology and computers are basically part of anything now. President Obama once referred to the importance of children learning programming: “I do not want our young people to just be consumers, I want them to be producers of this technology and to understand it, to feel like they are controlling it, as opposed to it controlling them.” It is thus an increasing need for an individual to know how to write their own programs. With the increasing dependency on computation, one can anticipate such skills being a requirement for most jobs in the coming years. There is a lot of effort done in this area, however most of them focused on either software or hardware track. The aim of this work is to test if using a hybrid approach for teaching K-12 students programming by combining both software and hardware techniques is more effective than using a singleton approach.},
  keywords={Programming profession;Games;Sensors;Education;Software;Hardware},
  doi={10.1109/EDUCON.2019.8725223},
  ISSN={2165-9567},
  month={April},}
@INPROCEEDINGS{8941204,
  author={Bain, Connor and Anton, Gabriella and Horn, Michael and Wilensky, Uri},
  booktitle={2019 IEEE Blocks and Beyond Workshop (B&B)}, 
  title={Position: Building Blocks for Agent-based Modeling Can Scaffold Computational Thinking Engagement in STEM Classrooms}, 
  year={2019},
  volume={},
  number={},
  pages={1-4},
  abstract={Computational models and simulations can be powerful tools to help learners understand a wide variety of natural phenomena. However, understanding and learning from computational models requires learners to comprehend the rules agents follow that lead to emergent outcomes. Blocks-based programming is useful in scaffolding learners in the early stage of programming tasks. We posit that students can authentically interact with agent-based modeling via a blocks-based dialect of the popular ABM language NetLogo, dubbed NetTango, across many difficulty levels. Specifically, we discuss three different activities in which we have integrated blocks-based programming into STEM classrooms that show blocks can be used for activities of increasing computational engagement and difficulty.},
  keywords={Programming;Biological system modeling;Tools;Ecosystems;Agent-based modeling;agent-based modeling;NetLogo;STEM education;blocks-based programming},
  doi={10.1109/BB48857.2019.8941204},
  ISSN={},
  month={Oct},}
@INPROCEEDINGS{4639097,
  author={Pane, John F. and Wiedenbeck, Susan},
  booktitle={2008 IEEE Symposium on Visual Languages and Human-Centric Computing}, 
  title={Expanding the benefits of computational thinking to diverse populations: Graduate student consortium}, 
  year={2008},
  volume={},
  number={},
  pages={253-253},
  abstract={The sixth annual graduate consortium at VL/HCC addresses the question: How can researchers and designers of end-user development environments support computational problem-solving and information manipulation by diverse user populations?},
  keywords={Software;Programming;Problem-solving;Computational modeling;Communities;Visualization;Conferences},
  doi={10.1109/VLHCC.2008.4639097},
  ISSN={1943-6106},
  month={Sep.},}
@INPROCEEDINGS{9676097,
  author={Yang, Jian},
  booktitle={2021 5th International Conference on Electronics, Communication and Aerospace Technology (ICECA)}, 
  title={Design of Java Interactive System Pattern based on Computational Thinking}, 
  year={2021},
  volume={},
  number={},
  pages={1145-1148},
  abstract={With the increasing complexity of data types, the workload of software development is also increasing, and the later maintenance of software becomes very difficult. According to statistics, the vulnerability related to complex data processing occupies a large proportion of software vulnerabilities. The existence of software vulnerability makes the software system vulnerable to attack and affects the reliability of the software system. In this paper, the upper computer system uses the HashMap structure to store the query data directly in the structure and reduce the mapping process from data to table objects. After that, the rationality of the system module is analyzed by building a complex network model, and the robustness of the system is improved by finding the key nodes.},
  keywords={Java;Interactive systems;Computational modeling;Education;Aerospace electronics;Software systems;Data models;Data Type;Software Development;File Structure;Network Model},
  doi={10.1109/ICECA52323.2021.9676097},
  ISSN={},
  month={Dec},}
@INPROCEEDINGS{10605616,
  author={Dorofeeva, V.I. and Stroev, S.P. and Dorofeev, D.Yur.},
  booktitle={2024 4th International Conference on Technology Enhanced Learning in Higher Education (TELE)}, 
  title={On the Issue of Developing Computational Thinking When Teaching Students in the Field of Study Applied Mathematics and Computer Science}, 
  year={2024},
  volume={},
  number={},
  pages={273-276},
  abstract={The goal of modern educational systems is to prepare not just a performer, but a creatively developed personality capable of solving non-standard problems in the changing conditions of professional activity. A higher educational institution requires the introduction of new approaches to teaching that ensure the development of professional, creative, information, and communicative competencies of graduates. The article presents the discipline “Numerical Methods” and “Theory of Computational Experiments”, which are basic for students in the field of Applied Mathematics and Computer Science. The knowledge, skills and abilities obtained while studying the discipline will make it possible to carry out applied projects in the field of mathematics, natural sciences, operations research, and machine learning. These disciplines can also be recommended to students in the areas of training Applied Informatics and Mathematical Support of Information Systems due to the importance of mastering this material and subsequent use in solving applied problems.},
  keywords={Computer science;Training;Operations research;Data analysis;Machine learning;Mathematics;Personnel;computational methods;programming technologies;computer systems},
  doi={10.1109/TELE62556.2024.10605616},
  ISSN={},
  month={June},}
@INPROCEEDINGS{9620585,
  author={Johnson, Andrea E.},
  booktitle={2021 Conference on Research in Equitable and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Making a Case for Studying the Effects of Using GitHub on HBCU Students' Computational Thinking Skills}, 
  year={2021},
  volume={},
  number={},
  pages={1-2},
  abstract={While preparing students for careers beyond graduation, HBCU faculty often have to balance the priorities of bridging the gap between the level of student preparation and the expected level of preparedness as influenced by industry and discipline standards. Prioritization of these standards does not always align with the experience of students at Historically Black College and Universities (HBCU) and Minority Serving Institutions (MSI). The Association of Computing Machinery (ACM) 2013 Computer Science Curricula guidelines highlight version control as one of many core tools in the Social Issues and Professional Practice (SP) Knowledge Area students should experience in their upper-level software engineering courses. Research has demonstrated that at this level, students receive exposure to the tool but are not able to gain sufficient mastery. Other researchers have advocated for version control being introduced earlier in the computer science curricula. There is limited research that indicates that this particular tool improves the learning outcomes for students or significantly complements the other ACM Knowledge Areas. This paper explores the challenges experienced by an HBCU faculty member while integrating GitHub into an advanced programming class. It is important to note, there is no research that directly addresses the use of version control in predominately African American classrooms.},
  keywords={Knowledge engineering;Industries;Engineering profession;Tools;Machinery;Standards;Programming profession;programming education;computing education;version control systems;GitHub},
  doi={10.1109/RESPECT51740.2021.9620585},
  ISSN={},
  month={May},}
@ARTICLE{8743397,
  author={de Souza, Alexandra A. and Barcelos, Thiago S. and Munoz, Roberto and Villarroel, Rodolfo and Silva, Leandro A.},
  journal={IEEE Access}, 
  title={Data Mining Framework to Analyze the Evolution of Computational Thinking Skills in Game Building Workshops}, 
  year={2019},
  volume={7},
  number={},
  pages={82848-82866},
  abstract={Computational thinking has become a required capability in the student learning process, and digital games as a teaching approach have presented promising educational results in the development of this competence. However, properly evaluating the effectiveness and, consequently, student progress in a course using games is still a challenge. One of the most widely implemented ways of evaluation is with an automated analysis of the code developed in the classes during the construction of digital games. Nevertheless, this topic has not yet been explored in aspects such as incremental learning, the model and teaching environment and the influences of acquiring skills and competencies of computational thinking. Motivated by this knowledge gap, this paper introduces a framework proposal to analyze the evolution of computational thinking skills in digital games classes. The framework is based on a data mining technique that aims to facilitate the discovery process of the patterns and behaviors that lead to the acquisition of computational thinking skills, by analyzing clusters with an unsupervised neural network of self-organizing maps (SOM) for this purpose. The framework is composed of a collection of processes and practices structured in data collection, data preprocessing, data analysis, and data visualization. A case study, using Scratch, was executed to validate this approach. The results point to the viability of the framework, highlighting the use of the visual exploratory data analysis, through the SOM maps, as an efficient tool to observe the acquisition of computational thinking skills by the student in an incremental course.},
  keywords={Games;Data mining;Education;Self-organizing feature maps;Conferences;Computer science;Analytical models;computer science education;data mining;data models;education;games;self-organizing feature maps},
  doi={10.1109/ACCESS.2019.2924343},
  ISSN={2169-3536},
  month={},}
@INPROCEEDINGS{10040862,
  author={Caballero-Gonzalez, Yen},
  booktitle={2022 8th International Engineering, Sciences and Technology Conference (IESTEC)}, 
  title={Computational Thinking, a Discipline to Enhance Digital Skills Such as Programming}, 
  year={2022},
  volume={},
  number={},
  pages={354-359},
  abstract={This document presents the results of the development of a learning program on computational thinking through programming challenges with robots oriented to early childhood. The methodological approach used was quantitative, using a quasi-experimental design, taking pretest/posttest measures, with experimental and control groups. The sample of participating students was 46. They belonged to a group of first grade of primary education, aged between 6 and 7 years, in a Spanish educational center. The learning of computational thinking was measured through the following dimensions: algorithmic thinking-sequences, abstraction-patterns and debugging. The learning activities used were an adaptation of the activities proposed in the “TangibleK” robotics curriculum. The results generated show positive effects in relation to the level of achievement reached by the students in the proposed challenges; in other words, there is a significant effect on the mastery of skills related to computational thinking. Differences were found between the pretest and posttest measures of the experimental group. Those of the latter group were statistically significant and higher than those of the control group. Therefore, we can statistically attribute the mastery of computational thinking skills to the participation in the training activities.},
  keywords={Robots;Particle measurements;Atmospheric measurements;Programming profession;Asia;Visualization;Training;learning;teaching;education;information;society;computing},
  doi={10.1109/IESTEC54539.2022.00061},
  ISSN={},
  month={Oct},}
@INPROCEEDINGS{9118395,
  author={Ravikumar, Rejitha and Sadhwani, Pushpa},
  booktitle={2020 Advances in Science and Engineering Technology International Conferences (ASET)}, 
  title={Utilizing a Data analytics project to increase student awareness of contemporary global issues}, 
  year={2020},
  volume={},
  number={},
  pages={1-5},
  abstract={Computational thinking is irrefutably a must-have skill in today's digital world. This is why it is a requisite course in most college curricula. Computational thinking is a broad term encompassing fundamental concepts of computing such as formulating problems and expressing their solutions in computational steps that can be processed by a computer. The ability to organize and analyze data is also a part of computational thinking. Following this paradigm, educational institutions have adopted various methods to teach computational thinking including programming. This paper will explore a specific project within the computational thinking course taught as an introductory course in all major programs at the Higher Colleges of Technology in the United Arab Emirates. The intention of the paper is to demonstrate how a project-based data analytics assessment in such a course can be used to foster in students, a greater awareness of a contemporary and critical global issue such as waste management. To examine the effectiveness of this project, the paper documents and evaluates the work of a group of students who carried out data analysis on secondary data collected from a notable website on “waste management”. The methodology implemented for this task is developed based on a prescribed course syllabus and assessment structure which promotes student-centered and inter-disciplinary learning.},
  keywords={Waste management;Data analysis;Collaborative work;Encoding;Task analysis;Programming profession;Creativity;inter-disciplinary learning;cross-curricular;project-based learning;data analytics;coding;computer programming;global issues;waste management;computational thinking;engineering;digital;Python;academic;curriculum},
  doi={10.1109/ASET48392.2020.9118395},
  ISSN={},
  month={Feb},}
@INPROCEEDINGS{10975239,
  author={Gomez, Amadeo and Guzman-Jimenez, Rosario and Cardenas-Garro, Jose},
  booktitle={International Conference on Technological Innovation and AI Research (ICTIAIR 2025)}, 
  title={Designing a high school computational thinking test using evidence-centered design}, 
  year={2025},
  volume={2025},
  number={},
  pages={17-24},
  abstract={The development of computational thinking as a cognitive skill is crucial in the digital age. However, there remains no consensus on its definition or measurement. This study aims to address this gap by developing an instrument to estimate the level of computational thinking using an evidence-centered design approach. The proposed framework integrates cognitive theory, educational research, and psychometric modeling to create a comprehensive and reliable assessment tool. The instrument consists of two scenarios with a total of 59 items divided into six questions. It was validated by experts in the field, achieving a content validity index of 0.76. The test was administered to a sample of 100 students from three secondary schools in Lima, Peru, and analyzed using Bayesian confirmatory factor analysis and parametric tests. The results indicate that the model effectively assesses algorithmic thinking, critical thinking, and problem solving skills, regardless of prior programming experience. However, the assessment of creativity requires further refinement. This research contributes to evidence-based educational policy and practice in secondary education, offering a foundation for future improvements in the evaluation of computational thinking.},
  keywords={},
  doi={10.1049/icp.2025.1239},
  ISSN={},
  month={March},}
@INPROCEEDINGS{8001741,
  author={Chen, Peng and Huang, Ronghuai},
  booktitle={2017 IEEE 17th International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Design Thinking in App Inventor Game Design and Development: A Case Study}, 
  year={2017},
  volume={},
  number={},
  pages={139-141},
  abstract={Design thinking is considered as a creative, humancentred, participative, exploratory and problem-solving process that values different perspectives of a problem. In this study, we bring the design thinking in a curriculum framework of K-12 game creation by App Inventor which is currently popular block based programming environments for fostering Computational Thinking. In a case study on a middle-school students game creation course in Beijing, the students' creative thinking process and computational thinking skill are investigated in order to understand perceptions of App Inventor and physics cognitive knowledge involved in the game creation. The future work is to construct a framework of integrating the Design Thinking for cultivating K-12 students' computational thinking.},
  keywords={Games;Programming profession;Computer science education;Physics;Conferences;Design Thinking;App Inventor;Game Creation;Computational Thinking},
  doi={10.1109/ICALT.2017.161},
  ISSN={2161-377X},
  month={July},}
@INPROCEEDINGS{7757676,
  author={Dasgupta, Annwesa and Purzer, Senay},
  booktitle={2016 IEEE Frontiers in Education Conference (FIE)}, 
  title={No patterns in pattern recognition: A systematic literature review}, 
  year={2016},
  volume={},
  number={},
  pages={1-3},
  abstract={Pattern recognition is one of the fundamental competencies associated with computational thinking and STEM education. Although much has been written to define computational thinking (CT), we argue that CT is a multi-faceted construct and specific aspects of CT (such as pattern recognition) should be examined. The purpose of this study is to conduct a systematic review of literature on pattern recognition to define pattern recognition as an aspect of computational thinking. The synthesis included the Engineering Village database (Compendex and INSPEC). We searched peer reviewed articles and the keywords, pattern recognition, pattern generalization and education. The initial search resulted in 208 articles. The screening of abstracts more closely resulted in 17 relevant articles, which were then read in detail by two researchers. The review of this pool resulted in two relevant articles, one with a focus on mathematics education and the other one in the context of medical education. Surprisingly there were no articles that examined pattern recognition as part of engineering or computer education. Further research examining specific aspects of CT is necessary.},
  keywords={Pattern recognition;Education;Systematics;Databases;Computers;Mathematics;Standards;pattern recognition;pattern generalization;computer education;computing;computational thinking;STEM},
  doi={10.1109/FIE.2016.7757676},
  ISSN={},
  month={Oct},}
@INPROCEEDINGS{9281177,
  author={Díaz, Francisco Javier and Soledad Gómez, Noelia and Catino, Magali},
  booktitle={2020 39th International Conference of the Chilean Computer Science Society (SCCC)}, 
  title={Analysis on the incorporation of technologies with a pedagogical perspective}, 
  year={2020},
  volume={},
  number={},
  pages={1-8},
  abstract={This work is the result of an investigation carried out within the framework of a research grant. The work experience that this team carried out was aimed at describing and systematizing the configuration of computational thinking, its incidence and validity in the educational field from the analysis of public policies, from an interdisciplinary approach. The experience carried out was developed based on a bibliographic and documentary analysis work, which allowed recovering the concept of computational thinking to analyze it in conjunction with the development of critical pedagogical practice and the concept of competences. Here an analysis of some of the current debates presented by computational thinking and its teaching is presented in order to promote a line of dialogue and problematization between what was done, is done and is projected on this subject.},
  keywords={Computer science;Education;Public policy;Computational Thinking;education;communication},
  doi={10.1109/SCCC51225.2020.9281177},
  ISSN={1522-4902},
  month={Nov},}
@INPROCEEDINGS{10513387,
  author={He, Yujie and Deng, Wei and Liu, Meijuan},
  booktitle={2023 Twelfth International Conference of Educational Innovation through Technology (EITT)}, 
  title={Design and Application of a Game Activity-Based Unplugged Programming Curriculum for Elementary Schools}, 
  year={2023},
  volume={},
  number={},
  pages={17-22},
  abstract={A series of unplugged programming courses based on game activities has been designed and developed to reduce the difficulty of programming courses in elementary school and to develop computational thinking skills in elementary school students. Four components were designed for the course: course objectives, course content, course activities, and course evaluation. A controlled experiment was performed to validate the course's influence on developing learners' computational thinking, and a questionnaire was employed to examine the experimental class learners' experience with the course. The results found that the level of computational thinking in the experimental class was also significantly different from the pretest, and the students in the experimental class rated each item of the course above 7 points. This indicates that this course has a significant effect on cultivating students' computational thinking, and the learners had a good learning experience and made gains from this course.},
  keywords={Technological innovation;Games;Programming profession;unplugged programming;gamified instruction;computational thinking;curriculum design;elementary and middle school programming},
  doi={10.1109/EITT61659.2023.00011},
  ISSN={2166-0549},
  month={Dec},}
@INPROCEEDINGS{8493970,
  author={Vinayakumar, R and Soman, KP and Menon, Pradeep},
  booktitle={2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)}, 
  title={CT-Blocks Analyser: Analysing CT-Blocks Projects}, 
  year={2018},
  volume={},
  number={},
  pages={1-5},
  abstract={This paper introduces CT-Blocks Analyser which is used for analysing computational thinking concepts of CT-Blocks project activities. This uses the emerging techniques of educational data mining and learning analytics to automate the instructional approach for CT-Blocks projects. CT-Blocks aims to infuse computational thinking within K-12 curriculum. The big data toolkit called, CT-Blocks Analyser which is specifically developed for CT-Blocks, a visually appealing programming environment for beginners; a block based programmable platform interconnected with more features in which students enjoy the learning process and it tries to make the users master in computational thinking.},
  keywords={Tools;Big Data;Programming profession;Sprites (computer);Data mining;Computational thinking;educational data mining (EDM);learning analytics (LA);CT-Blocks;K-12 education;block based programming;21st century learning skills},
  doi={10.1109/ICCCNT.2018.8493970},
  ISSN={},
  month={July},}
@INPROCEEDINGS{8845412,
  author={Guo, Tianyong and Li, Yan and Lu, Mingxiao and Guo, Yun},
  booktitle={2019 14th International Conference on Computer Science & Education (ICCSE)}, 
  title={Exploration of New Teaching Method Applied in C++ Course Combined with Students’ Majors}, 
  year={2019},
  volume={},
  number={},
  pages={903-906},
  abstract={In order to solve the problems emerged in traditional C++ programming class, and to meet the different needs for computational thinking and programming skill of students of different majors, this paper proposed a new teaching method, which combines C++ programming skill with knowledge related to students' academic majors. This new teaching method delivers C++ knowledge by using study cases closely related to students' majors; at the same time, electrical circuits are adopted to demonstrate study cases to help students better understand the course contents, and get deeper comprehension of the concept of computational thinking from this introductory programming course. Through the study and practice, this new teaching method was proved to achieve better teaching outcome in cultivating students' computational thinking and innovative ability, so as to lay a solid foundation for students' follow-up study in their major fields.},
  keywords={Education;Programming profession;Hardware;C++ languages;Light emitting diodes;case teaching;computational thinking;programming;course reform},
  doi={10.1109/ICCSE.2019.8845412},
  ISSN={2473-9464},
  month={Aug},}
@ARTICLE{9762800,
  author={Parmar, Dhaval and Lin, Lorraine and DSouza, Nikeetha and Jörg, Sophie and Leonard, Alison E. and Daily, Shaundra B. and Babu, Sabarish V.},
  journal={IEEE Transactions on Visualization and Computer Graphics}, 
  title={How Immersion and Self-Avatars in VR Affect Learning Programming and Computational Thinking in Middle School Education}, 
  year={2023},
  volume={29},
  number={8},
  pages={3698-3713},
  abstract={We present an empirical evaluation of immersion and self-avatars as compared to desktop viewing in Virtual Reality (VR) for learning computer programming and computational thinking in middle school education using an educational VR simulation. Students were asked to programmatically choreograph dance performances for virtual characters within an educational desktop application we built earlier called Virtual Environment Interactions (VEnvI). As part of a middle school science class, 90 students from the 6th and 7th grades participated in our study. All students first visually programmed dance choreography for a virtual character they created in VEnvI on a laptop. Then, they viewed and interacted with the resulting dance performance in a between-subjects design in one of the three conditions. We compared and contrasted the benefits of embodied immersive virtual reality (EVR) viewing utilizing a head-mounted display with a body-scaled and gender-matched self-avatar, immersive virtual reality only (IVR) viewing, and desktop VR (NVR) viewing with VEnvI on pedagogical outcomes, programming performance, presence, and attitudes towards STEM and computational thinking. Results from a cognition questionnaire showed that, in the learning dimensions of Knowledge and Understanding (Bloom's taxonomy) as well as Multistructural (SOLO taxonomy), participants in EVR and IVR scored significantly higher than NVR. Also, participants in EVR scored significantly higher than IVR. We also discovered similar results in objective programming performance and presence scores in VEnvI. Furthermore, students’ attitudes towards computer science, programming confidence, and impressions significantly improved to be the highest in EVR and then IVR as compared to NVR condition. Our work suggests that educators and developers of educational VR simulations, who want to enhance knowledge and understanding as well as simultaneous acquisition of multiple abstract concepts, can do so by employing immersion and self-avatars in VR learning experiences.},
  keywords={Programming profession;Cognition;Training;Task analysis;STEM;Solid modeling;Virtual environments;Computer science education;embodied cognition;immersion;self-avatars;VR in middle school education;virtual reality},
  doi={10.1109/TVCG.2022.3169426},
  ISSN={1941-0506},
  month={Aug},}
@INPROCEEDINGS{8120416,
  author={Touretzky, David S.},
  booktitle={2017 IEEE Blocks and Beyond Workshop (B&B)}, 
  title={Computational thinking and mental models: From kodu to calypso}, 
  year={2017},
  volume={},
  number={},
  pages={71-78},
  abstract={Reasoning about programs is an important component of computational thinking. Laws of computation give meaning to the formalisms in which programs are expressed, and can be used to predict or explain program behavior, or to uncover bugs. This paper presents Calypso, a language inspired by Microsoft's Kodu Game Lab but designed for programming actual mobile robots rather than characters in a virtual world. The initial implementation of Calypso uses the Cozmo robot by Anki. Like Kodu, the Calypso interpreter can be described by five key laws. An understanding of the laws and how to apply them constitutes a mental model of computation. Calypso provides a variety of affordances and scaffolding techniques to foster development of effective mental models and facilitate computational thinking.},
  keywords={Games;Robot sensing systems;Cognitive science;Computer bugs;Programming;Cameras;Cozmo robot;mobile robots;robot programming},
  doi={10.1109/BLOCKS.2017.8120416},
  ISSN={},
  month={Oct},}
@ARTICLE{10669100,
  author={Guniš, Ján and Šnajder, L’ubomír and Antoni, L’ubomír and Eliaš, Peter and Krídlo, Ondrej and Krajči, Stanislav},
  journal={IEEE Transactions on Education}, 
  title={Formal Concept Analysis of Students’ Solutions on Computational Thinking Game}, 
  year={2025},
  volume={68},
  number={1},
  pages={20-32},
  abstract={Contribution: We present a framework for teachers to investigate the relationships between attributes of students’ solutions in the process of problem solving or computational thinking. We provide visualization and evaluation techniques to find hidden patterns in the students’ solutions which allow teachers to predict the specific behavior of students or to prevent some student mistakes or misconceptions in advance or further pedagogical intervention. Background: Formal concept analysis is a method of unsupervised Machine Learning that applies mathematical lattice theory to organize data based on objects and their shared attributes. Several fuzzy extensions of formal concept analysis have a great potential to visualize and evaluate students’ solutions, to categorize the solutions into overlapping biclusters (formal concepts) or to generate the attribute implications between extracted attributes. Research Question: Does formal concept analysis describe the various solutions and the relationships between the extracted attributes of students’ solutions in the educational and computational thinking game Light-Bot? Methodology: Targeting the evaluation of 64 students’ solutions in the Light-Bot game, we construct the formal contexts of the extracted attributes. We apply formal concept analysis to construct the concept lattices from two binary formal contexts and to generate attribute implications and their fuzzy counterparts to find the dependencies between the extracted attributes. Findings: The results of our paper provide a description of various students’ solutions which are visualized in the concept lattices. 1) Regarding the concept lattice of binary formal contexts, we obtained the characterization of the largest biclusters which includes a description of the largest group of similar solutions. 2) The attribute implications mainly reveal the characterization of similar solutions, e.g., with a higher count of executed commands in solutions. 3) Using fuzzy attribute implications, we obtained the characterization of solutions with unnecessary commands, going out of the game area, or using indirect recursion.},
  keywords={Games;Formal concept analysis;Education;Lighting;Programming profession;Lattices;Robots;Attribute implications;formal concept analysis;light-bot;visualization},
  doi={10.1109/TE.2024.3442612},
  ISSN={1557-9638},
  month={Feb},}
@INPROCEEDINGS{7044134,
  author={Prieto-Rodriguez, Elena and Berretta, Regina},
  booktitle={2014 IEEE Frontiers in Education Conference (FIE) Proceedings}, 
  title={Digital technology teachers' perceptions of computer science: It is not all about programming}, 
  year={2014},
  volume={},
  number={},
  pages={1-5},
  abstract={A considerable body of research examines people's perceptions of the nature of science. There is also extensive research about what those perceptions are for teachers, and what strategies can be used to change them. There is, however, very little information about what these perceptions may be in the case of computer science. In fact, computer scientists struggle to agree on a definition of their discipline, and perhaps the only term common term to all existing definitions is that of computational thinking. This paper reports on an investigation into perceptions about computer science occurred during a series of professional development workshops for Australian Digital Technologies teachers. These workshops aimed to promote the computer science discipline by providing skills and resources necessary to teach computer science and computational thinking. The results of our investigation indicate that Digital Technologies teachers in our sample (N=16) had one common misconception about the nature of computer science. We also found that the misconception was changed after 3 days of intensive education about computational thinking, computer science and its applications.},
  keywords={Conferences;Educational institutions;Computers;Mathematics;Programming;computational thinking;CS4HS;teacher perceptions},
  doi={10.1109/FIE.2014.7044134},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{8252365,
  author={Kong, Runzhi and Wong, Gary K. W.},
  booktitle={2017 IEEE 6th International Conference on Teaching, Assessment, and Learning for Engineering (TALE)}, 
  title={Teachers' perception of professional development in coding education}, 
  year={2017},
  volume={},
  number={},
  pages={377-380},
  abstract={Extensive studies have already documented the importance of introducing computer science into K-12 which lies in equipping students with computational thinking. And professional development accelerates the speed of integrating computational thinking curriculum into K-12 education. This study aims to explore primary school teachers' perception and perspective of attending professional development activities for teaching coding. The context in which this research was undertaken is in mainland China, Hong Kong, Brunei Darussalam. 107 participants (n = 107) in total involved in this research. The result of this study shows that 1) some primary school teachers still have the misunderstanding on the concept of computational thinking. 2) lack of pedagogical content knowledge and content knowledge are major challenges teachers have in teaching coding. 3) non-cognitive factors, such as anxiety, confidence, always influence teachers' teaching which cannot be neglected. 4) School culture plays an essential role in involving.},
  keywords={Education;Encoding;Programming profession;Handheld computers;Technological innovation;coding education;computational thinking;professional development},
  doi={10.1109/TALE.2017.8252365},
  ISSN={2470-6698},
  month={Dec},}
@INPROCEEDINGS{8941222,
  author={Taylor, Sandra and Min, Wookhee and Mott, Bradford and Emerson, Andrew and Smith, Andy and Wiebe, Eric and Lester, James},
  booktitle={2019 IEEE Blocks and Beyond Workshop (B&B)}, 
  title={Position: IntelliBlox: A Toolkit for Integrating Block-Based Programming into Game-Based Learning Environments}, 
  year={2019},
  volume={},
  number={},
  pages={55-58},
  abstract={Block-based programming languages reduce the need to learn low-level programming syntax while enabling novice learners to focus on computational thinking skills. Game-based learning environments have been shown to create effective and engaging learning experiences for students in a broad range of educational domains. The fusion of block-based programming with game-based learning offers significant potential to motivate learners to develop computational thinking skills. A key challenge educational game developers face in creating rich, interactive learning experiences that integrate computational thinking activities is the lack of an embeddable block-based programming toolkit. Current block-based programming languages, such as Blockly and Scratch, cannot be easily embedded into industry-standard 3D game engines. This paper presents IntelliBlox, a Blockly-inspired toolkit for the Unity cross-platform game engine that enables learners to create block-based programs within immersive game-based learning environments. Our experience using IntelliBlox suggests that it is an effective toolkit for integrating block-based programming challenges into game-based learning environments.},
  keywords={Games;Programming profession;Engines;Three-dimensional displays;Education;block-based programming;game-based learning;K-12 computer science education;computational thinking},
  doi={10.1109/BB48857.2019.8941222},
  ISSN={},
  month={Oct},}
@INPROCEEDINGS{8113295,
  author={Chang, Chih-Kai and Tsai, Yu-Tzu and Chin, Ya-Lun},
  booktitle={2017 6th IIAI International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={A Visualization Tool to Support Analyzing and Evaluating Scratch Projects}, 
  year={2017},
  volume={},
  number={},
  pages={498-502},
  abstract={In this paper, we combined a visualization tool and Dr. Scratch website service to support instructors evaluating the Scratch projects on an online social networking forum: scratch.mit.edu. Scratch is a visual programming language used by youth to design programs like animation, game, or music. Their computational thinking skills take place around program decompositions, program patterns, and data representation in the shared Scratch programs (called projects). Through the exploratory work, we found that some cues, such as deep nested iteration, may be successfully used as indicators of users computational thinking skills. This suggests future directions for assessing youths computational thinking skills development and educational opportunities emerging from shared Scratch projects.},
  keywords={Visualization;Programming profession;Computer languages;Computer science education;Tools;Games;visualization;Dr. Scratch;Scratch;visual programming language;computational thinking skill},
  doi={10.1109/IIAI-AAI.2017.83},
  ISSN={},
  month={July},}
@INPROCEEDINGS{9357024,
  author={Noor, Farah Hanum and Mohamad, Fitri Suraya and Minoi, Jacey Lynn},
  booktitle={2020 IEEE 8th R10 Humanitarian Technology Conference (R10-HTC)}, 
  title={Learning Programming using Lego Mindstorms: Analysis of Learner Experiences}, 
  year={2020},
  volume={},
  number={},
  pages={1-6},
  abstract={We experimented with the viability of using Lego Mindstorms as an alternative approach to supplement the learning of Basic Programming among novice university students. The study captured reactions and responses from ten undergraduates who had no background in Programming and were facing difficulties coping with an introductory course in Programming. Four Lego Mindstorms units were deployed to examine the participants' problem-solving and computational thinking skills. Findings indicate a high positive response (t=3.88 and p =0.004 for Problem Solving; t=-4.13 and p=0.003 for Computational thinking) to the use of Mindstorms as a strategy to encourage higher-order thinking, a critical skill in learning Programming. Participants reported clarity in understanding computational thinking concepts and claimed to be better able to articulate problem-solving tasks when prompted using Mindstorms.},
  keywords={Conferences;Programming;Tools;Problem-solving;Task analysis;Computational thinking;LEGO Mindstorms;Robotics;problem-solving skills},
  doi={10.1109/R10-HTC49770.2020.9357024},
  ISSN={2572-7621},
  month={Dec},}
@INPROCEEDINGS{7044224,
  author={Bustillo, Jon and Garaizar, Pablo},
  booktitle={2014 IEEE Frontiers in Education Conference (FIE) Proceedings}, 
  title={Scratching the surface of digital literacy… but we need to go deeper}, 
  year={2014},
  volume={},
  number={},
  pages={1-4},
  abstract={The popularization of digital educational devices with low barriers to entry has encouraged the development of many training activities oriented towards the incorporation of technology in schools. In some cases, the introduction of technology has led to the development of new educational practices that support the development of computational thinking. However, the supposed benefits of these approaches have not been properly assessed. Moreover, having taught over 30 workshops with the Scratch programming tool to teachers at different educational levels (primary, secondary, university), we found no evidence of subsequent methodological changes in schools. This study tries to understand the dissonance between the alleged success of initiatives around digital literacy and the lack of continuity in the use of user-friendly programming environments like Scratch. For this purpose, we analyzed the evolution of the grades of Scratch programming achieved by the students of the School of Education of Vitoria-Gasteiz and their engagement with Scratch. We also interviewed teachers from different schools who have participated in Scratch workshops with us. After this study, we identified some of the circumstances that facilitate and hinder the development of computational thinking. Since we consider Scratch as a resource that allows the development of new methodological approaches in the classroom as well as the acquisition of skills related to computational thinking, we propose a framework that will help to overcome the current status.},
  keywords={Educational institutions;Programming profession;Training;Games;Computers;computational thinking;digital literacy;education;programming;Scratch},
  doi={10.1109/FIE.2014.7044224},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{7581699,
  author={Liu, Xinxin and Xu, Hongyun},
  booktitle={2016 11th International Conference on Computer Science & Education (ICCSE)}, 
  title={Reform on college fundamentals of computer course based on mobile computing}, 
  year={2016},
  volume={},
  number={},
  pages={890-893},
  abstract={Fundamentals of Computer is a compulsory course of non-majors in many universities of China. In this paper, we explore the reform on this course for two goals. One is to redesign the teaching content: from operation oriented to computational thinking oriented. Computational thinking is one of the most important ability for 21st century and has become the primary goal of computer foundation education. New content covers the basic principles of computer science as well as the fundamental ways of thinking and problem solving with computer. The second goal is to improve teaching methods by leveraging mobile technology. We propose the use of MIT App Inventor, which is a simple tool for creating mobile applications for Android. Students with no prior knowledge of programming can create entertaining and socially useful applications with App Inventor while practicing computational thinking.},
  keywords={Computers;Programming;Education;Problem-solving;Mobile applications;Databases;App Inventor;computational thinking;fundamentals of Computer;mobile computing},
  doi={10.1109/ICCSE.2016.7581699},
  ISSN={},
  month={Aug},}
@INBOOK{8709390,
  author={Denning, Peter J. and Tedre, Matti},
  booktitle={Computational Thinking}, 
  title={5 SOFTWARE ENGINEERING}, 
  year={2019},
  volume={},
  number={},
  pages={95-126},
  abstract={Software engineering is the part of computer science that is too difficult for the computer scientist.},
  keywords={},
  doi={},
  ISSN={},
  publisher={MIT Press},
  isbn={9780262353410},
  url={https://ieeexplore-ieee-org.crai.referencistas.com/document/8709390},}
@INPROCEEDINGS{10343894,
  author={Miková, K. and Kubincová, Z.},
  booktitle={2023 21st International Conference on Emerging eLearning Technologies and Applications (ICETA)}, 
  title={How to Develop CT Skills Using Robotics Projects Combined with Arts - a Pilot Study}, 
  year={2023},
  volume={},
  number={},
  pages={365-370},
  abstract={With the introduction of distance learning during the lockdown, teachers faced a number of problems on how to implement the teaching. Educational robotics was particularly negatively affected by this period. In our country, educational robotics is usually taught in informatics classes. However, in many schools, the teaching of informatics during the lockdown was very limited and often focused only on basic digital skills. As a similar situation occurred in several European countries, the idea of supporting teachers in such cases was proposed. Within an international project we are involved in, a methodology is being designed to develop computational thinking in students at all school levels through educational robotics in combination with a school arts subject. The methodology is based on the idea of project-based learning and should use blended learning methods. In this paper, we describe the planning and the course of an educational activity – a project – using the currently developed methodology. The results presented are from its pilot validation with lower-secondary students without previous experience with robotics. The project combined the theme of Greek myths with robotics using LEGO SPIKE Prime. During the validation, we focused primarily on students’ work with basic programming concepts. Our research problem was to validate the quality and potential of the proposed methodology and the computational thinking skills it can develop. The paper concludes with recommendations for further development of the methodology and also for the use of the selected robotic kit with respect to programming in informatics classes.},
  keywords={Art;Education;Urban areas;Software;Planning;Informatics;Robots},
  doi={10.1109/ICETA61311.2023.10343894},
  ISSN={},
  month={Oct},}
@ARTICLE{8155009,
  author={Cao, Jill and Fleming, Scott D. and Burnett, Margaret and Scaffidi, Christopher},
  journal={Interacting with Computers}, 
  title={Idea Garden: Situated Support for Problem Solving by End-User Programmers}, 
  year={2015},
  volume={27},
  number={6},
  pages={640-660},
  abstract={Although there have been many advances in end-user programming environments, recent empirical studies report that programming still remains difficult for end-users. We hypothesize that one reason may be lack of effective support for helping end-user programmers problem-solve their own way around barriers they encounter. Therefore, in this paper, we describe the Idea Garden, a concept designed to help end-user programmers generate new ideas and problem-solve when they run into barriers. The Idea Garden has its roots in Minimalist Learning Theory and problem-solving theories. Our proof-of-concept prototype of the Idea Garden concept in the CoScripter end-user programming environment currently targets three barriers reported in end-user programming literature. It does so using an integrated, just-in-time combination of scaffolding for problem-solving strategies, for design patterns and for programming concepts. Our empirical results showed that this approach helped end-user programmers overcome all three types of barriers that our prototype targeted.},
  keywords={development frameworks and environments;designing software;interactive learning environments;computational thinking;informal learning},
  doi={10.1093/iwc/iwu022},
  ISSN={1873-7951},
  month={Nov},}
@INPROCEEDINGS{9206214,
  author={Arnedo-Moreno, Joan and García-Solórzano, David},
  booktitle={2020 IEEE 32nd Conference on Software Engineering Education and Training (CSEE&T)}, 
  title={Programming is Fun! A Survey of the STEAM Digital Distribution Platform}, 
  year={2020},
  volume={},
  number={},
  pages={1-4},
  abstract={In order to engage the player, video games are often based on challenges that must be overcome. What are colloquially known as programming games present these challenges as puzzles where computational thinking and coding skills have a fundamental role in successfully overcoming them, even though they are not serious games and have been designed purely as entertainment products. Indeed, algorithm design and coding is the fun part. This paper presents a survey of all such games up to February 2020 published in the Steam digital distribution platform, categorizing them by content covered according to a basic programming curriculum. This study provides some insights on the nature of this kind of games and allows assessing their adequacy as educational tools, broadening the body of knowledge on available games for teaching computational thinking and coding, beyond serious games.},
  keywords={Games;Programming profession;Education;Encoding;Tools;Entertainment industry;coding;programming;computational thinking;video games;Steam;edutainment;learning},
  doi={10.1109/CSEET49119.2020.9206214},
  ISSN={2377-570X},
  month={Nov},}
@INPROCEEDINGS{8493941,
  author={Vinayakumar, R. and Soman, K.P. and Menon, Pradeep},
  booktitle={2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)}, 
  title={Digital Storytelling Using Scratch: Engaging Children Towards Digital Storytelling}, 
  year={2018},
  volume={},
  number={},
  pages={1-6},
  abstract={Engaging youngsters with ancient approaches in education, especially reading, grows ever tougher in the face of their attachment to tablets and PC games. In this paper, we explore the digital storytelling more interesting and memorable for children. Digital storytelling is recognized as a motivating instructional approach that engages learners in 21st century learning skills which will be essential to success in the future. Digital storytelling is one of the latest pedagogical approaches that can engage learners in computational thinking. Educators are in search of recent technologies and education approaches to engage students in computational thinking. Digital storytelling using MIT Scratch have the potential to meet this demand.},
  keywords={Sprites (computer);Dogs;Media;Programming profession;Games;Education;digital storytelling;21st century learning skills;Computational thinking;Scratch;K-12 education;block based programming},
  doi={10.1109/ICCCNT.2018.8493941},
  ISSN={},
  month={July},}
@INPROCEEDINGS{8992698,
  author={Ou Yang, Fang-Chuan},
  booktitle={2019 8th International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={The Design of AR-based Virtual Educational Robotics Learning System}, 
  year={2019},
  volume={},
  number={},
  pages={1055-1056},
  abstract={In this study, we propose an AR (Augmented Reality)-based virtual educational robotics learning system, called "AR Bot", which aims to support the learning activities of computational thinking and STEM (science technology engineering and mathematics) education. The system consists of two major elements: AR Bot card and AR Bot app. The AR Bot card is a AR trigger for displaying learning materials and quizzes. Smartphones with AR Bot app can be used to scan the AR Bot cards, and then enter the learning units that uses visual blocky programming editor to practice various robot tasks. The motions of virtual robot can be demonstrated in the authentic scenes with AR technology via mobile devices. The AR Bot system is designed to facilitate computational thinking and STEM education in K-12 schools. In the current state of this study, the core programming editor engine of AR Bot has been developed, and the researcher team will prepare to conduct the experiments into STEM courses in a primary school in Taiwan. The AR Bot system is expected to help strengthen the interaction between teachers and students in the classroom, leverage the learning effectiveness, and reduce the cost of robot equipment for schools.},
  keywords={augmented reality, educational robotics, computational thinking, STEM education},
  doi={10.1109/IIAI-AAI.2019.00224},
  ISSN={},
  month={July},}
@INPROCEEDINGS{7581620,
  author={Li, Fengxia and Chen, Yufeng and Yu, Yue and Zhang, Bo and Sun, Meiling},
  booktitle={2016 11th International Conference on Computer Science & Education (ICCSE)}, 
  title={Virtual experiment teaching and research oriented to college computer curriculum}, 
  year={2016},
  volume={},
  number={},
  pages={439-442},
  abstract={In recent years, with the rise of the concept of Computational Thinking, the issue about College Computer teaching reforms has received wide attention. A high percentage of the research nowadays focuses on how to impart knowledge of computer in the perspective of computational thinking. But more importantly, the research ignores an important way to train thinking - practice. This paper starts with the “College Computer Curriculum”, which is the first computer course for undergraduate students. By using virtual reality technology, this paper gives the college teacher an experimental design method of “College Computer Curriculum”. Some exploratory research works have been performed to explain how to embody the basic problems of computer public course. Finally, we introduce a set of virtual experiment libraries, which are independent research and development. These experiments have already achieved excellent results in the practical teaching of college computer curriculum.},
  keywords={Education;Computers;Knowledge engineering;Electronic mail;Computer science;Virtual reality;Computational modeling;College computer;Computational thinking;Experimental teaching},
  doi={10.1109/ICCSE.2016.7581620},
  ISSN={},
  month={Aug},}
@INPROCEEDINGS{9750637,
  author={Xu, Zhiqi and Shen, Xuewen and Lin, Shengyou and Zhang, Fan},
  booktitle={2021 11th International Conference on Information Technology in Medicine and Education (ITME)}, 
  title={Using Visualization to Teach an Introductory Programming Course with Python}, 
  year={2021},
  volume={},
  number={},
  pages={514-518},
  abstract={More and more colleges have offered introductory programming courses for students from different majors, aiming to cultivate students' computational thinking skills. However, teaching introductory programming courses, especially to freshmen, remains a challenging endeavor despite a lot of research and experiments. In this paper we presented our innovative teaching strategy and its implementation both with the utilization of visualization in an introductory Python programming course. The results from our comparative teaching experiments show that visualization could benefit students a lot in learning Python programming and improving their computational thinking abilities.},
  keywords={Visualization;Education;Information technology;Programming profession;Python;visual programming;collaborative learning;Python;computational thinking},
  doi={10.1109/ITME53901.2021.00109},
  ISSN={2474-3828},
  month={Nov},}
@INPROCEEDINGS{9853848,
  author={Keene, Joseph and Jamil, Hasan M},
  booktitle={2022 International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Natural Language Programming with TryPL}, 
  year={2022},
  volume={},
  number={},
  pages={38-40},
  abstract={Computational thinking is considered critical for learning to code in K-12 education standards. The logic-first, syntax-later argument has been instrumental in promoting block-based languages such as Snap! and Scratch with limited success. In contrast, we believe that expressing the logic of computational problems in the student’s language is more convenient and natural. In such an environment, learners will experience the least impedance mismatch between their conceptual view and the target code they write. In this paper, a new natural language-based programming system, called TryPL (Try Programming in Logic), is introduced and discussed. We demonstrate that TryPL helps to identify gaps in logic and assists in validating learners’ mental models of abstract algorithms. An argument is also made as to why using a natural language-based programming environment and a learning model to teach computational thinking could be more effective and appealing to K-12 and first-year college students.},
  keywords={Java;Codes;Instruments;Natural languages;Syntactics;Impedance;Programming profession;Natural Language;Computational Thinking;Conceptual Programming;eLearning;Logic First Syntax Later},
  doi={10.1109/ICALT55010.2022.00018},
  ISSN={2161-377X},
  month={July},}
@INPROCEEDINGS{10496983,
  author={Moon, JunSeong and Kim, YeHyun and Kim, Seong Baeg},
  booktitle={2023 5th International Workshop on Artificial Intelligence and Education (WAIE)}, 
  title={Developing a C-UMC Model for SW Education Program Using Metaverse}, 
  year={2023},
  volume={},
  number={},
  pages={26-30},
  abstract={Recently, metaverse have been used in education to improve learners' interest and engagement. In particular, there have been studied various educational models such as theory, practice, and project classes in SW education programs. In this study, we aim to verify whether the SW education program has a significant effect on computational thinking and communication skills by using the communication-centered model (C-UMC), which centers on ‘communication’ as one of the characteristics of the metaverse. The SW education program applied in this study targets 23 high school students and is conducted for 16 sessions (2 hours × 8 sessions). This study is an ongoing research, and we presented the design process for conducting the study, as well as the current classroom process and preliminary results. For further study, we will perform an effectiveness analysis on whether there was a significant difference in learners' computational thinking and communication skills.},
  keywords={Surveys;Technological innovation;Analytical models;Metaverse;Computational modeling;Conferences;Education;Metaverse;C-UMC;SW Education;Computational Thinking},
  doi={10.1109/WAIE60568.2023.00012},
  ISSN={},
  month={Sep.},}
@INPROCEEDINGS{8875761,
  author={Díaz Leon, Jose Alfredo and Abad Jiménez, Wilder Ernesto and Barraza Ramírez, Juan Luis and Frontado Aldana, Sheyla Anaís and Puma Alvites, Astrid Tiffany Alexandra and Solórzano Pinzás, Renzo Lucciano},
  booktitle={2019 IEEE World Conference on Engineering Education (EDUNINE)}, 
  title={Work in progress: Llup'ix}, 
  year={2019},
  volume={},
  number={},
  pages={1-4},
  abstract={One erroneous idea from Peruvian population is to think that for teaching technology concepts in public schools is very important the use of hardware, software, electricity or Internet. The truth is that exists lots of teaching methods for developing a computational thinking and these do not depend on the resources mentioned before. Children have demonstrated a big capacity for secure their knowledge if the teaching method is simple and didactic through games and recreational activities. For these reasons, we propose the use of unplugged activities, which do not require the use of computers and has the objective of promoting, clearing out and developing essentials concepts of computer science, as well as developing the computational thinking in kids through a funny and dynamic focus. In this way, they are going to be prepared to enter in a world where the computer science is expanding progressively in each area of daily life.},
  keywords={Education;Programming profession;Games;Computers;Software;Proposals;teach;computing;public schools;games;computational thinking},
  doi={10.1109/EDUNINE.2019.8875761},
  ISSN={},
  month={March},}
@INPROCEEDINGS{6462468,
  author={Ringenberg, Tatiana and Magana, Alejandra J.},
  booktitle={2012 Frontiers in Education Conference Proceedings}, 
  title={Work in progress: STEM-based computing educational resources on the web}, 
  year={2012},
  volume={},
  number={},
  pages={1-3},
  abstract={This work in progress explores the landscape of computing learning resources and environments found on the web together with teaching and learning materials that can facilitate the integration of “computational thinking” into the K-12 classroom. In specific, this paper focuses in finding and describing existing learning environments that integrate computational thinking into a STEM discipline together with lesson plans, activities and other curricula.},
  keywords={Materials;Computational modeling;Planning;Educational institutions;Games;Computers;Computational thinking;STEM;learning resources;supplemental materials},
  doi={10.1109/FIE.2012.6462468},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{10039663,
  author={Wang, Chung-Hsiang and Wu, Ko-Chiu},
  booktitle={2022 International Conference on Computer and Applications (ICCA)}, 
  title={A preliminary study on interdisciplinary programming learning based on cloud computing low-code development platform}, 
  year={2022},
  volume={},
  number={},
  pages={1-5},
  abstract={The application of “programming education” has become one of the future technological trends, and students with design backgrounds should also grasp this important development. In this study, the “AgilePoint NX” program course was established, and computational thinking was introduced into the course to guide students, through the image flow and low-code learning process, to carry out structured thinking and question speculation, and complete task exercises. This aims to teach design students to learn programming and computational thinking through a cloud-based low-code development platform with image processes and interdisciplinary learning processes. We conduct a comprehensive analysis and evaluate the learning effect through classroom learning observation, simple questionnaire survey, imagination scale, and other methods. Finally, the study found that in interdisciplinary programming learning, different factors lead to low learning effects of programming courses for design background students, resulting in different degrees of learning pain points and learning experiences. The power of imagination test is a tentative exploration of this research, but for the low-code development platform with fewer measurement data and biased towards procedural thinking, only predictive exploration has no significant data to show the specific impact on the programming learning process, only As a reference for interdisciplinary study.},
  keywords={Cloud computing;Power measurement;Pain;Education;Computer architecture;Market research;Encoding;interdisciplinary learning;low-code development platform;dual coding theory;computational thinking;imagination;cloud computing},
  doi={10.1109/ICCA56443.2022.10039663},
  ISSN={},
  month={Dec},}
@INPROCEEDINGS{10182189,
  author={Vasconcelos, Verónica and Almeida, Ricardo and Marques, Luís and Bigotte, Emília},
  booktitle={2023 32nd Annual Conference of the European Association for Education in Electrical and Information Engineering (EAEEIE)}, 
  title={Scratch4All Project - Educate for an All-inclusive Digital Society}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  abstract={Computational thinking is a fundamental competence for the 21st century. It refers to a set of capacities and skills that can be stimulated to facilitate the teaching-learning process in a wide range of fields, including Science, Technology, Engineering and Mathematics (STEM). Experts in information technology argue that the earlier children are exposed to programming through digital platforms appropriate for their age, the easier it will be for them to assimilate their concepts in the future. This effort should be continued throughout the educational stages of children and youth to increase students' interest in pursuing STEM studies and careers.This paper describes the Scratch4All project promoted by the consortium CASPAE (a Private Social Solidarity Institution) and Inova-Ria, with technical assistance from professors at the public higher education institution Coimbra Institute of Engineering. Scratch4All Project includes the activities Scratch on Road, Programming and Robotics Lab, and the Scratch4All Digital Platform. According to the impact assessment for the school year 2020-2021, the Scratch4All project promotes school success and true equality in access to new technologies for students in the 1st, 2nd, and 3rd cycles of elementary school, developing essential skills for their academic and professional future such as computational thinking, STEM competencies and social skills. By encouraging young girls to participate in technological projects, this project also aims to combat gender stereotypes.},
  keywords={Technological innovation;Roads;Education;Europe;Entrepreneurship;Information technology;Programming profession;Computational thinking;Scratch;STEM education;Gender Gap},
  doi={10.23919/EAEEIE55804.2023.10182189},
  ISSN={2472-7687},
  month={June},}
@INPROCEEDINGS{9610232,
  author={Bo, Xiaoyong and Tang, You},
  booktitle={2021 International Conference on Computers, Information Processing and Advanced Education (CIPAE)}, 
  title={Teaching Research on Database Principle and Application Course Based on Computing Thinking and CDIO Mode}, 
  year={2021},
  volume={},
  number={},
  pages={313-316},
  abstract={Discusses the problem of training students' computing thinking in the teaching of database principles and applications, and analyses the computing thinking reflected in the course of database principles and applications. In the course of teaching, the training of computational thinking is penetrated into the teaching content, and the course practice teaching is carried out by using the CDIO engineering teaching method to strengthen the training of students' Computational Thinking ability.},
  keywords={Training;Technological innovation;Databases;Information processing;Solids;Engineering education;Computational Thinking;CDIO;Database Principles;Teaching Method},
  doi={10.1109/CIPAE53742.2021.00081},
  ISSN={},
  month={May},}
@INPROCEEDINGS{8085552,
  author={Juan, Ran},
  booktitle={2017 12th International Conference on Computer Science and Education (ICCSE)}, 
  title={Seizing the SPOC opportunity and promoting reform of university computer foundation teaching in independent colleges}, 
  year={2017},
  volume={},
  number={},
  pages={551-556},
  abstract={Faced with the new reality of reform of university computer foundation and teaching, independent colleges have proposed reforms upon university computer foundation teaching in the content, model, methods and management, which are centered around computational thinking, targeted at “enhance foundation, application-orientation, and stress computational thinking and promote students' creativity and innovation”. By constructing teaching contents which emphasize the application and practicality, and adopting SPOC integrated teaching model and emphasizing diversity of teaching methods, such reforms can not only spur students' initiative and enthusiasm in learning, but also improve their problem solving and innovation.},
  keywords={Education;Technological innovation;Computational modeling;Stress;Diversity methods;Computer science;Creativity;university computer foundation;SPOC;computational thinking;independent colleges},
  doi={10.1109/ICCSE.2017.8085552},
  ISSN={2473-9464},
  month={Aug},}