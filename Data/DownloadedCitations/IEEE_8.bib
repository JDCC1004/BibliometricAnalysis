@INPROCEEDINGS{9796171,
  author={Rainer, Austen and Menon, Catherine},
  booktitle={2022 IEEE/ACM 15th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE)}, 
  title={Voting Item: Story-work in human-centric software engineering}, 
  year={2022},
  volume={},
  number={},
  pages={109-110},
  abstract={Background: Stories and story-work (in the fuller sense of those words) are recognised as a legitimate focus of study in other scientific disciplines. Information, Idea, Arguments: We are considering forming an inter-disciplinary research programme to explore how story-work can contribute to human-centric software engineering. Vote: What should we focus on to help ensure the proposed programme produces scientifically-valid, impactful research?},
  keywords={Conferences;Software;Software engineering;human-centred software engineering;story;computational thinking;algorithm},
  doi={10.1145/3528579.3529170},
  ISSN={2574-1837},
  month={May},}
@INPROCEEDINGS{10211374,
  author={Vasconcelos, Verónica and Bigotte, Emília and Marques, Luís and Almeida, Ricardo},
  booktitle={2023 18th Iberian Conference on Information Systems and Technologies (CISTI)}, 
  title={A Teacher-Focused Impact Assessment in Scratch4All Project}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  abstract={The “Scratch4All” project aims to reduce school dropout rates by encouraging and motivating students in the 1st, 2nd, and 3rd cycles of elementary schools to achieve academic success. In addition, the project promotes true equality of opportunity in terms of educational resources. A learning environment that contributes positively to the improvement of educational results is created through the use of new technologies, specifically programming in the Scratch language and robotics. Impact indicators were developed and used as project evaluation tools based on Theory of Change. This paper presents and analyzes the changes observed from the perspective of the project’s teachers’ stakeholders during the 2020/2021 school year. This group of beneficiaries is critical to the project’s success and continuation, not only because of the special relationship they have with the students, but also with their families and the school. The assessment of impact is very positive in terms of indicators such as school success and motivation, particularly in Mathematics and Portuguese Language, as well as in the reduction of inequalities, access to new technologies, and contribution to gender equality.},
  keywords={Technological innovation;Roads;Mathematics;Stakeholders;Informatics;Robots;Programming profession;Computational Thinking;Scratch;Change Theory},
  doi={10.23919/CISTI58278.2023.10211374},
  ISSN={2166-0727},
  month={June},}
@INPROCEEDINGS{9829452,
  author={Wang, Hung-Hsiang},
  booktitle={2022 IEEE 5th Eurasian Conference on Educational Innovation (ECEI)}, 
  title={Applications of Machine Learning to Form-giving in Industrial Design}, 
  year={2022},
  volume={},
  number={},
  pages={110-113},
  abstract={Machine learning is a key technology to design and develop products, systems, and even services. In particular, image classification using deep learning has been successfully applied to many fields. Although industrial designers might learn this is an opportunity for their best practice, studies demonstrating how to integrate the technology into the design process are rare. Thus, we discussed the need to introduce ML to industrial design by presenting examples and ML tools with lower scientific thresholds such as Weka that is preferable for industrial design students and practitioners. A five-stage process of applying ML to product form-giving is presented to illustrate the bridging of ML to the design process. Further technical details and industry case studies are needed to demonstrate evidence of the advantages of ML in form-giving. The implication is not only in sharpening the tools of product form-giving but also in rethinking the theories of industrial design.},
  keywords={Industries;Deep learning;Technological innovation;Conferences;Best practices;Image classification;industrial design;product design;learning motivation;computational thinking},
  doi={10.1109/ECEI53102.2022.9829452},
  ISSN={},
  month={Feb},}
@INPROCEEDINGS{9272475,
  author={Cateté, Veronica and Bell, Dave and Isvik, Amy and Lytle, Nicholas and Dong, Yihuan and Barnes, Tiffany},
  booktitle={2020 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Bridge to Computing: An outreach program for at-risk young men}, 
  year={2020},
  volume={1},
  number={},
  pages={1-2},
  abstract={In 2017, our police department and the Give Back Organization (GBO), a local non-profit, contacted our university about hosting a game development summer camp. The camp was proposed to keep boys ages 12-15 living in a community with high levels of gang enrollment off the streets while providing an opportunity to learn about college and computing careers. The police also wanted to improve officer-youth r elations. Our lab provided camp counselors, space, and content for the camp. Each camp supported a total of twelve African-American boys. Over three years, we refactored the curricula and organization of the camp and present our lessons learned from the experience.},
  keywords={Games;Law enforcement;Industries;Engineering profession;Bridges;Training;Tools;at-risk youth;K-12 outreach;computer science education;computational thinking;community},
  doi={10.1109/RESPECT49803.2020.9272475},
  ISSN={},
  month={March},}
@ARTICLE{9490241,
  author={Tedre, Matti and Toivonen, Tapani and Kahila, Juho and Vartiainen, Henriikka and Valtonen, Teemu and Jormanainen, Ilkka and Pears, Arnold},
  journal={IEEE Access}, 
  title={Teaching Machine Learning in K–12 Classroom: Pedagogical and Technological Trajectories for Artificial Intelligence Education}, 
  year={2021},
  volume={9},
  number={},
  pages={110558-110572},
  abstract={Over the past decades, numerous practical applications of machine learning techniques have shown the potential of AI-driven and data-driven approaches in a large number of computing fields. Machine learning is increasingly included in computing curricula in higher education, and a quickly growing number of initiatives are expanding it in K-12 computing education, too. As machine learning enters K-12 computing education, understanding how intuition and agency in the context of such systems is developed becomes a key research area. But as schools and teachers are already struggling with integrating traditional computational thinking and traditional artificial intelligence into school curricula, understanding the challenges behind teaching machine learning in K-12 is an even more daunting challenge for computing education research. Despite the central position of machine learning and AI in the field of modern computing, the computing education research body of literature contains remarkably few studies of how people learn to train, test, improve, and deploy machine learning systems. This is especially true of the K-12 curriculum space. This article charts the emerging trajectories in educational practice, theory, and technology related to teaching machine learning in K-12 education. The article situates the existing work in the context of computing education in general, and describes some differences that K-12 computing educators should take into account when facing this challenge. The article focuses on key aspects of the paradigm shift that will be required in order to successfully integrate machine learning into the broader K-12 computing curricula. A crucial step is abandoning the belief that rule-based “traditional” programming is a central aspect and building block in developing next generation computational thinking.},
  keywords={Education;Machine learning;Programming profession;Automation;Task analysis;Terminology;Technological innovation;Machine learning;artificial intelligence;K-12;school;computing education;computational thinking;pedagogy},
  doi={10.1109/ACCESS.2021.3097962},
  ISSN={2169-3536},
  month={},}
@ARTICLE{9529183,
  author={Zapata-Cáceres, María and Martín-Barroso, Estefanía},
  journal={IEEE Access}, 
  title={Applying Game Learning Analytics to a Voluntary Video Game: Intrinsic Motivation, Persistence, and Rewards in Learning to Program at an Early Age}, 
  year={2021},
  volume={9},
  number={},
  pages={123588-123602},
  abstract={Learning to program at an early age has been shown to be a vehicle for the development of Computational Thinking. Game-based environments are often used to develop these skills, but they lack sufficient voluntariness to assess aspects related to intrinsic motivation, such as interests, skills, persistence in solving a problem and behavior in response to rewards. These aspects directly affect achievement and academic performance, so it is necessary to analyze possible age and gender differences in order to adjust Computational Thinking curricula. With this aim, we deployed a voluntary video game which addresses basic computational concepts, based on intrinsic motivation, and aimed at early ages. Data were collected and analyzed using game learning analytics for 15 months, during which 4124 users played more than 28187 games. The analysis shows significant age and gender differences in relation to interests, skills, achievement, and progression through attempts. It was observed that the concepts addressed were achievable between the ages of 3 and 6 years and full mastery was possible by the age of 4 years, regardless of gender, as children persist with the challenge, intrinsically motivated, until it is overcome. In terms of persistence, significantly different behaviors were observed in the face of the challenge, which can help us to adjust the different learning methodologies to each age group and gender, adapting the way we provide reinforcement and rewards, especially for boys in the more complex challenges and for girls from the age of 5 years onwards.},
  keywords={Games;Education;Programming profession;Data mining;Problem-solving;Tools;Computational thinking;early ages;game learning analytics;interests;intrinsic motivation;learn to program;persistence;rewards;skills;video games},
  doi={10.1109/ACCESS.2021.3110475},
  ISSN={2169-3536},
  month={},}
@ARTICLE{9994685,
  author={Andrzejewska, Magdalena and Stolińska, Anna},
  journal={IEEE Access}, 
  title={Do Structured Flowcharts Outperform Pseudocode? Evidence From Eye Movements}, 
  year={2022},
  volume={10},
  number={},
  pages={132965-132975},
  abstract={Computational thinking is a key universal competence, often taught using methods specific to computer science. One step towards achieving it is learning to analyse and create algorithms. Researchers have long been trying to establish how the form of representation of algorithms (pseudocode versus flowchart) affects its understanding and have reached varying, sometimes conflicting results. This article presents findings that provide objective new data on this topic. In our experiment, we used two different types of algorithmic tasks with three levels of complexity and a group of 114 research participants with varying programming skills. In addition, we used an eye tracking technique that allowed us to collect detailed information about the subjects’ attention distribution during analysis of algorithms. Our results show that subjects took significantly less time to analyse flowcharts (than they did with pseudocode), made much fewer errors, and had higher confidence in the correctness of their solution. Based on eye tracking data, a reduced number of both re-analyses of the algorithm and input data re-referencing was observed for graphically presented tasks. The difference in favour of flowcharts was revealed (with few exceptions) for all levels of algorithm complexity (simple, medium, complex), while regarding the duration of analysis the advantage of flowcharts increased with the growing complexity of algorithms. For complex algorithms, a significant relationship was observed between algorithm presentation and level of programming skills versus the duration of task solving and confidence level. Our study strongly supports the idea of using graphic representation of algorithms both when learning to code and in acquiring computational thinking skills.},
  keywords={Flowcharts;Codes;Gaze tracking;Task analysis;Computer languages;Education;Programming profession;Coding;computational thinking;eye tracking;flowchart;pseudocode;solving algorithmic problems},
  doi={10.1109/ACCESS.2022.3230981},
  ISSN={2169-3536},
  month={},}
@INPROCEEDINGS{9637170,
  author={Kastner-Hauler, Oliver and Tengler, Karin and Demarle-Meusel, Heike and Sabitzer, Barbara},
  booktitle={2021 IEEE Frontiers in Education Conference (FIE)}, 
  title={Adapting an OER Textbook for the Inverted Classroom Model — How To Flip the Classroom with BBC micro:bit Example Tasks}, 
  year={2021},
  volume={},
  number={},
  pages={1-8},
  abstract={Full Paper Research-to-Practice The current COVID-19 crisis has created significant challenges for schools. The growing importance of “flipping the classroom” and the needful emphasizing of online-learning were owed to the situation. To meet these requirements, materials and tasks must be adapted. The Open Educational Resource (OER) textbook “Computational Thinking with the BBC micro:bit” was developed for the introduction of Computational Thinking (CT) for 10-14-year-old pupils in Austria's secondary schools. Example tasks in the textbook are designed with an open end and present extensions with ideas for further development instead of ending abruptly. This article provides a guideline for a clear distinction in redesigning existing lessons following the Inverted Classroom Model (ICM) using videos for pre-class work and live task extensions for in-class work. Which parts in the learning design must remain as live lessons and which parts can be adapted for video lessons? The respective research shows that examples that have a makerspace activity as an extension are especially helpful for an efficient determination of the appropriate part in the learning design and particularly suitable for an adaptation with ICM. The central advantage of the ICM is that it responds flexibly to the individual learning needs of each student. It allows students to take their time reviewing the material at their own pace without getting left behind. The textbook used here encourages pupils to find their own solutions by explorative learning using the block-based programming environment MakeCode. Additional information to be uncovered by the learner is provided for every single step in the accompanying online wiki website. Results from observations showed that this uncover-function, being a central element of the online material, encouraged the learners to explore their own way in finding a solution with playful elements and increased motivation. The many haptic elements of a makerspace activity are in particular useful for consolidation of the learned and are predisposed for in-class work and deepening the understanding following the constructionism theory. A Design-Based Research (DBR) approach is used to create and evaluate the redesign of a proven example task in a pilot project. Teachers, who are already familiar with the BBC micro:bit and the OER textbook, were trained on how to use the “flip-version” of an example task in their lessons and asked to develop a lesson plan for implementation. The didactic approach to redesigning the material and teacher training was evaluated during the first cycle of DBR. Results from expert interviews showed that the redesigned material and training deliver a solid ground for rework and further research on a larger scale.},
  keywords={Training;Adaptation models;Streaming media;Time measurement;Online services;Distributed Bragg reflectors;Task analysis;microbit;inverted classroom;flipped classroom;makerspace;block-based programming;computational thinking;computer science},
  doi={10.1109/FIE49875.2021.9637170},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{9201802,
  author={Li, Xiaoying and Gu, Changlong},
  booktitle={2020 15th International Conference on Computer Science & Education (ICCSE)}, 
  title={Teaching reform of programming basic course based on SPOC blended teaching method}, 
  year={2020},
  volume={},
  number={},
  pages={411-415},
  abstract={As an important course in computer education in higher education, the programming basic course has problems in teaching and learning. The role of teachers is knowledge imparters. And the teaching methods despise students' development. Students often have fears and difficulties in their study, which is not conducive to build their computer application ability and computational thinking. In view of the teaching status quo and existing problems of the programming basic course, this paper proposes to use SPOC blended teaching mode to clarify the role of teachers and students, to develop an interactive teaching mode, to adopt case teaching, to enrich SPOC resources. And we provide students with timely feedback, and change the evaluation methods and other aspects. Through these reforms, we found that students' ability to read and write programs have been improved. The quality of teaching, and the cultivation of computational thinking are improved.},
  keywords={Programming profession;Grammar;Training;Videos;programming basic course;SPOC;blended teaching mode;teaching reform;computational thinking;teaching quality},
  doi={10.1109/ICCSE49874.2020.9201802},
  ISSN={2473-9464},
  month={Aug},}
@INPROCEEDINGS{9569250,
  author={Tengler, Karin and Kastner-Hauler, Oliver and Sabitzer, Barbara},
  booktitle={2021 16th International Conference on Computer Science & Education (ICCSE)}, 
  title={Identifying Preliminary Design Principles for a Robotics-based Learning Environment}, 
  year={2021},
  volume={},
  number={},
  pages={771-776},
  abstract={In recent years, the interest in introducing programming activities into the classroom has increased, emphasizing the importance of promoting computational thinking in young learners. Robotics-based learning environments are intended to facilitate the learning of programming at the primary level and support developing skills such as collaboration, creativity, and problem-solving thinking in a cross-curricular approach. An Austrian research project focuses on developing and implementing a robotics-based learning environment using the educational design research approach to gain insights into the introduction of computational thinking in primary education. This paper reports on a study to identify preliminary design principles of the learning environment that form the basis of the prototyping cycle of the overall research. Data were collected by interviewing seven experts who have theoretical and practical expertise on educational robotics in primary education. The resulting six preliminary design principles describe the first insight into the design of robotics-based learning environments.},
  keywords={Education;Collaboration;Problem-solving;Robots;Programming profession;Creativity;design principles;computational thinking;educational robotics;primary school},
  doi={10.1109/ICCSE51940.2021.9569250},
  ISSN={2473-9464},
  month={Aug},}
@INPROCEEDINGS{10714578,
  author={Repenning, Alexander and Basawapatna, Ashok},
  booktitle={2024 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={RULER: Prebugging with Proxy-Based Programming}, 
  year={2024},
  volume={},
  number={},
  pages={275-281},
  abstract={While block-based programming has successfully eliminated critical syntactic barriers to programming, it remains unclear how effectively it aids in overcoming semantic, logical, and pragmatic programming challenges that hinder computational thinking. These challenges are likely to far outweigh the syntactic ones. With the goal of creating a highly accessible programming tool for young students using mobile devices, we explored the concept of pragmatic prebugging to begin addressing these challenges. By pragmatic prebugging, we refer to proactive debugging tools designed to prevent logical errors. This article introduces RULER.game as a Computational Thinking Tool with built-in pragmatic prebugging, enabling novice programmers to create games through a paradigm we call proxy-based programming. A small study exploring error rates found statistically significant performance improvements of proxy-based programming compared to block-based programming.},
  keywords={Visualization;Codes;Error analysis;Semantics;Debugging;Games;Programming;Syntactics;Mobile handsets;Pragmatics;block-based programming;computational thinking;programming by example;mobile computing},
  doi={10.1109/VL/HCC60511.2024.00037},
  ISSN={1943-6106},
  month={Sep.},}
@INPROCEEDINGS{10654434,
  author={Urhan, Selin and Kocadere, Selay Arkun},
  booktitle={2024 5th International Conference in Electronic Engineering, Information Technology & Education (EEITE)}, 
  title={Problem-Solving Through Pair-Programming: The Mediational Role of ChatGPT}, 
  year={2024},
  volume={},
  number={},
  pages={1-10},
  abstract={In this study the pair computational problem-solving between the student and ChatGPT was analyzed. The three university students who were experienced in using Python program in computational problem-solving participated in the study. In data collection, a problem involving “limit and sequence” from calculus was used to examine students' collaboration with ChatGPT. Students were asked to construct a program that produces a solution to this problem in Python, and meanwhile, it was stated that they could work in pairs with ChatGPT. The responses provided by ChatGPT to the students in the computational problem-solving were evaluated in both computational and mathematical contexts and a list of cases in which ChatGPT could and could not support students in the computational thinking practices was created. Aside from the incorrect or implicit answers provided by ChatGPT, in general, it was determined that ChatGPT supported the student's performance in computational thinking. It was deduced that it was important for the student to make a rational problem-solving plan and to guide the ChatGPT with the appropriate prompts in order to use rational questioning that leads to productive argumentation with ChatGPT.},
  keywords={Education;Collaboration;Data collection;Chatbots;Calculus;Problem-solving;Python;ChatGPT;Python;programming;computational thinking},
  doi={10.1109/EEITE61750.2024.10654434},
  ISSN={},
  month={May},}
@INPROCEEDINGS{10569899,
  author={Dumančić, Mario and Rogulja, Nataša and Tomljenović, Krešo},
  booktitle={2024 47th MIPRO ICT and Electronics Convention (MIPRO)}, 
  title={The Importance of Algorithmic Thinking Development in Primary Education}, 
  year={2024},
  volume={},
  number={},
  pages={653-658},
  abstract={Advances in computer technology have expanded our capacity to solve problems on a scale never imagined, using strategies previously unavailable to us. Today’s "digital natives" have grown up in a world where technology is rapidly evolving, creating new fields of study, new types of jobs, and requiring new skill sets. Algorithmic and computational thinking are foundations for solving different problems from all domains and are not always closely related to computers and programming. They are currently primarily used in teaching computer science and STEM subjects but can be applied to all subjects and in all life situations. The paper presents the need to develop computational thinking in various subjects of primary education, with particular emphasis on combining digital ("plugged") and non-digital ("unplugged") activities, as well as on the development of algorithmic thinking. Four methodological scenarios with activities for the development of algorithmic thinking in primary education are presented.},
  keywords={Education;Informatics;Programming profession;STEM;computational thinking;algorithmic thinking;methodical scenario;unplugged activities;primary education},
  doi={10.1109/MIPRO60963.2024.10569899},
  ISSN={2623-8764},
  month={May},}
@INPROCEEDINGS{10578599,
  author={Buttke, Heike and Krugel, Johannes},
  booktitle={2024 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Information Encoding in Computer Science Education Using the Cup Song}, 
  year={2024},
  volume={},
  number={},
  pages={1-10},
  abstract={Problem solving plays a central role in computer science classes, whereby the problems to be analyzed are often already available in encoded form. The initial process where the learners have to parse information into symbols using adequate representations, has hardly been considered systematically so far. However, encoding development is essential for the understanding of sign processes and for general education. This paper therefore presents the development and evaluation of a teaching unit called “Cup Song Encoding” designed to model information encoding using a percussion song as an example. It simultaneously imparts coding theory concepts and fosters Computational Thinking of students. The material of the teaching unit is available online. The teaching unit was successfully tested with over 200 students in different age groups in K-12 during which the students' solutions were recorded and examined. The outcomes of the unit demonstrate the potential for encoding modeling to be a valuable addition to K-12 computer science education. The results also show how Computational Thinking methods can be integrated in computer science classes.},
  keywords={Computer science;Computational modeling;Symbols;Encoding;Computer science education;Problem-solving;K-12 Computer Science Education;Encoding;Computational Modeling;Semiotics;Computational Thinking},
  doi={10.1109/EDUCON60312.2024.10578599},
  ISSN={2165-9567},
  month={May},}
@INPROCEEDINGS{10423676,
  author={Mestre, Célia and Martins, Cristina and Tourais, Cândida and Guerra, Isabel},
  booktitle={2023 International Symposium on Computers in Education (SIIE)}, 
  title={The emergence of algorithmics in grade 1: a study within the mathematical curriculum}, 
  year={2023},
  volume={},
  number={},
  pages={1-7},
  abstract={This article presents a study carried out with two grade 1 classes, in the context of implementing the new Mathematics' curriculum. A sequence of tasks was carried out with the purpose of developing computational thinking, practices articulated with learning about the topic Numbers, and an attempt was made to identify the five practices of computational thinking in the students' activities. We ascertained that the students mobilized all the practices, the emergence of algorithmics coming to the fore and, at the same time, these practices allowed them to delve deeper into their mathematical knowledge in the content explored in the topic Numbers.},
  keywords={Computers;Education;Mathematics;Task analysis;Computational Thinking;algorithmics;new Mathematics’ curriculum;Numbers},
  doi={10.1109/SIIE59826.2023.10423676},
  ISSN={2476-2172},
  month={Nov},}
@ARTICLE{8735739,
  author={Min, Wookhee and Frankosky, Megan H. and Mott, Bradford W. and Rowe, Jonathan P. and Smith, Andy and Wiebe, Eric and Boyer, Kristy Elizabeth and Lester, James C.},
  journal={IEEE Transactions on Learning Technologies}, 
  title={DeepStealth: Game-Based Learning Stealth Assessment With Deep Neural Networks}, 
  year={2020},
  volume={13},
  number={2},
  pages={312-325},
  abstract={A distinctive feature of game-based learning environments is their capacity for enabling stealth assessment. Stealth assessment analyzes a stream of fine-grained student interaction data from a game-based learning environment to dynamically draw inferences about students' competencies through evidence-centered design. In evidence-centered design, evidence models have been traditionally designed using statistical rules authored by domain experts that are encoded using Bayesian networks. This article presents DeepStealth, a deep learning-based stealth assessment framework, that yields significant reductions in the feature engineering labor that has previously been required to create stealth assessments. DeepStealth utilizes end-to-end trainable deep neural network-based evidence models. Using this framework, evidence models are devised using a set of predictive features captured from raw, low-level interaction data to infer evidence for competencies. We investigate two deep learning-based evidence models, long short-term memory networks (LSTMs) and n-gram encoded feedforward neural networks (FFNNs). We compare these models' predictive performance for inferring students' knowledge to linear-chain conditional random fields (CRFs) and naïve Bayes models. We perform feature set-level analyses of game trace logs and external pre-learning measures, and we examine the models' early prediction capacity. The framework is evaluated using data collected from 182 middle school students interacting with a game-based learning environment for middle grade computational thinking. Results indicate that LSTM-based stealth assessors outperform competitive baseline approaches with respect to predictive accuracy and early prediction capacity. We find that LSTMs, FFNNs, and CRFs all benefit from combined feature sets derived from both game trace logs and external pre-learning measures.},
  keywords={Hidden Markov models;Computational modeling;Games;Predictive models;Task analysis;Adaptation models;Computer science;Computational thinking;deep learning;educational games;game-based learning;stealth assessment.},
  doi={10.1109/TLT.2019.2922356},
  ISSN={1939-1382},
  month={April},}
@INPROCEEDINGS{9223343,
  author={Nasir, Jauwairia and Norman, Utku and Bruno, Barbara and Dillenbourg, Pierre},
  booktitle={2020 29th IEEE International Conference on Robot and Human Interactive Communication (RO-MAN)}, 
  title={When Positive Perception of the Robot Has No Effect on Learning}, 
  year={2020},
  volume={},
  number={},
  pages={313-320},
  abstract={Humanoid robots, with a focus on personalised social behaviours, are increasingly being deployed in educational settings to support learning. However, crafting pedagogical HRI designs and robot interventions that have a real, positive impact on participants' learning, as well as effectively measuring such impact, is still an open challenge. As a first effort in tackling the issue, in this paper we propose a novel robot-mediated, collaborative problem solving activity for school children, called JUSThink, aiming at improving their computational thinking skills. JUSThink will serve as a baseline and reference for investigating how the robot's behaviour can influence the engagement of the children with the activity, as well as their collaboration and mutual understanding while working on it. To this end, this first iteration aims at investigating (i) participants' engagement with the activity (Intrinsic Motivation Inventory-IMI), their mutual understanding (IMIlike) and perception of the robot (Godspeed Questionnaire); (ii) participants' performance during the activity, using several performance and learning metrics. We carried out an extensive user-study in two international schools in Switzerland, in which around 100 children participated in pairs in one-hour long interactions with the activity. Surprisingly, we observe that while a teams' performance significantly affects how team members evaluate their competence, mutual understanding and task engagement, it does not affect their perception of the robot and its helpfulness, a fact which highlights the need for baseline studies and multi-dimensional evaluation metrics when assessing the impact of robots in educational activities.},
  keywords={Conferences;Humanoid robots;Collaboration;Particle measurements;Collaborative work;Task analysis;Robots;educational robotics;collaborative problem solving;computational thinking;engagement;mutual modelling;robot perception;human-robot interaction},
  doi={10.1109/RO-MAN47096.2020.9223343},
  ISSN={1944-9437},
  month={Aug},}
@INPROCEEDINGS{9202832,
  author={Marchisio, Marina and Margaria, Tiziana and Sacchet, Matteo},
  booktitle={2020 IEEE 44th Annual Computers, Software, and Applications Conference (COMPSAC)}, 
  title={Automatic Formative Assessment in Computer Science: Guidance to Model-Driven Design}, 
  year={2020},
  volume={},
  number={},
  pages={201-206},
  abstract={Adaptive online learning can facilitate students' support by responding immediately to the user's interactions. Good feedback to students helps closing the gap between actual and desired performance. In this paper we analyze how to introduce online adaptive formative learning in Computer Science, a discipline with well documented challenges that are hard to tackle with traditional classroom methods. Specifically, we developed illustrative learning items teaching Model-Driven Design and implemented them in an online system that implements a model for automatic formative assessment developed by University of Torino. The model takes advantage of an automatic assessment system initially designed for STEM disciplines, then adopted for teaching languages and other disciplines too. The key features of the adaptive model supported by the online system are algorithmic questions, availability, contextualization, immediate feedback, interactive feedback, and open answers. These features are portable across subject domains, so the system can be adapted to include new subjects. We chose MDD because it is a topic of Computer Science education connected with Computational Thinking, software design, and formal methods, which are three of the core areas in need of enhanced support.},
  keywords={Education;Adaptation models;Computational modeling;Computers;Tools;Programming;adaptive assessment;automatic assessment;formative assessment;interactive feedback;Computer Science education;computational thinking;model driven design;DIME;model checking},
  doi={10.1109/COMPSAC48688.2020.00035},
  ISSN={0730-3157},
  month={July},}
@ARTICLE{10054368,
  author={Adnan, Noridayu and Abdullah, Siti Norul Huda Sheikh and Raja Yusof, Raja Jamilah and Zainal, Noor Faridatul Ainun and Qamar, Faizan and Yadegaridehkordi, Elaheh},
  journal={IEEE Access}, 
  title={A Systematic Literature Review in Robotics Experiential Learning With Computational and Adversarial Thinking}, 
  year={2023},
  volume={11},
  number={},
  pages={44806-44827},
  abstract={The rise of the Industrial Revolution 4.0 and the increasing reliance on the digital economy drive the need for a new set of skills, especially in robotics learning, that includes computational thinking (CT) and adversarial thinking (AT) for the young generation. The need for CT-related skills includes various fields, such as robotics, engineering, computer science, mathematics, music, arts, and humanities. Therefore, adopting robotic learning with CT and AT can enhance learning skills over the conventional learning model. This paper presents a systematic literature review on CT and AT practices in robotics learning to improve educational methods. This study conducts a systematic literature review from four databases: ACM, Scopus, IEEE Xplore, and ScienceDirect. Sixty-five studies in robotics learning to increase CT and AT skills were analyzed by applying the inclusion and exclusion criteria. The study’s findings show that CT and AT are significant in training students to engage in robotics learning activities. These considerations will lead to strengthening their skill and critical thinking. The study also suggests that integrating these skills can prepare teachers for critical thinking and boost student learning. The findings suggest that CT and AT can directly adopt digital adversarial learning skills to improve overall robotics learning activities. For future studies, the difference in learning ages related to robotics activities with CT and AT applications can be studied to deeply comprehend the effectiveness of CT and AT applications.},
  keywords={Robots;Computational modeling;Systematics;Education;Mathematical models;Learning systems;Adaptation models;Fourth Industrial Revolution;Robotics;computational thinking;adversarial thinking;experiential learning model},
  doi={10.1109/ACCESS.2023.3249761},
  ISSN={2169-3536},
  month={},}
@INPROCEEDINGS{9694082,
  author={Deng, Wei and Huang, Xinglei and Liu, Qingtang and Wang, Zhibin},
  booktitle={2021 Tenth International Conference of Educational Innovation through Technology (EITT)}, 
  title={Curriculum Design of Artificial Intelligence in Middle School - Taking Posture Recognition as an Example}, 
  year={2021},
  volume={},
  number={},
  pages={310-315},
  abstract={At present, there is still a lack of suitable artificial intelligence curriculum in primary and secondary schools in China. Based on a project-based learning model, an artificial intelligence course was designed for middle school-aged students. Learning objectives were deconstructed according to the five concepts of artificial intelligence, and learning contents were arranged according to the cognitive characteristics of middle school students. In the process of teaching, the cultivation of students' computational thinking ability was paid great attention, and teaching example was given at the end of the paper.},
  keywords={Technological innovation;Computational modeling;Education;Learning (artificial intelligence);high school;artificial intelligence education;curriculum design;posture recognition;project-based learning;computational thinking},
  doi={10.1109/EITT53287.2021.00067},
  ISSN={2166-0549},
  month={Dec},}
@ARTICLE{9755942,
  author={Trilles, Sergio and Monfort-Muriach, Aida and Gómez-Cambronero, Águeda and Granell, Carlos},
  journal={IEEE Revista Iberoamericana de Tecnologias del Aprendizaje}, 
  title={Sucre4Stem: Collaborative Projects Based on IoT Devices for Students in Secondary and Pre-University Education}, 
  year={2022},
  volume={17},
  number={2},
  pages={150-159},
  abstract={This paper describes a new technological evolution of the Sucre project, which aims to foster a vocation for science and develop computational thinking and programming skills in pre-university students. This improved version is called Sucre4Stem and has been designed from the Internet of Things perspective. At a technological level, we differentiate two main tools, SucreCore andSucreCode. SucreCore provides a new, more compact design, encapsulates an advanced microcontroller and supports wireless connectivity with the ability to create online variables and functions. SucreCode, the block-based visual programming tool, has a revamped interface and allows wireless communication with SucreCore. At the pedagogical level, Sucre4Stem makes it easier to implement new group dynamics and to create novel types of collaborative projects between groups of students. In this article, we also explore how these collaborative projects can be carried out by taking advantage of the different types of communications between SucreCore and the server-side platform using shared online variables and functions.},
  keywords={Programming profession;Sensors;Actuators;Connectors;STEM;Collaboration;Visualization;Computational thinking;programming promotion;pre-university ages;Internet of Things},
  doi={10.1109/RITA.2022.3166854},
  ISSN={1932-8540},
  month={May},}
@INPROCEEDINGS{9149481,
  author={Sobreira, Péricles de Lima and Abijaude, Jauberth Weyll and Viana, Hellan Dellamycow Gomes and Santiago, Levy Marlon Souza and Guemhioui, Karim El and Wahab, Omar Abdul and Greve, Fabíola},
  booktitle={2020 IEEE World Conference on Engineering Education (EDUNINE)}, 
  title={Usability evaluation of block programming tools in IoT contexts for initial engineering courses}, 
  year={2020},
  volume={},
  number={},
  pages={1-5},
  abstract={Scratch has been shown as one of the main tools for teaching Computational Thinking through the concept of(block-based) programming. In the present research, two platforms based on/inspired by Scratch were considered for the analysis of their usability characteristics through the Cognitive Walkthrough method, for later use by engineering students at the beginning of their university courses for the development of their competences of logical thinking and abstraction of complex concepts: Snap4Arduino (used in the development of solutions for Internet of Things), and; App Inventor (used in the development of Android applications). The results show a positive evaluation of these tools, generating motivation for their use by new engineering students in their teaching-learning processes.},
  keywords={Tools;Usability;Programming profession;Internet of Things;Engineering students;Computational Thinking;Usability;Cognitive Walkthrough;Evaluation;Scratch;Internet of Things;IoT;Learning;Engineering Education},
  doi={10.1109/EDUNINE48860.2020.9149481},
  ISSN={},
  month={March},}
@INPROCEEDINGS{9453973,
  author={Zeevaarders, Ad and Aivaloglou, Efthimia},
  booktitle={2021 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Exploring the Programming Concepts Practiced by Scratch Users: an Analysis of Project Repositories}, 
  year={2021},
  volume={},
  number={},
  pages={1287-1295},
  abstract={Scratch enables children to learn about programming by creating games and animations, and is currently one of the most popular introductory programming languages. While Scratch has been found to increase students' motivation and interest in programming, it has been debated whether Scratch users practice and learn about core programming concepts such as loops, conditional expressions, procedures and variables. This paper presents a large scale study of the progression of the programming concepts practiced by Scratch users through an analysis of their complete public project portfolios. A dataset of over 112 thousand authors and their 1 million projects was constructed and analyzed from three viewpoints. First, we investigate the development of programming concepts by looking at block usage statistics for each project in the users' repositories. Second, we score and analyze the dataset using a computational thinking rubric. Third, we identify users that have left the Scratch platform and evaluate the learning goals they have achieved. Our results show that, while users progress in Scratch, there is a positive trend in the use of all concepts that were examined. Within the least utilized concepts, even after the 20th project of Scratch users, are procedures, conditional loops and logic operations. Examining the users who have left the Scratch platform after creating at least the mean amount of nine projects, we measured that half had left without ever utilizing procedures, and a third had left without ever utilizing conditional loops.},
  keywords={Conferences;Games;Programming;Market research;Software;Trajectory;Engineering education;Programming education;Scratch;Game development;Computational Thinking;K-12},
  doi={10.1109/EDUCON46332.2021.9453973},
  ISSN={2165-9567},
  month={April},}
@INPROCEEDINGS{9274184,
  author={Schneider, Gelson and Bernardini, Flavia and Boscarioli, Clodis},
  booktitle={2020 IEEE Frontiers in Education Conference (FIE)}, 
  title={Teaching CT through Internet of Things in High School: Possibilities and Reflections}, 
  year={2020},
  volume={},
  number={},
  pages={1-8},
  abstract={This Research to Practice Full Paper presents a pedagogical practice for technical high school students for developing Computational Thinking (CT) abilities through Internet of Things technologies. The covered topics in our proposal include (i) the use of temperature and humidity sensors for data collection, treatment and visualization using Arduino and micro-controllers; (ii) Smart and Human Cities (SHC) and Open Data concepts, in order to lead the students to reflect on the problems of their city and on data protection. Our motivation to our proposal is due to the educational processes have to develop criticality and the ability to solve problems among students. In this context, CT has been used for this through the use of robotics, game building or unplugged computing. On the other hand, technologies for implementing Internet of Things (IoT) have been used in several domains of society, including cities transformation. One important aspect in this scenario is data generation, which have to be carefully tackled by government's and who develop solutions to SHC. In this way, using IoT for teaching CT is an important aspect, also considering open data, privacy and SHC context. In our pedagogical practice, students were able to design and develop solutions to problems in their daily lives indirectly applying CT skills, such as decomposition, pattern recognition, abstraction, automation and analysis, as well as self-skills, collaboration, creativity and critically, required nowadays in broad professional training. It was also possible to develop students' interest in raising awareness of the use of computational technologies, as a solution to problems in society considering aspects of SHC and open data; propose a technological solution using IoT; and analyze the use of these data collected for the social well-being. For the evaluation of our proposal, we carried out questionnaires and tasks observation. The experience was considered successful in its planning and application, with a positive evaluation of the participating students.},
  keywords={Education;Urban areas;Internet of Things;Proposals;Intelligent sensors;Programming profession;Ambient intelligence;computational thinking;internet of things;programming teaching;smart and human cities},
  doi={10.1109/FIE44824.2020.9274184},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{9125209,
  author={Xenakis, Apostolos and Xenakis, Christos and Psycharis, Sarantos and Kalovrektis, Konstantinos},
  booktitle={2020 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Calculation of the Hubble Universe Expansion Constant by Analyzing Observational Data: An Exploratory Teaching Proposal based on STEM Epistemology}, 
  year={2020},
  volume={},
  number={},
  pages={170-177},
  abstract={Approaches to STEM epistemology are related to the so-called “Integrated STEM Education Curriculum integration of STEM contents based in constructivism theories of learning as a context to implement the STEM epistemology. There are two approaches for STEM education integration: the content integration and the context integration. Computational Pedagogy is a didactic model that applies the Computational Science experiment in order to collect and analyze real- time data in alignment with the practices of Computational Thinking. In this work, the inquiry based teaching and learning strategy is implemented in order to measure the Hubble Universe expansion constant in agreement with the standard Scientific and Engineering practices as a computational experiment.},
  keywords={Analytical models;Scientific computing;Conferences;Computational modeling;Data models;Proposals;Engineering education;STEM Epistemology;Computational Pedagogy;Computational thinking;Hubble Constant;Data analysis},
  doi={10.1109/EDUCON45650.2020.9125209},
  ISSN={2165-9567},
  month={April},}
@INPROCEEDINGS{9678771,
  author={Gougeon, Luc and Cross, Jeffrey S.},
  booktitle={2021 IEEE International Conference on Engineering, Technology & Education (TALE)}, 
  title={Japanese Elementary Schools' Playful Programming Curriculum Considerations: Readiness, Limitations and Teacher Training}, 
  year={2021},
  volume={},
  number={},
  pages={23-28},
  abstract={Japan's elementary school educators are facing the difficult task of teaching computer programming education and computational thinking in a playful way which affords students' time to acquire new knowledge while discovering new technology. Japan as a nation has constantly ranked lower than other developed nations in the field of Information and Communication Technology (ICT) literacy. The recent introduction of programming education has created an additional task for educators to learn about programming in order to teach it. Programming education was introduced in April 2020, and little research has been done to measure the knowledge gap of educators. In March 2020, a month before the implementation of programming instruction in Japanese schools, 22 elementary schools were visited to access readiness and to distribute an online survey. The surveys and informal interviews revealed the unpreparedness of educators for the task of teaching programming and limited programming material in the approved textbooks. This research is intended to inform stakeholders in order to improve the fundamental training of in-service and pre-service educators so they can have the necessary knowledge and confidence to teach programming in a fun and playful manner to their students.},
  keywords={Training;Portable computers;Pandemics;Government;Tablet computers;Internet;Information and communication technology;programming;Japan;computational thinking;ICT;primary school;educational policy},
  doi={10.1109/TALE52509.2021.9678771},
  ISSN={2470-6698},
  month={Dec},}
@INPROCEEDINGS{10343492,
  author={Arslan, Pelin Yüksel and Kayali, Fares},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Exploring the Design and Implementation of a Robotic-Coding Camp in Teacher Education}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  abstract={This study focused on a bachelor- university-level course that aims to design and implement a robotic-coding camp to train pre-service teachers. Seventeen pre-service teachers participated in this study conducted in the Computational Empowerment Lab at the Center of Teacher Education at the University of Vienna. The researchers aimed to identify specific improvement strategies for in-service and pre-service teachers to enhance their pedagogical practices in designing a robotic-coding camp by promoting student critical thinking, computational thinking, and problem-solving competencies. Additionally, the study proposed to identify the relevant features of the camp's design and implementation that can promote practitioners' engagement and address the challenges they face. The course was offered during the summer semester of 2023. For the procedure of the study, pre-service teachers thought about a problem or situation using the phenomena-based learning method and explained the problem using mediating tools, including educational robots, 3D printers, laser-cutting, and creative Lego boxes, among others. At the end of the course, students developed their project, designed a prototype of a robotic-coding camp, and created digital stories as real-world basis problem statements for their project. Students' assignments and group work interactions, including forum discussions in Moodle, reflection papers, and hands-on activities, were used as data sources. Data collected and analyzed by qualitatively. Participatory action research was used as a research method. The results provide guidelines for how to design and implement robotic coding camps and digital stories for teachers who might want to implement a robotic camp in their future careers. In addition, the results suggest improvement strategies for designing robotic coding activities, including four action steps: (1) phenomenon-based problem statement, (2) visualizing the problem as a digital story, (3) finding a pattern in the problem and (4) creating the learning environment and coding. The most challenging part was the third step, in which participant had difficulty finding a pattern within the problem.},
  keywords={Learning systems;Three-dimensional displays;Soft sensors;Prototypes;Encoding;Reflection;Problem-solving;robotic coding;digital storytelling;action research;participatory design;and computational thinking},
  doi={10.1109/FIE58773.2023.10343492},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{9453891,
  author={Fatourou, Eleni and Zygouris, Nikolaos C. and Loukopoulos, Thanasis and Stamoulis, Georgios I.},
  booktitle={2021 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Review of Learning Design Choices of Primary School Programming Courses in Empirical Researches}, 
  year={2021},
  volume={},
  number={},
  pages={1010-1018},
  abstract={Programming, most recently in the form of Computational Thinking (CT), is emerging as a new subject in primary schools worldwide. By data-based decision making, teachers, as learning designers, make decisions on instruction design based on a broad range of evidence, such as student assessment scores and classroom teaching observations. Given the current limitations on conclusive, field-proven teaching practices and an underlying “culture” to use as a basis, we turn to pertinent empirical studies that the growing scientific interest on introducing programming in primary school curricula has produced. The hypothesis is that we may overcome the lack of extensive experience in designing a programming course by reviewing the above evidence, in order to frame learning situations and methods.},
  keywords={Conferences;Decision making;Cultural differences;Engineering education;Programming profession;Gender issues;Elementary school;learning design;coding/programming;Computational Thinking;classroom},
  doi={10.1109/EDUCON46332.2021.9453891},
  ISSN={2165-9567},
  month={April},}
@ARTICLE{10577151,
  author={Khuda, Ikram E. and Ahmad, Sadique and Ashraf Ateya, Abdelhamied},
  journal={IEEE Access}, 
  title={STEM-Based Bayesian Computational Learning Model-BCLM for Effective Learning of Bayesian Statistics}, 
  year={2024},
  volume={12},
  number={},
  pages={91217-91228},
  abstract={This work contributes to the comprehension of Bayes’ theorem inclusive Bayesian probabilities and Bayesian inferencing within the framework of STEM (Science, Technology, Engineering, Arts, and Mathematics) and cognitive learning w.r.t Bloom’s taxonomy (BT). Bayes’ theorem is taken as a crucial statistical instrument employed in the development of intelligent systems and the management of risks, commonly utilized by engineers for tasks in machine learning and managerial decision-making. The fundamental concept behind Bayes’ theorem revolves around comprehending the degree of truth within the confines of an explicit perspective. This involves partitioning the entire sample space of possible evidence and utilizing the subset containing the relevant perspective to estimate the uncertainty of an event or the reliability of a model. However, it is often found difficult for students to understand Bayes’ theorem to the level of applying it to real-world problems. Considering this, the proposed learning method in this paper elucidated the acquisition of Bayes’ mathematical formulation by leveraging computational thinking, leading to the development of a computational model. The proposed model is named the Bayesian Computational Learning Model (BCLM). Subsequently, we have probed the utility of BCLM in the design and plan of learning activities, coherent to the STEM paradigm and BT cognitive learning hierarchy.},
  keywords={Bayes methods;Probability;Computational modeling;STEM;Mathematical models;Taxonomy;Problem-solving;Computer simulation;Engineering education;Intelligent systems;Project management;Risk management;Bloom’s taxonomy;Bayes’ theorem;computational thinking;computer simulations;decision making;engineering education;frequentist;intelligent systems design;machine learning;project management;risk analysis;STEM},
  doi={10.1109/ACCESS.2024.3420731},
  ISSN={2169-3536},
  month={},}
@INPROCEEDINGS{10342890,
  author={Vieira, Camilo and Restrepo, David and De La Hoz, Jose L.},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Computational Notebooks in a Finite Element Analysis Course: Engineering Students' Reflections on the Value and Challenges of Computational Approaches}, 
  year={2023},
  volume={},
  number={},
  pages={1-5},
  abstract={This work-in-progress paper introduces an innovative approach that uses computational notebooks to teach Finite Element Analysis (FEA) in a Mechanical Engineering undergraduate course to aid the understanding of complex phenomena in Mechanics of Materials, and enhance students' computational thinking skills. Research indicates that students, irrespective of their educational level, face difficulties in grasping fundamental concepts in mechanics of materials. These challenges arise from the inherent complexity of concepts like stress, strain, torsion, and buckling, which are difficult to observe, hindering comprehension. Therefore, this work aims to leverage the synergy between mechanics of materials and computational principles to actively engage students in advanced topics such as structural strength, failure of structures, and sensitivity analysis, through the use of computational notebooks. To evaluate the effectiveness of this approach, we first asked students to analyze truss structures using hand calculations following the discrete stiffness method within a Finite Element Analysis framework. Subsequently, we implemented the same method as a simulation tool in a MATLAB Computational Notebook. Finally, we asked the students to reflect on: (1) the value of using computational methods to approach Finite Element Analysis when compared to hand calculations; (2) the difficulties they faced when implementing the activities in the MATLAB Computational Notebook; (3) the support they required to successfully complete these activities; and (4) the effectiveness of the simulation tool in understanding the effect of forces and stress distributions in structures. We anticipate that computational notebooks will provide an ideal platform for sharing lessons and tutorials, enhancing student engagement, and promoting active learning. Students have access to the complete source code, allowing them to develop computational skills. Early exposure to coding, modeling, and simulation techniques is crucial in preparing students for the computational demands of modern engineering workplaces.},
  keywords={Visualization;Sensitivity analysis;Source coding;Tutorials;Reflection;Finite element analysis;Mechanical engineering;Computational notebooks;mechanics of materials;computational thinking;threshold concepts;Finite Element Analysis},
  doi={10.1109/FIE58773.2023.10342890},
  ISSN={2377-634X},
  month={Oct},}
@ARTICLE{10054028,
  author={Hooshyar, Danial and Mawas, Nour El and Milrad, Marcelo and Yang, Yeongwook},
  journal={IEEE Access}, 
  title={Modeling Learners to Early Predict Their Performance in Educational Computer Games}, 
  year={2023},
  volume={11},
  number={},
  pages={20399-20417},
  abstract={Data mining approaches have proven to be successful in improving learners’ interaction with educational computer games. Despite the potential of predictive modelling in providing timely adaptive learning and gameplay experience, there is a lack of research on the early prediction of learners’ performance in educational games. In this research, we propose an early predictive modelling approach, called GameEPM, to estimate learners’ final scores in an educational game for promoting computational thinking. Specifically, the GameEPM approach models the sequence of learners’ actions and then uses a limited sequence of the actions to predict the final score of the game for each learner. The findings from our initial trials show that our approach can accurately and robustly estimate the learners’ performance at the early stages of the game. Using less than 50% of learners’ action sequences, the cross-validated deep learning model achieves a squared correlation higher than 0.8 with a relative error of less than 8%, outperforming a range of regression models like linear regression, random forest, neural networks, and support vector machines. An additional experiment showed that the validated deep learning model can also achieve high performance while tested on an independent game dataset, showing its applicability and robustness in real-world cases. Comparing the results with traditional machine learning methods revealed that, in the validation and application phases, up to 0.30 and 0.35 R2 gain is achieved in favor of the deep learning model, respectively. Finally, we found that while the lengths of action sequences influence the predictive power of the traditional machine learning methods, this effect is not substantial in the deep learning model.},
  keywords={Games;Predictive models;Performance evaluation;Machine learning;Adaptation models;Deep learning;Computational modeling;Education;Learning systems;Early performance prediction;learner model;educational games;computational thinking;deep learning},
  doi={10.1109/ACCESS.2023.3249286},
  ISSN={2169-3536},
  month={},}
@INPROCEEDINGS{9954081,
  author={Lertlapnon, Thanachote and Lueangrungudom, Naruebes and Vittayakorn, Sirion},
  booktitle={2022 14th International Conference on Information Technology and Electrical Engineering (ICITEE)}, 
  title={Protobot: An Educational Game for Algorithmic Thinking}, 
  year={2022},
  volume={},
  number={},
  pages={79-84},
  abstract={Algorithm has been heavily used to provide a comfort life for us: from finding the best route in Google map to biometrics authentication on your phone. The significant of algorithm defines Computational thinking (CT) as one of the 21st Century skills. Although CT has been integrated into the education in the past years, many students still struggle with CT concept due to the complication of the topic and limited learning methods provided in school environment. To provide alternative learning approach for algorithmic thinking, we propose a game-base learning system called Protobot. Protobot requires students to apply their CT knowledge, especially the algorithmic thinking to solve problems in the gameplay. The experimental results demonstrate that Protobot fosters the algorithmic thinking skill of the players as well as provides the amusement during the gameplay.},
  keywords={Learning systems;Electrical engineering;Biometrics (access control);Education;Games;Internet;Complexity theory;Game-based learning;Digital game-based learning;Procedural content generation;Algorithmic thinking;Computational thinking},
  doi={10.1109/ICITEE56407.2022.9954081},
  ISSN={},
  month={Oct},}
@INPROCEEDINGS{10386929,
  author={Underwood, William and Gage, Joan},
  booktitle={2023 IEEE International Conference on Big Data (BigData)}, 
  title={Can GPT-4 Think Computationally about Digital Archival Practices?}, 
  year={2023},
  volume={},
  number={},
  pages={2105-2115},
  abstract={This paper describes an investigation of GPT-4’s knowledge in some areas of archival practice, and its ability to think computationally about archival tasks. It is demonstrated that GPT-4 has shown an understanding of ten among the twenty-two distinct forms of computational thinking. When GPT-4 is combined with plugins, it is able to apply some of these methods and tools to digital archival tasks.},
  keywords={Computational modeling;Data visualization;Oral communication;Metadata;Big Data;Data mining;Systems thinking;computational thinking;systems thinking;large language models;GPT-4;archival system;digitization;metadata extraction},
  doi={10.1109/BigData59044.2023.10386929},
  ISSN={},
  month={Dec},}
@INPROCEEDINGS{10825124,
  author={Underwood, William and Gage, Joan},
  booktitle={2024 IEEE International Conference on Big Data (BigData)}, 
  title={Can GPT-4 Think Computationally about Digital Archival Tasks? – Part 2}, 
  year={2024},
  volume={},
  number={},
  pages={2533-2542},
  abstract={This study examines the computational problem-solving capabilities of GPT-4, focusing on its knowledge of machine learning, email categorization, and computational problem solving, alongside its proficiency in Python programming, computational abstraction, and program debugging. The aim of these investigations is to evaluate whether the capabilities of Large Language Models (LLMs), as demonstrated by GPT-4, can support Master of Library and Information Science (MLIS), graduate students in developing computational thinking skills relevant to digital archival tasks.},
  keywords={Computational modeling;Large language models;Text categorization;Machine learning;Debugging;Chatbots;Electronic mail;Problem-solving;Programming profession;Python;computational thinking;GPT-4;computational problem solving;large language models;MLIS education},
  doi={10.1109/BigData62323.2024.10825124},
  ISSN={2573-2978},
  month={Dec},}
@INPROCEEDINGS{10775099,
  author={P., Archana Reddy and G., Divya Jyothi and Varshita, Velumury and Akshitha, Chennupati and Radha, D},
  booktitle={2024 IEEE North Karnataka Subsection Flagship International Conference (NKCon)}, 
  title={Modeling Plants vs Zombies Gameplay using Finite automata}, 
  year={2024},
  volume={},
  number={},
  pages={1-7},
  abstract={Playing video games on personal computers is known as PC gaming. PC games are available in a variety of genres, offer both single-player and multiplayer options, and have spawned an international e-sports industry. Modding communities are active, digital distribution systems are essential, and hardware can be customized. Future developments in gaming, such as virtual reality, cloud gaming, and artificial intelligence, portend more innovation in the industry. The game, Plants vs Zombies is represented by Finite Automata and it is ruled by DFAs and NFAs which describe the actions and behaviours of both the plants and the zombies and the result of their actions. In the proposed work you can notice how the NFA will be converted to DFA and vice versa due to its handy functions. Overall, "Plants vs Zombies" is a fun and interactive way for players to explore computational thinking while learning about the complex ideas of NFA and DFA in Automata Theory. The advantages are Synchronize State Management, Consistent State Transitions, Easier Development, and Unambiguous Animation Staging.},
  keywords={Video games;Technological innovation;Solid modeling;Analytical models;Systematics;Learning automata;Computational modeling;Biological system modeling;Games;Virtual reality;Finite Automata;Computational Thinking;Automata Theory;Plants vs Zombie and Interactive Gaming},
  doi={10.1109/NKCon62728.2024.10775099},
  ISSN={},
  month={Sep.},}
@INPROCEEDINGS{9894554,
  author={Chang, Chih-Kai and Chen, Pin-Chen},
  booktitle={2022 12th International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={Development and Assessment of Recommendation System Based on Behavioral Intervention Analysis}, 
  year={2022},
  volume={},
  number={},
  pages={208-213},
  abstract={Computer science education in primary and secondary schools uses the. visual programming language "Scratch " to learn computational thinking. However, the limited number of course hours and overwhelmed teachers delay students’ learning progression. Although many Scratch instructional videos are available online, students still fail because of a lack of keyword-searching ability. Given this learning dilemma, we use the existing teaching videos online as hints assisting students in learning "Scratch." This project uses OpenCV to record the program blocks and analyze the behavioral intentions, and then compares and analyzes it with the video content to recommend and mark relevant segments that students need. We believe that through this recommendation system, intelligent hints in the form of videos can cultivate students’ self-learning ability and improve current teaching adversity.},
  keywords={Visualization;Computer languages;Education;Computer science education;Behavioral sciences;Internet;Informatics;Computer science education;Computational Thinking;Visual Programming Language;Intelligent Hint;Recommendation System},
  doi={10.1109/IIAIAAI55812.2022.00049},
  ISSN={2472-0070},
  month={July},}
@INPROCEEDINGS{10449552,
  author={Kulanova, Fariza and Baitureev, Daniyar and Singh, Chandan Pal},
  booktitle={2023 4th International Conference on Computation, Automation and Knowledge Management (ICCAKM)}, 
  title={Fostering Student Competencies in Creative Project Work Through STEAM and Artificial Intelligence in Teaching Art}, 
  year={2023},
  volume={},
  number={},
  pages={1-6},
  abstract={The objective of this study is to determine if there exists a statistically significant distinction between high school pupils who get instruction in the topic of “Art” through the use of Artificial Intelligence (AI) and those who receive instruction through the integration of Science, Technology, Engineering, Arts, and Mathematics (STEAM). Creativity, particularly within the realm of art and design, is commonly perceived as the ability to think beyond conventional boundaries. The study posited an alternative perspective by equating computational thinking with creative thinking. A total of forty-two kids from a high school in Kazakhstan were chosen as case studies for the topic of Art. The objective is to facilitate the integration of STEM education and art-based education.},
  keywords={Visualization;Art;Three-dimensional displays;Education;Vocational training;Artificial intelligence;Task analysis;Computational Thinking;Creativity;Art and Design Practices;STEAM;AI;Teaching;Pedagogy},
  doi={10.1109/ICCAKM58659.2023.10449552},
  ISSN={},
  month={Dec},}
@INPROCEEDINGS{10342646,
  author={Alharbi, Noha Abdulkhalig M. and Cutts, Quintin I.},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={An Elaboration of Research Led Computer Science Framework for Early Education}, 
  year={2023},
  volume={},
  number={},
  pages={1-8},
  abstract={Teachers face challenges in teaching new subjects at the early primary level. The difficulties vary from subject to subject. Teachers' first challenge in Computer Science (CS) and Computational Thinking teaching is their technological literacy and competency challenges. Lack of confidence, time, and willingness are significant reasons for the challenge. One of the studies on mathematics teaching shows that teachers need more knowledge tools and models to facilitate the analysis during the teaching process. Researchers assert that educational practice has focused more on technology than on new pedagogies needed to truly use technology in a transformative way. Frameworks are designed to meet high-level objectives set by the authorities. Teachers are provided with teaching materials for developing the course contents. The frameworks act as a connection between high-level objectives and low-level teaching materials. In this paper, we present the elaboration of a framework for teaching CS at the early stages of education. The framework consists of three components based on modelling real-world problems into a machine-world context and then realising the machine solution in the real world. Moreover, the problem-solving component of the framework emphasizes the iterative process of learning that strengthens the previous concepts and provides a logical con-nection between the previous and new concepts. The framework was evaluated in the context of Saudi Arabia, where the teachers were interviewed individually and then provided with a guide for teaching grade-4 learners. The guide was developed using the material provided by the Saudi Ministry of Education. The teachers taught using this guide over a sequence of lessons. At the end of this time, a second individual teacher interview was conducted to determine teacher experience. The results show that teaching using the framework is effective, and it is not only easier for teachers to understand the teaching method but also for learners to learn the content quickly.},
  keywords={Computer science;Surveys;Computational modeling;Education;Mathematical models;Problem-solving;Iterative methods;K-12;Computer Science Education;Computational Thinking},
  doi={10.1109/FIE58773.2023.10342646},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{10102868,
  author={Boya-Lara, Carlos and Diaz-Solano, Daniela and Fehrenbach, Aaron},
  booktitle={2023 IEEE World Engineering Education Conference (EDUNINE)}, 
  title={A course based on BEAM Robotics for the valorization of WEEE through the development of STEAM skills}, 
  year={2023},
  volume={},
  number={},
  pages={01-06},
  abstract={This article presents a course that relates environmental education and the development of STEAM skills through the valorization of WEEE (Waste of Electrical and Electronic Equipment). As a didactic tool, the BEAM Robots are used, which are simple robots that can be built with elements extracted from WEEE. For the execution of the course, a four-phase curriculum design is developed: propaedeutics, assembly, Computational Thinking (CT), and WEEE. The course is built in a modular way and implemented virtually. The students were evaluated with pre and post-surveys, to investigate the impact of the course. In addition, evaluation activities were created that made it possible to follow the development of the students. In general, it can be concluded that the course had a positive impact on students' STEAM skills and knowledge, as well as an improvement in environmental awareness related to the creative reuse of WEEE.},
  keywords={Electronic equipment;DVD;Metals;Electronic waste;Plastics;Engineering education;Robots;STEM;STEAM;BEAM robotics;Environmental Education;WEEE;Educational robotics;Computational Thinking},
  doi={10.1109/EDUNINE57531.2023.10102868},
  ISSN={},
  month={March},}
@INPROCEEDINGS{10343392,
  author={Arslanyilmaz, Abdu and Briley, Margie and Boerio, Gregory and Petridis, Katie and Ilyas, Ramlah},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={The Effects of an Accessible Computing Curriculum for Students with Autism Spectrum Disorders}, 
  year={2023},
  volume={},
  number={},
  pages={1-6},
  abstract={There has been a limited number of studies in which a computing curriculum is designed and developed for students with Autism Spectrum Disorders (ASD), but no study has tested the effectiveness of an accessible computing curriculum for students with Autism Spectrum Disorder (ASD). Therefore, the objectives of this study are to evaluate the effectiveness of such a computing curriculum in improving the learning of computational thinking concepts (CTCs: flow control, data representation, abstraction, user-interactivity, synchronization, parallelism, and logic) by comparing computing projects developed by two groups of students (Potential Development Middle School (PDMS) and Rich Center for Autism (RCA)) of twenty-one students with ASD and by investigating the progressive improvement of a total of 312 computing projects developed by students (138 in PDMS and 174 in RCA) over 20 sessions. Students in both groups were equal in their knowledge of CTCs at the pretest, and RCA and PDMS groups were taught utilizing the accessible and original CT curriculums, respectively, in this experimental study. The results showed that the original CT curriculum was statistically significantly more effective in learning of logic. Additionally, when all seven CTCs as a single construct were examined, the original CT curriculum was statistically significantly more effective than the accessible one. Furthermore, an investigation of the gradual increase in students' computing project scores throughout 20 sessions showed that both curriculums were statistically significantly effective in progressively improving students' learning of data representation, abstraction, synchronization, parallelism, and all CTCs as a single construct. When the correlations between CTCs and sessions for individual groups (PDMS & RCA) were analyzed, both curriculums were statistically significantly effective in increasing scores of synchronization and all CTCs as a single construct. The accessible and the original CT curriculums were also statistically significantly effective in improving students' learning of data representation and abstraction, respectively.},
  keywords={Autism;Correlation;Symbols;Parallel processing;Complexity theory;Synchronization;Computing skills;accessible computing;students with Autism Spectrum Disorders;computational thinking concepts},
  doi={10.1109/FIE58773.2023.10343392},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{10578626,
  author={Calvo-Morata, Antonio and Humble, Niklas and Mozelius, Peter and Pechuel, Rasmus and Fernández-Manjón, Baltasar},
  booktitle={2024 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Games for Coding to Attract New Students to STEM}, 
  year={2024},
  volume={},
  number={},
  pages={01-08},
  abstract={There is a need to increase the number of students, especially women, choosing programming and STEM disciplines. We need innovative approaches in schools to better engage students and awake their interest in computer science. This paper addresses the need to create tools that effectively support the learning of programming and the development of computational thinking, highlighting why video games can be an effective educational tool for it and also attract new students to STEM. The Game4Coding Erasmus+ project proposes the design of a video game called CodeQuest, using a game genre that has not been frequently used before to address the teaching of programming, the monster tamer genre. We consider that video games have a number of benefits such as that stimulate active learning, are engaging for a wide range of students, and present information in a way that is attractive to learners. We want to explore this kind of game's effectiveness as a learning tool as well as its effect on the perception of STEM disciplines and programming to attract new public to coding (especially girls).},
  keywords={Video games;Games;Encoding;Engineering education;Programming profession;STEM;Game-based learning;Programming learning games;Computational thinking},
  doi={10.1109/EDUCON60312.2024.10578626},
  ISSN={2165-9567},
  month={May},}
@INPROCEEDINGS{10893514,
  author={De La Hoz, Jose L. and Restrepo, David and Vieira, Camilo},
  booktitle={2024 IEEE Frontiers in Education Conference (FIE)}, 
  title={WIP: Supporting Student Understanding of Finite Element Analysis and Computational Science: Classroom Scaffolding and ChatGPT}, 
  year={2024},
  volume={},
  number={},
  pages={1-5},
  abstract={This work-in-progress research paper presents the preliminary results of a study exploring the effectiveness of using computational notebooks to enhance student learning in a Finite Element Analysis (FEA) course for undergraduate Mechanical Engineering students. Our previous work has shown that students often face difficulties in grasping abstract concepts from mechanics of materials while simultaneously learning computational modeling. However, students recognized several advantages of using MATLAB for FEA compared to manual calculations, including significant time savings, increased efficiency, and reduced errors. Nevertheless, they also faced challenges, including a steep learning curve for MATLAB and concerns about how this limitation hinders their conceptual understanding. Despite these drawbacks, they recognized the importance and value of developing computational skills for their future careers. In this study, we extended the scaffolds and changed the sequence of activities to address the challenges the students faced in the previous iteration of our work. Specifically, we provided worked examples that students needed to use, self-explain, and modify before they engaged in programming from scratch. Also, after developing a basic understanding of how to implement FEA in MATLAB, the students used ChatGPT to generate a code that would do the same task. This activity required them to evaluate and refine automatically generated MATLAB code, as ChatGPT may provide alternative solutions that might not always work correctly. We explore three main topics to understand student experiences with and perceptions of this approach: (1) the value of using computational methods compared to manual completion for FEA; (2) the challenges and support of using MATLAB for FEA; and (3) the effectiveness of simulation tools to learn FEA. The goal of this project is two-fold: (1) supporting student learning of intricate phenomena explored in mechanics of materials, like distribution of stress, and stiffness, and (2) fostering essential computational thinking skills through practical disciplinary coding experience. By implementing these elements, the study anticipates a substantial improvement in students' understanding of FEA principles and their ability to translate them into solutions for real-world engineering challenges.},
  keywords={Codes;Scientific computing;Manuals;Transforms;Chatbots;Encoding;Finite element analysis;MATLAB;Programming profession;Stress;Mechanics of materials;computational thinking;threshold concepts;Finite Element Analysis;ChatGPT;Scaffolding},
  doi={10.1109/FIE61694.2024.10893514},
  ISSN={2377-634X},
  month={Oct},}
@ARTICLE{10749837,
  author={Betz, Johannes and Zheng, Hongrui and Jahncke, Felix and Zang, Zirui and Sauerbeck, Florian and Zheng, Y. Rosa and Biswas, Joydeep and Krovi, Venkat and Mangharam, Rahul},
  journal={IEEE Transactions on Intelligent Vehicles}, 
  title={F1TENTH: Enhancing Autonomous Systems Education Through Hands-On Learning and Competition}, 
  year={2024},
  volume={},
  number={},
  pages={1-13},
  abstract={Teaching autonomous and intelligent transportation systems in higher education has traditionally focused on theory, often lacking comprehensive coverage of the practical techniques required for real-world applications. To overcome this, we developed a new university course centered around hands-on learning with a modular autonomous small-scale vehicle platform called F1TENTH. This paper presents a detailed overview of the new course design, its underlying philosophy, the individual teaching modules, and the modular hardware/software of the F1TENTH platform. This new course was then evaluated with a survey conducted at five universities that have adopted the teaching modules for their semester-long undergraduate and graduate courses. The results show that approximately 80% of all involved students strongly agree that the hardware platform and modules significantly increased their motivation to learn. More than 70% of the students agreed that the hardware enhanced their understanding of the material The findings demonstrate that our course setup and the F1TENTH hardware effectively combine theoretical knowledge with practical application, greatly enhancing the educational outcomes and the students' computational thinking skills. Future research is needed to explore the long-term impact of hands-on learning on students' career development in intelligent autonomous systems.},
  keywords={Robots;Hardware;Education;Educational robots;Autonomous vehicles;Software;Planning;Software algorithms;Automobiles;Programming profession;Autonomous vehicles;robotics;computational thinking;machine learning;control;simulation},
  doi={10.1109/TIV.2024.3495227},
  ISSN={2379-8904},
  month={},}
@INPROCEEDINGS{9764091,
  author={Zhang, Shuhan and Cui, Chunyu},
  booktitle={2021 IEEE Integrated STEM Education Conference (ISEC)}, 
  title={Implementing Blended Learning in K-12 Programming Course: Lesson Design and Student Feedback}, 
  year={2021},
  volume={},
  number={},
  pages={38-44},
  abstract={Computational thinking (CT) has been widely integrated into K-12 classrooms through programming education. Numerous initiatives have been developed to lower down the threshold for learning programming, yet instructors may still feel ill-prepared. Blended learning approach, a combination of student-centered learning and teacher-centered instruction, has proved to be an effective teaching approach for K-12 programming courses. With the purpose of providing practical insights for the design of blended programming lessons, this study introduced an instructional unit of a K-12 programming course in a secondary school in China. It elaborated the course regarding lesson design, learning assessment, and course evaluation. The course contains 9 plugged sessions and 24 unplugged sessions, and each session consists of 1) a preview, 2) hands-on activities, and 3) a lesson summary. Student learning was evaluated with performance-based assessments, and a questionnaire was employed to collect students’ feedback for the course. The results indicated that students with low performance were the benefit the most from the course, and students tended to like visual programming tool and stage-mode learning format. Also, students with different learning backgrounds showed different preferences for the instructional elements. Suggestions are provided for further research and course design practices.},
  keywords={Visualization;Conferences;Education;Hybrid learning;Programming profession;Blended learning;Computational thinking;K- 12 education;Unplugged activities},
  doi={10.1109/ISEC52395.2021.9764091},
  ISSN={2330-331X},
  month={March},}
@INPROCEEDINGS{9962388,
  author={Aulicino, Alexa and Bakrania, Smitesh},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={A Python-based lab module to conduct thermodynamic cycle analysis}, 
  year={2022},
  volume={},
  number={},
  pages={1-6},
  abstract={A Python-based lab activity was developed for a remote Thermodynamics course to add computational thinking to traditional analytical problem solving. Python was selected to conduct the analysis because of its popularity and utility in the broader engineering field. Early exposure to this highly desired engineering skill can provide added benefits to students. Combining Python with an engaging lab experience can have a compounding effect on student learning outcomes. A five-week Python-based lab module was developed for an introductory thermal-fluid science class. The module reinforced fundamental concepts learned in lecture, while expanding on design-related analysis which is often left for advanced courses. The lab module began with an introduction to Python programming and quickly transitioned to the parametric analysis of standard Rankine, Gas Turbine, and Vapor Compression cycles. The lab module was designed to be self-guided with step-by-step instructions presented using Google Colab. This paper details the implementation and the student outcomes. Both direct and indirect assessments were conducted over two semesters of the course. Results indicate a strong positive impact on Python programming learning outcomes. Students acquired a working knowledge of Python programming and experienced how computational tools can be used to solve advanced engineering problems. At the same time, the student feedback indicated students' resistance to open-ended projects and independent learning; even if they are aware of their relevance and benefits to their future careers. Nevertheless, the positive learning outcomes were encouraging. Whether students pursue a career in thermodynamics or in a broader engineering field, this lab experience equipped them with tools that can augment their engineering skills.},
  keywords={Resistance;Knowledge engineering;Thermodynamics;Engineering profession;Internet;Problem-solving;Programming profession;Thermodynamics;Python;Computational Thinking;Open-ended;Online Learning},
  doi={10.1109/FIE56618.2022.9962388},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{9637257,
  author={Nagumo, Hideo and Oomori, Yasumasa and Takemura, Yasuhiro},
  booktitle={2021 IEEE Frontiers in Education Conference (FIE)}, 
  title={Mutual Improvement between Teaching Materials and Assessment Tools for K-12 Programming Education}, 
  year={2021},
  volume={},
  number={},
  pages={1-8},
  abstract={This Innovative Practice Full Paper presents an approach to improve teaching materials and assessment tools for K-12 programming education together by creating a virtuous cycle. Improving teaching materials for computing education is in line with the conference theme “Creating a convergence in engineering education and workforce development”. In this research, coding sheets are used as a part of the teaching materials, and the assessment tools are used to assess the algorithmic thinking ability of the students. The assumption here is that there is a mutual impact between the improvement of teaching materials and that of assessment tools. This kind of strategy is important, especially in the setting of elementary school education in Japan in which conducting a pilot study is difficult. In Japan, the new curriculum guidelines were fully implemented in April 2020 in elementary schools and in April 2021 in junior high schools respectively. They will be implemented in April 2022 in high schools. Since the announcement of the new curriculum guidelines, the boards of education in the local governments have been preparing for the programming education in the schools. However, there are still remaining problems, including the shortage of trained teachers and the lack of good assessment tools. In order to remedy the shortage of trained teachers, we designed some coding sheets for the teaching materials consisting of block parts, servo motors, DC-motors, LEDs, and sensors. In our assessment tools which are supposed to assess students' Computational Thinking ability, we included only the questions for assessing algorithmic thinking ability, as there is a limited amount of time for the assessment in schools. We have used our teaching materials and our assessment tools in some elementary schools. Based on the results of the teaching activities, we discuss the strategy to improve the teaching materials and the assessment tools together.},
  keywords={Visualization;Education;Tactile sensors;Light emitting diodes;Encoding;Sensors;Servomotors;programming education;teaching material;assessment tool;Computational Thinking;elementary school},
  doi={10.1109/FIE49875.2021.9637257},
  ISSN={2377-634X},
  month={Oct},}
@INPROCEEDINGS{9911432,
  author={Mangili, Francesca and Adorni, Giorgia and Piatti, Alberto and Bonesana, Claudio and Antonucci, Alessandro},
  booktitle={2022 International Conference on Software, Telecommunications and Computer Networks (SoftCOM)}, 
  title={Modelling Assessment Rubrics through Bayesian Networks: a Pragmatic Approach}, 
  year={2022},
  volume={},
  number={},
  pages={1-6},
  abstract={Automatic assessment of learner competencies is a fundamental task in intelligent tutoring systems. An assessment rubric typically and effectively describes relevant competencies and competence levels. This paper presents an approach to deriving a learner model directly from an assessment rubric defining some (partial) ordering of competence levels. The model is based on Bayesian networks and exploits logical gates with uncertainty (often referred to as noisy gates) to reduce the number of parameters of the model, so to simplify their elicitation by experts and allow real-time inference in intelligent tutoring systems. We illustrate how the approach can be applied to automatize the human assessment of an activity developed for testing computational thinking skills. The simple elicitation of the model starting from the assessment rubric opens up the possibility of quickly automating the assessment of several tasks, making them more easily exploitable in the context of adaptive assessment tools and intelligent tntorino systems.},
  keywords={Adaptation models;Uncertainty;Computational modeling;Logic gates;Software;Real-time systems;Bayes methods;Probabilistic reasoning;Noisy-OR Bayesian net-works;Assessment rubrics;Computational thinking},
  doi={10.23919/SoftCOM55329.2022.9911432},
  ISSN={1847-358X},
  month={Sep.},}
@ARTICLE{9904876,
  author={Mercier, Chloé},
  journal={IEEE Transactions on Cognitive and Developmental Systems}, 
  title={An Ontology to Formalize a Creative Problem Solving Activity}, 
  year={2023},
  volume={15},
  number={4},
  pages={1891-1904},
  abstract={Our study is set in an educational context: to better teach and assess 21st-century skills, such as computational thinking or creative problem solving, we propose to formalize a specific activity that involves these competencies. This activity, referred to as #CreaCube, is presented as an open-ended problem which consists of assembling a set of robotic cubes into an autonomous vehicle. We not only anchor our formalization in classical learning science frameworks but we also propose to draw on neuro-cognitive models to describe the observed behaviors of learners engaged in this activity. The chosen formalism is symbolic and is aligned on upper ontologies to ensure that the vocabulary is well specified. This allows for a better communication between the summoned research fields, namely, learning science, cognitive neuroscience, and computational modeling. Beyond this specification purpose, we suggest performing inferences using available reasoners to better guide the analysis of the observables collected during the experiments. This operationalization of a creative problem-solving activity is part of an exploratory research action. In addition, an effective proof of concept is described in this study.},
  keywords={Task analysis;Ontologies;Computational modeling;Behavioral sciences;Games;Creativity;Context modeling;Neuroscience;Problem-solving;Cognitive neuroscience;computational thinking;learning science;ontology;problem solving},
  doi={10.1109/TCDS.2022.3210234},
  ISSN={2379-8939},
  month={Dec},}
@INPROCEEDINGS{10892884,
  author={Wilson, David and Sarwar, Saquib and Najjar, Nadia},
  booktitle={2024 IEEE Frontiers in Education Conference (FIE)}, 
  title={Notional Machines for Inclusive Learning}, 
  year={2024},
  volume={},
  number={},
  pages={1-9},
  abstract={Understanding computing concepts is one of the foundational elements of computational thinking, which helps students formulate logic and algorithms for effectively developing and designing codes. However, novice learners often struggle to understand basic computing concepts, such as variables, loops, arrays, conditionals, and functions. This is often caused by the invisibility of the computing mechanism and the complexity of language syntax and conventions. Moreover, challenges in learning computing concepts can be compounded for learners with atypical conditions (e.g. visual, cognitive, and learning impairment, attention deficit, and neurodivergence). To tackle this, teachers of typical ability learners frequently use notional machines (NMs) - simplified representations (e.g. diagrams, flow charts, and analogies) created to assist novice programmers in understanding abstract concepts, program execution, and dynamics. In addition, traditional learning activities may need assistive learning interventions (ALIs) and learner-oriented practices like physical tactile models, computing artifacts, and interactive learning tools. NM approaches tend to focus on the explanation of concepts from instructor to learner, while ALIs tend to focus on learner support in activities. Both methods can provide advantages for learning, and we expect that a combined approach would provide even greater synergy for all learners. However, little consideration has been given to how NM and ALI approaches could be effectively combined. This research investigates how NM and ALI can be effectively brought together more holistically as an inclusive pedagogical tool - notional machines for inclusive learning (NMIL). In this full paper, we develop the conceptualization of NMIL, grounded in previous NM and ALI research. We also propose a structured method for creating NMIL. Finally, we also develop a physical NMIL model, based on the structured NMIL creation method, to teach lists in Python, as part of an introductory computer science course.},
  keywords={Computer science;Visualization;Codes;Computational modeling;Syntactics;Complexity theory;Logic;Python;Computational thinking;Pedagogy;Instructional design},
  doi={10.1109/FIE61694.2024.10892884},
  ISSN={2377-634X},
  month={Oct},}
@ARTICLE{10258248,
  author={Chai, Xiaolin and Sun, Yan and Gao, Yan},
  journal={Tsinghua Science and Technology}, 
  title={Towards Data-Driving Multi-View Evaluation Framework for Scratch}, 
  year={2024},
  volume={29},
  number={2},
  pages={517-528},
  abstract={As one of the most popular visual programming languages, Scratch has a lot of evaluation around it. Reasonable evaluation can help programmers understand their projects better. At the same time, it can also provide a reference for them to browse other projects in the online community. Most of the existing evaluations on Scratch are carried from three perspectives: Computational Thinking (CT) ability, visual presentation aesthetics, and code quality. Among them, the assessment of CT and code quality is mainly carried out from the program script, while the evaluation of visual aesthetics is analyzed from the perspective of image sequences generated by project execution. The single-view evaluation focuses on the performance of a program in a certain aspect and is one-sided. In this paper, we propose a multi-view evaluation framework to integrate various evaluations using different policies. We quantitatively analyze the assessment of different views driven by data. Combined with overall evaluations that represent human opinions, we analyze their differences and connections. Through experiments, we determine the weights of different integration policies, the proposed multi-view evaluation method can generate evaluation results similar to human opinions.},
  keywords={Visualization;Computer languages;Codes;Data analysis;Computed tomography;Image sequences;Scratch;Computational Thinking (CT);visual aesthetic;static analysis;integration policy;machine learning},
  doi={10.26599/TST.2023.9010016},
  ISSN={1007-0214},
  month={April},}